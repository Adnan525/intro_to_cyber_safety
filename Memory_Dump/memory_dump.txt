/lib64/ld-linux-x86-64.so.2
4	B@
30`@
D0 !
"R(B
@!PJ
P(H0
B5!$!
BH!@
 @		
MD@@
Tpo,
_%K]
(&+pj
vn>uk
KfAf
pX(6
N&RV
`vB`$
}+3Z
5Jq%
[VHK
g@Tyd<
Kuhl#%QC'
XghsZ
.w'V
G5s[
#De6i
!|5cL
dWq2.
G1)b
R*T-
BB@~
/=?|
ZX=O81
3%#u
YW	J&
^Hw?
I)]$:
(8fr
5>r@
eH:\
^XU#
m`,Y%
M sV
;	Z:
nj"K
$y[%6
F]j	C
{)V]
iwwr,
Kj+y
-]M5Hz
;pyFiK
!j#g:Nf
gN"Tn
Dh6q
\:3I
FT}X
^;6C
6Nec
{Q;k
)Z],
pF#]
9vv.6Z
a/dR
IKv.bu
Fkm{
.	TGt
jg+>"
!xqF
`%ziF
tz+2
9=/l
9SXn
$]U0
<B'LRJA
,5^q
9kH4l
s&CMM
__libc_start_main
__stack_chk_fail
stderr
__fprintf_chk
stdin
fileno
isatty
wcschr
perror
memcpy
pthread_condattr_init
strlen
setlocale
getenv
strcmp
wcscmp
nl_langinfo
mbstowcs
mbrtowc
wcslen
pthread_self
__errno_location
sysconf
calloc
wcsncmp
memmove
wcstok
strchr
stdout
_IO_putc
__printf_chk
memset
__memcpy_chk
wcsncpy
setvbuf
__vsnprintf_chk
syscall
pthread_cond_destroy
pthread_mutex_destroy
pthread_mutex_init
pthread_cond_init
pthread_mutex_lock
pthread_cond_signal
pthread_mutex_unlock
pthread_cond_timedwait
mmap64
strrchr
strncmp
confstr
strncpy
__fxstat64
fputs
__sprintf_chk
__memmove_chk
__ctype_tolower_loc
_IO_getc
fread
pthread_cond_wait
__ctype_b_loc
__rawmemchr
strcpy
memrchr
__snprintf_chk
unsetenv
wcscpy
wcsrchr
fclose
wcstombs
fopen64
strerror
__xstat64
fcntl
ioctl
fwrite
__environ
qsort
clock_gettime
clock_getres
localtime_r
fflush
__lxstat64
__fxstatat64
sigemptyset
sigaction
wmemcmp
sigaltstack
__finite
frexp
modf
readdir64
closedir
rewinddir
fdopendir
__isinf
__isnan
ldexp
lseek64
__libc_current_sigrtmin
__libc_current_sigrtmax
getpid
ungetc
geteuid
getuid
getegid
getgid
pthread_attr_init
pthread_attr_setscope
pthread_attr_destroy
__realpath_chk
ftell
rewind
flockfile
funlockfile
__uflow
munmap
__strcpy_chk
fdopen
mkdir
mkdirat
openat64
rename
renameat
localeconv
wcsftime
uname
fputc
fchdir
getloadavg
__isinff
unlink
unlinkat
waitpid
pipe2
pipe
__open64_2
faccessat
access
tzset
gmtime_r
mktime
clock_nanosleep
sendfile64
utimensat
futimens
flistxattr
llistxattr
fchmod
fchmodat
rmdir
readlinkat
getrusage
times
fstatvfs64
__ctype_toupper_loc
fork
clock_settime
wcstol
getrlimit64
setrlimit64
abort
pthread_exit
clearerr
fgets
feof
__vfprintf_chk
getppid
wcscoll
alarm
strsignal
strstr
pause
sigfillset
mprotect
sigaddset
setgroups
sched_getparam
sched_setparam
sched_setscheduler
sigwaitinfo
sigtimedwait
setitimer
getitimer
wcsxfrm
sigwait
getgroups
getresgid
getresuid
__sched_cpualloc
__sched_cpufree
sched_setaffinity
nice
umask
sched_getscheduler
sched_rr_get_interval
sched_yield
setuid
seteuid
setreuid
setgid
setegid
setregid
getsid
setsid
setpgid
tcgetpgrp
tcsetpgrp
setresuid
setresgid
waitid
readv
pread64
preadv64
writev
pwrite64
pwritev64
posix_fallocate64
posix_fadvise64
setpwent
getpwent
endpwent
getpwuid_r
ttyname_r
ctermid
getlogin
fpathconf
ferror
getgrouplist
dcgettext
bind_textdomain_codeset
getpwnam_r
initgroups
bindtextdomain
sigismember
sigpending
sched_getaffinity
__sched_cpucount
posix_spawn_file_actions_init
posix_spawn_file_actions_addopen
posix_spawn_file_actions_addclose
posix_spawn_file_actions_adddup2
posix_spawn_file_actions_destroy
posix_spawnattr_init
posix_spawnattr_setpgroup
posix_spawnattr_setsigmask
posix_spawnattr_destroy
posix_spawnattr_setsigdefault
posix_spawnattr_setschedpolicy
posix_spawnattr_setschedparam
posix_spawnattr_setflags
posix_spawnp
posix_spawn
execv
killpg
lockf64
ftruncate64
getpgid
wait4
fchown
lchown
fchownat
symlinkat
symlink
mkfifoat
mkfifo
__xmknodat
__xmknod
chroot
fexecve
fgetxattr
lgetxattr
fsetxattr
lsetxattr
fremovexattr
lremovexattr
system
getpriority
setpriority
splice
sched_get_priority_max
sched_get_priority_min
wait3
dup3
fsync
fdatasync
eventfd
eventfd_read
eventfd_write
setns
unshare
pthread_condattr_setclock
pthread_sigmask
sem_timedwait
pthread_key_delete
sem_post
pthread_kill
pthread_setspecific
sem_destroy
pthread_create
pthread_getspecific
pthread_getcpuclockid
pthread_key_create
sem_init
pthread_detach
sem_trywait
pthread_attr_setstacksize
sem_wait
__gmon_start__
dlsym
dlopen
dlerror
forkpty
login_tty
openpty
hypot
floor
fmod
round
atan2
ceil
sincos
__tls_get_addr
libpthread.so.0
libdl.so.2
libutil.so.1
libm.so.6
libc.so.6
ld-linux-x86-64.so.2
PySys_SetArgv
PyExc_RecursionError
_Py_strhex_with_sep
__libc_csu_fini
PyRun_InteractiveLoop
PyUnicode_FromFormat
PyExc_KeyboardInterrupt
_PyImport_FrozenTest
PyInit__io
PyImport_GetMagicNumber
PyNumber_Negative
_PyCrossInterpreterData_Lookup
PyObject_SetItem
PyMarshal_ReadLastObjectFromFile
_PyUnicode_IsPrintable
PyMapping_Items
PyFunction_GetGlobals
PyList_New
Py_GetBuildInfo
PyInit__collections
PyUnstable_InterpreterFrame_GetLine
PyExc_ProcessLookupError
_PyObject_FastCallDictTstate
PyMarshal_ReadLongFromFile
_PyUnicode_ScanIdentifier
PyWideStringList_Insert
Py_IsolatedFlag
PyFile_GetLine
PyUnicode_AsWideChar
PyObject_Init
PyExc_SystemError
PySequence_Check
_PyLong_FromDigits
PyEval_ReleaseLock
PyType_FromMetaclass
_PyErr_ExceptionMatches
PyImport_ImportFrozenModuleObject
PyInit__symtable
_PyUnicode_EncodeUTF16
PyDict_SetItemString
PyConfig_SetString
PyLong_AsLongLongAndOverflow
PyExc_PermissionError
_PyTraceMalloc_ClearTraces
_Py_NewReferenceNoTotal
_PyUnicode_AsUTF8String
PyInit_pwd
PyNumber_InPlaceFloorDivide
PyUnicodeIter_Type
PyDict_Size
_PyInterpreterState_GetEvalFrameFunc
PyTraceMalloc_Untrack
PyDictRevIterValue_Type
_PyDict_MergeEx
Py_SetRecursionLimit
PyObject_CopyData
_Py_GetForceASCII
PyExc_UnicodeTranslateError
PyThreadState_GetFrame
PyThreadState_EnterTracing
PyByteArray_Size
PyType_SUPPORTS_WEAKREFS
PySet_Clear
_PyObject_DebugTypeStats
_PyTrash_cond
PyUnicode_Resize
_PyLong_FromUid
Py_Initialize
_PyInterpreterID_LookUp
PyModule_AddIntConstant
PySet_New
Py_GetCompiler
PyInit__string
_Py_EncodeLocaleEx
PyInterpreterState_ThreadHead
PyCFunction_GetFlags
PyFunction_NewWithQualName
PyFilter_Type
PyModule_Type
_PyUnicode_IsXidContinue
PyArg_ParseTupleAndKeywords
_Py_IncRef
PyException_SetTraceback
PyObject_AsWriteBuffer
PyThread_get_key_value
PyDict_Items
_Py_write_noraise
PyExc_NotImplementedError
_PyUnicode_ToNumeric
PyUnicode_AsRawUnicodeEscapeString
PyExc_NotADirectoryError
PyProperty_Type
PyFloat_GetInfo
PyUnicodeTranslateError_SetStart
PyMethod_Type
PyUnicode_DecodeUTF32
Py_BytesMain
PyList_Insert
PyUnicodeDecodeError_SetStart
PyArg_Parse
PyUnicodeTranslateError_SetEnd
_PyErr_Clear
PyVectorcall_NARGS
PyExc_ReferenceError
PyByteArray_Resize
PyCFunction_GetSelf
PySys_WriteStderr
_PyFloat_FormatAdvancedWriter
PyThread_tss_create
PyOS_mystricmp
_PyObject_LookupAttrId
PyMapping_Check
PyGILState_Release
PyFloat_Type
_PyBytes_Resize
PyDictProxy_New
_PyTime_FromMillisecondsObject
PyTuple_Type
_PyLong_UnsignedLong_Converter
PyObject_Format
PyUnicode_AsUTF16String
PyContext_CopyCurrent
PyNumber_Lshift
PyRun_FileEx
PyFunction_GetModule
PyByteArray_FromObject
PyEval_GetLocals
PyList_AsTuple
_PyImport_IsInitialized
PyObject_ClearWeakRefs
PyUnstable_WritePerfMapEntry
PyInit__tracemalloc
_PyThreadState_UncheckedGet
PyNumber_AsSsize_t
PyDescr_IsData
PyObject_DelItemString
Py_Main
PyMarshal_ReadObjectFromString
_PyTraceMalloc_GetObjectTraceback
PyDescr_NewMember
_PyUnicode_CheckConsistency
PyModuleDef_Init
PyUnicode_DecodeUTF7
_PyDict_CheckConsistency
PyDictRevIterKey_Type
_Py_ascii_whitespace
PySet_Size
PyRun_String
PyExc_ConnectionRefusedError
PyInit__thread
_Py_IsInterpreterFinalizing
_PyStack_AsDict
_PyCodec_Lookup
PyRun_SimpleString
_Py_Sigset_Converter
PyThread_tss_free
PyEval_RestoreThread
PyBytes_Repr
_PyUnicode_WideCharString_Converter
PySys_SetArgvEx
PyErr_RangedSyntaxLocationObject
PyStdPrinter_Type
PySequence_In
PySequence_Count
PyErr_SetInterrupt
PyBuffer_SizeFromFormat
PyFrame_GetLocals
PyLong_FromDouble
PyUnicodeEncodeError_GetEncoding
_PyRun_AnyFileObject
PyFunction_ClearWatcher
_PyUnicode_IsXidStart
PyExc_SyntaxWarning
_Py_GetErrorHandler
_PyAsyncGenWrappedValue_Type
_Py_BreakPoint
_PyRun_InteractiveLoopObject
PyModule_SetDocString
Py_EnterRecursiveCall
PyThreadState_LeaveTracing
PyMemoryView_FromObject
_Py_c_pow
PyFrame_New
PyUnstable_Object_GC_NewWithExtraData
_Py_SetProgramFullPath
_PyErr_NormalizeException
_PyLong_FromGid
PyMem_Free
_Py_hashtable_steal
_Py_GetConfigsAsDict
PyLongRangeIter_Type
PyRun_File
_PyObject_VisitManagedDict
PyCodec_Register
_PyUnicode_Copy
PyUnicodeDecodeError_GetReason
PyConfig_InitIsolatedConfig
_PyObject_IsFreed
PyUnicode_Count
PyGen_GetCode
PyEnum_Type
PyExc_SystemExit
_PyObject_IsAbstract
PyCode_Addr2Line
PyCapsule_SetName
PyUnicode_FromWideChar
_PyCode_ConstantKey
_PyEval_GetBuiltinId
PyFrame_GetLineNumber
PyMethod_Self
PyErr_SetFromErrno
Py_FrozenFlag
_PyTime_ObjectToTimeval
PyCFunction_NewEx
PyCapsule_GetName
PyUnicode_DecodeFSDefaultAndSize
_PyCrossInterpreterData_NewObject
_PyDeadline_Init
PyLong_FromUnsignedLongLong
_PyMem_SetDefaultAllocator
PyNumber_InPlaceAdd
PyThread_start_new_thread
PyType_ClearCache
PyObject_AsReadBuffer
PyBuffer_Release
_PyErr_GetTopmostException
PyDict_Unwatch
PyUnicodeEncodeError_SetReason
PyLong_AsUnsignedLongLong
_PyErr_SetHandledException
_PyConfig_AsDict
_PyArg_ParseStackAndKeywords_SizeT
PyODict_Type
PyOS_Readline
PyNumber_Add
PyObject_GetAttrString
PyFloat_Unpack4
Py_HashRandomizationFlag
_PyCode_Validate
_PyInterpreterState_IDIncref
_Py_hashtable_set
PyMem_RawMalloc
PyStructSequence_New
PyCell_Type
PyObject_CallMethodObjArgs
PyCodec_RegisterError
PySet_Contains
_Py_FatalErrorFormat
Py_Finalize
_PyRuntime
PyWideStringList_Append
PyEval_CallObjectWithKeywords
PyByteArray_Type
_PyTime_GetSystemClock
PyUnstable_PerfMapState_Init
PyLong_AsUnsignedLongLongMask
_PyStructSequence_NewType
PySequence_SetSlice
PyObject_LengthHint
PyThread_get_thread_ident
_PyLong_New
_PyUnicode_AsASCIIString
PyObject_Type
PyUnicode_Join
_PyUnicode_IsLinebreak
PyExc_BufferError
PyHash_GetFuncDef
Py_QuietFlag
PyDictRevIterItem_Type
PyObject_InitVar
PyWeakref_NewProxy
PyFile_FromFd
PyDict_MergeFromSeq2
_Py_hashtable_size
PyObject_Bytes
_PyDict_ContainsId
PyThread_get_thread_native_id
PyException_GetCause
PyObject_CallOneArg
PyBuffer_IsContiguous
_PyLong_FormatBytesWriter
PyDict_Contains
PyFile_OpenCode
PyList_SetSlice
PyImport_AddModule
PyInit__codecs
_PyDictView_New
PyBytes_FromStringAndSize
_Py_set_inheritable
_PyUnicodeWriter_WriteSubstring
PySequence_InPlaceRepeat
_PyObject_GenericGetAttrWithDict
PyBytes_Type
_PyType_GetDocFromInternalDoc
_PyUnicode_IsTitlecase
Py_PreInitializeFromArgs
PyStatus_Exception
_Py_set_inheritable_async_safe
_PyThread_CurrentFrames
PyObject_SetAttrString
PyNumber_Float
PyUnstable_InterpreterFrame_GetLasti
PyThread_delete_key
PyWrapperDescr_Type
_Py_parse_inf_or_nan
PyThread_tss_is_created
PyBuffer_ToContiguous
PyUnicode_BuildEncodingMap
PyListRevIter_Type
PyMapping_Keys
PyEval_GetFuncName
_PyTraceMalloc_GetMemory
PyErr_WarnEx
_PyErr_SetNone
_PyUnicode_DecodeRawUnicodeEscapeStateful
Py_EndInterpreter
PyThread_exit_thread
_edata
PyWrapper_New
PyImport_ExecCodeModuleWithPathnames
PyODictValues_Type
PyDictIterItem_Type
PyUnstable_Long_CompactValue
PyUnicodeEncodeError_SetStart
_Py_Dealloc
PyInterpreterState_Next
PyFrame_GetBuiltins
Py_DebugFlag
PyModule_AddFunctions
_PyByteArray_empty_string
PyModule_NewObject
PySys_AddWarnOptionUnicode
_Py_hashtable_len
PyUnicodeTranslateError_GetObject
PyObject_HasAttrString
_PyDict_Contains_KnownHash
PyUnicodeDecodeError_SetReason
PyUnicode_FromFormatV
PyDescr_NewWrapper
PyObject_GenericGetDict
PyType_Watch
_PyTraceMalloc_GetTraces
PyUnicode_GetDefaultEncoding
PyOS_strtol
_Py_fstat
PyObject_GC_Del
_PyObject_FunctionStr
PyType_GetSlot
PyUnicode_GetSize
_PyCrossInterpreterData_Release
_PyObject_CallFunction_SizeT
PyCodec_Encode
PyFloat_Unpack8
PyIter_Next
_PyLong_Sign
PyMarshal_WriteLongToFile
PyNumber_Absolute
PyUnstable_Code_SetExtra
PyUnicode_AsUCS4Copy
_PyTuple_Resize
_PyCompile_Assemble
_PyInterpreterState_IDInitref
PyObject_Dir
_PyInterpreterID_Type
PyInit__operator
PyInstanceMethod_Type
PyNumber_Multiply
PyLong_FromSize_t
_Py_DumpDecimal
_PyUnicode_Equal
_PyBytesWriter_Prepare
PyUnicodeEncodeError_SetEnd
_PyTime_AsTimevalTime_t
_Py_NotImplementedStruct
PyPreConfig_InitIsolatedConfig
_PyUnicode_WideCharString_Opt_Converter
PyErr_NewExceptionWithDoc
_PyInterpreterState_GetIDObject
_PyType_Name
_PyUnicode_IsCaseIgnorable
_PyUnicode_FindMaxChar
PySlice_GetIndicesEx
Py_FileSystemDefaultEncoding
PyUnicode_ReadChar
PyThread_acquire_lock
PyConfig_SetBytesArgv
_PyLong_NumBits
PyObject_Str
_PyThread_at_fork_reinit
_PyUnicode_FastFill
PyConfig_SetArgv
_PyUnicode_InsertThousandsGrouping
_Py_wrealpath
PyArg_ValidateKeywordArguments
PyUnicode_Append
PyExc_BytesWarning
_PyInterpreterState_SetNotRunningMain
_PyInterpreterState_LookUpID
_PyErr_Display
_PyEval_GetSwitchInterval
PyUnicode_FSConverter
_Py_hashtable_clear
_PyLong_Rshift
PySeqIter_New
PyErr_WarnExplicitFormat
PyUnicode_WriteChar
PyContext_New
_PyUnicodeWriter_Dealloc
PyRun_InteractiveOne
PyObject_RichCompare
_PyUnicodeTranslateError_Create
PyGC_Disable
PyRun_InteractiveOneFlags
_PyTime_FromTimeval
_PyObject_LookupAttr
PyState_RemoveModule
PyImport_ExecCodeModuleObject
PyCodec_Encoder
PyMap_Type
_PyObject_RealIsSubclass
PyCodec_XMLCharRefReplaceErrors
PyRun_FileExFlags
PyDict_AddWatcher
_Py_HashDouble
_Py_get_blocking
Py_SetStandardStreamEncoding
_PyState_AddModule
PyBytesIter_Type
PyImport_GetModuleDict
_PyTraceMalloc_GetTracebackLimit
_PyUnicode_EncodeCharmap
PyUnicode_DecodeUTF8Stateful
PyObject_GC_Track
PyUnicodeTranslateError_SetReason
_PyImport_CheckSubinterpIncompatibleExtensionAllowed
PyUnicode_AsUnicodeEscapeString
_PyArg_VaParseTupleAndKeywordsFast
PyUnicode_CopyCharacters
_PyRuntime_Initialize
_PyArg_ParseTupleAndKeywordsFast_SizeT
PyUnicode_EncodeLocale
PyThread_get_stacksize
_PyTime_Add
PyErr_GetRaisedException
_PyInterpreterState_HasFeature
PyExc_RuntimeError
PyCMethod_New
PyErr_SetImportError
_PyThreadState_New
PyExc_MemoryError
PyNumber_InPlaceMatrixMultiply
PyImport_FrozenModules
_PyRun_SimpleFileObject
_PySys_GetSizeOf
PyExc_Warning
_Py_trampoline_func_end
PyOS_InputHook
PyRun_AnyFileEx
PyModule_GetFilenameObject
Py_GetProgramName
Py_CompileStringExFlags
Py_FrozenMain
_PyArg_UnpackKeywords
Py_InitializeEx
_PyUnicode_EQ
_PyImport_ReleaseLock
PyNumber_Long
_PyImport_FixupBuiltin
_PyArg_NoKwnames
_PyObject_HasLen
PySequence_DelItem
_PyErr_SetKeyError
PyFunction_GetDefaults
PyExc_ConnectionError
_Py_UTF8_Edit_Cost
PyCodec_KnownEncoding
PyObject_SelfIter
_PyInterpreterState_GetMainModule
PyErr_GivenExceptionMatches
_PyObject_Call_Prepend
_PyErr_CheckSignalsTstate
PyExc_UserWarning
PyObject_IsInstance
PyUnicode_DecodeRawUnicodeEscape
_Py_hashtable_new
_PyBytesWriter_Finish
PyErr_WarnExplicit
_PyImport_SetModuleString
PyDict_Merge
PyUnicodeDecodeError_GetObject
_PyTime_AsSecondsDouble
PyObject_DelItem
PyCodec_BackslashReplaceErrors
PyExc_FutureWarning
PyDictValues_Type
_PyBytes_Find
PyInit__signal
PyMember_GetOne
Py_InitializeFromConfig
PyMapping_GetItemString
PyMethod_New
_PyObject_GC_New
PyUnicode_Contains
PyException_GetTraceback
PyObject_GetItem
_PyEval_SetTrace
PyExc_Exception
_PyBufferWrapper_Type
PyInit__locale
PyExc_ValueError
PyException_GetArgs
_Py_EncodeLocaleRaw
_PyRuntimeState_Fini
PyEval_EvalCode
PyRun_SimpleFileEx
_Py_HandleSystemExit
PyByteArrayIter_Type
_PyCrossInterpreterData_Init
PyInit_posix
PyExc_DeprecationWarning
_PyCode_New
_PyArg_ParseStack
PyType_ClearWatcher
_PyInterpreterState_IDDecref
_Py_WriteIndentedMargin
PyBuffer_FillContiguousStrides
_Py_VaBuildStack_SizeT
PyObject_Malloc
_PyArena_AddPyObject
PyThreadState_Delete
PyModule_GetState
_PyEval_SliceIndexNotNone
Py_SetPath
PyExc_TypeError
PyBytes_Concat
PyUnicode_AsEncodedObject
PyObject_HashNotImplemented
_PyTime_AsNanosecondsObject
PyUnicodeEncodeError_GetObject
PyType_GenericNew
_PyLong_Frexp
Py_BytesWarningFlag
PySlice_Type
PyIndex_Check
PyThread_acquire_lock_timed
PyThreadState_SetAsyncExc
PyGILState_Ensure
PyErr_SyntaxLocation
_PyObject_LookupSpecial
Py_Exit
PyUnicode_DecodeLocaleAndSize
PyInterpreterState_GetID
_Py_SourceAsString
PyEval_EvalFrameEx
_PyTuple_DebugMallocStats
PyModule_GetNameObject
PyGILState_GetThisThreadState
Py_GenericAliasType
PyModule_New
_PyTraceMalloc_Init
_PyErr_Fetch
PyEval_ThreadsInitialized
PyMem_SetAllocator
PyErr_FormatV
_PyUnicode_IsCased
_PyLong_FromByteArray
PyCodec_NameReplaceErrors
_PyCompile_OptimizeCfg
_PyInterpreterState_SetConfig
PySequence_Contains
PyUnstable_Code_GetExtra
PyStaticMethod_New
PyUnicode_AsEncodedString
PyTuple_GetItem
PyType_Unwatch
PyUnicode_IsIdentifier
PyMember_SetOne
_PyArg_UnpackStack
PyFloat_Unpack2
PyODict_New
PyInit_atexit
PyErr_PrintEx
PyTraceMalloc_Track
_PyTime_FromTimespec
_PyFrame_IsEntryFrame
_Py_str_to_int
PyByteArray_Concat
_PyLong_Copy
PyVectorcall_Function
PyIter_Send
PyUnicodeDecodeError_GetStart
PyMem_Realloc
_PyUnicode_FromId
PyMemoryView_Type
PyExceptionClass_Name
PyByteArray_AsString
_PyDict_Next
PyGen_Type
Py_XNewRef
PyComplex_Type
_Py_write
_PyEval_MakePendingCalls
PyContext_Type
PyRun_FileFlags
PyExc_TabError
PyNumber_InPlaceAnd
PySys_SetPath
_Py_c_prod
_Py_hashtable_new_full
_Py_HashBytes
_PyImport_FrozenStdlib
PyTraceBack_Type
_Py_Uid_Converter
_Py_ctype_table
PyExc_BaseExceptionGroup
PyCode_Type
PySys_SetObject
_PyObject_Call
PySys_HasWarnOptions
PySequence_SetItem
_PyAsyncGenAThrow_Type
PyUnicode_Translate
PySeqIter_Type
_Py_add_one_to_index_C
PyContextVar_Set
Py_VerboseFlag
_PyImport_FixupExtensionObject
Py_NewInterpreter
PyBytes_FromFormatV
_PyNamespace_Type
_PyArg_VaParseTupleAndKeywords_SizeT
PyFrame_LocalsToFast
PyExc_UnicodeWarning
_PyDebugAllocatorStats
_PyUnicode_IsUppercase
PyOS_snprintf
PySequence_GetItem
_Py_FatalErrorFunc
_PyBytesWriter_Init
_PyWarnings_Init
PyCode_Optimize
PyConfig_Read
PyExc_ConnectionResetError
PyTraceBack_Here
Py_CompileStringFlags
_Py_DecodeLocaleEx
PyUnicode_DecodeLatin1
PyFunction_SetVectorcall
_PyUnicodeWriter_Init
PyContext_Exit
PyFunction_GetAnnotations
PyOS_AfterFork_Parent
PySequence_GetSlice
PyInterpreterState_Main
_PyNotImplemented_Type
PyMarshal_WriteObjectToString
_PyTime_FromSecondsObject
_PyImport_FrozenBootstrap
PyPickleBuffer_FromObject
_PyEval_GetBuiltin
PyUnstable_Type_AssignVersionTag
_PyObject_FastCall
PyObject_CallFinalizerFromDealloc
_PyTraceBack_Print_Indented
PySymtable_Lookup
_PyCode_CheckLineNumber
Py_GetRecursionLimit
PyObject_Not
_PyArg_ParseTupleAndKeywordsFast
_Py_dg_strtod
PyFile_OpenCodeObject
_PyWeakref_CallableProxyType
_PyModule_ClearDict
PyOS_setsig
_PyWeakref_ClearRef
PyExc_StopAsyncIteration
_PyRuntimeState_Init
PyObject_Free
_PyTime_AsMilliseconds
_PyType_GetDict
_PyDict_GetItemIdWithError
_PyInterpreterState_SetRunningMain
PyUnicode_Partition
PyInstanceMethod_New
_PyErr_FormatFromCauseTstate
_PyOS_IsMainThread
PyUnicode_GetLength
PyCell_Set
PyNumber_InPlaceTrueDivide
PyLong_AsVoidPtr
PyLong_FromSsize_t
PyFloat_FromDouble
_PyArg_VaParseTupleAndKeywordsFast_SizeT
Py_EncodeLocale
_PyWideStringList_Copy
PyUnicode_RSplit
_PyArg_Parse_SizeT
PyErr_SetImportErrorSubclass
PyCapsule_Import
_Py_DumpTraceback
_PyUnicode_XStrip
PyType_Ready
_PyPathConfig_ClearGlobal
_PyTraceBack_FromFrame
PyRun_AnyFile
PyLong_FromLong
PyUnicode_EncodeFSDefault
PyThread_create_key
PySys_FormatStdout
_PyList_Extend
_PyUnicodeWriter_WriteLatin1String
PyFunction_GetKwDefaults
PyComplex_ImagAsDouble
_PyTraceback_Add
Py_IgnoreEnvironmentFlag
PyFile_WriteObject
PyLong_AsSsize_t
PyInterpreterState_Delete
PyOS_string_to_double
_PyErr_NoMemory
_PyLong_DivmodNear
_PyArg_VaParse_SizeT
PyBytes_Size
PyObject_RichCompareBool
PyDict_GetItem
PyFile_WriteString
PyObject_AsCharBuffer
_PyArg_BadArgument
PyUnstable_Exc_PrepReraiseStar
PyModule_GetFilename
PyBuffer_FillInfo
_PyObject_GetCrossInterpreterData
_PyLong_GCD
Py_HasFileSystemDefaultEncoding
PyCFunction_Call
Py_PreInitialize
PyLong_FromVoidPtr
_PyErr_ChainExceptions1
PyGen_New
Py_UTF8Mode
_PyUnicode_DecodeUnicodeEscapeStateful
PyObject_GetArenaAllocator
PySequence_Size
_PyException_AddNote
PyGC_IsEnabled
PySys_GetXOptions
PyErr_NewException
PyObject_CheckBuffer
PyModule_GetDef
PyType_GetTypeDataSize
_PyCoroWrapper_Type
PyEval_GetFrame
PyCodec_IncrementalDecoder
PyEval_EvalFrame
PyUnstable_Eval_RequestCodeExtraIndex
_PyBytesWriter_Alloc
PyModule_GetName
_PyTime_AsNanoseconds
PyEval_GetBuiltins
PyContextVar_Get
PyCell_New
PyExc_IsADirectoryError
PySequence_DelSlice
PyContextToken_Type
_PyImport_GetModuleAttrString
PyBool_FromLong
__data_start
Py_InteractiveFlag
PyExc_ArithmeticError
PyObject_GetTypeData
PySequence_Concat
_PyArg_NoPositional
PyClassMethod_New
_PyErr_SetLocaleString
PyContextVar_New
_PyErr_Print
PyList_Append
_Py_CheckRecursiveCall
PyUnicode_AsCharmapString
_Py_RestoreSignals
PyDict_Clear
_Py_Gid_Converter
PyImport_ExecCodeModule
_PyErr_Format
_Py_string_to_number_with_underscores
_PyInterpreterState_RequireIDRef
_PyOS_InterruptOccurred
PyCapsule_IsValid
PySlice_AdjustIndices
_Py_normpath
_PyPreConfig_InitCompatConfig
PyImport_ImportModuleLevel
PyStatus_NoMemory
Py_GetExecPrefix
PyDict_Update
PyContext_Enter
_PyThreadState_Init
PyOS_mystrnicmp
PyUnicode_Tailmatch
_PyArg_ParseStackAndKeywords
_PyObject_GetMethod
_PyBytes_DecodeEscape
PyExc_KeyError
PySys_AddXOption
PyNumber_Or
PyAsyncGen_Type
PyDictKeys_Type
PyErr_WarnExplicitObject
PyExc_OSError
_PyLong_FormatWriter
PyImport_GetModule
Py_MakePendingCalls
_Py_strhex_bytes
PySetIter_Type
_Py_IsFinalizing
PyExc_IOError
PyUnicode_DecodeLocale
PyModuleDef_Type
_PyUnicode_FastCopyCharacters
PyNumber_And
_PyTrash_begin
PyExc_EnvironmentError
PyFrame_GetGenerator
_Py_FalseStruct
_PyDict_MaybeUntrack
_PyWeakref_GetWeakrefCount
PyImport_GetImporter
_PyArg_UnpackKeywordsWithVararg
_PyModule_CreateInitialized
_PyImport_ClearExtension
PyFrame_GetCode
Py_AddPendingCall
PyBytes_ConcatAndDel
_Py_IsCoreInitialized
_PyErr_ChainStackItem
PyLong_AsUnsignedLongMask
_Py_c_neg
PyRun_InteractiveLoopFlags
_PyMethodWrapper_Type
PyThread_set_key_value
Py_GetPrefix
_PyCompile_CodeGen
PyObject_CallFunction
PyOS_double_to_string
_PyNamespace_New
PyModule_AddObjectRef
PyType_GetModule
PyDescr_NewGetSet
_PyThread_CurrentExceptions
PyZip_Type
_PyGen_Finalize
PyExc_TimeoutError
_PyCrossInterpreterData_UnregisterClass
PyCodec_StrictErrors
PyUnicode_DecodeCharmap
PyFile_NewStdPrinter
_Py_stat
PyStructSequence_InitType2
PyTuple_New
PySequence_Index
_Py_GetEnv
_PyTime_GetMonotonicClockWithInfo
PyLong_AsSize_t
PyObject_GenericGetAttr
PyThreadState_Get
_PyArg_CheckPositional
PyErr_SetRaisedException
PyExc_OverflowError
_Py_PreInitializeFromPyArgv
PyDict_DelItem
_Py_DecodeUTF8Ex
PyCode_GetCode
PyLong_AsLongAndOverflow
PyFrame_FastToLocals
_PyType_CalculateMetaclass
_PyTraceMalloc_Start
PyThreadState_GetID
PyNumber_Remainder
_Py_GetConfig
Py_InspectFlag
PyType_Type
PySys_GetObject
_PySlice_FromIndices
_PyEval_SignalReceived
_PyDict_SetItem_KnownHash
_Py_hashtable_hash_ptr
PyErr_BadArgument
_IO_stdin_used
PyObject_ASCII
PyType_Modified
PyArg_UnpackTuple
PyExc_FloatingPointError
_PySequence_IterSearch
_PyUnicodeWriter_WriteASCIIString
PyLong_GetInfo
PyObject_SetAttr
Py_CompileString
_PyManagedBuffer_Type
Py_BuildValue
PyModule_AddType
PySequence_Length
PyInstanceMethod_Function
_PyDict_Pop
Py_ExitStatusException
_PyObject_Dump
PyImport_ReloadModule
_PyTime_GetSystemClockWithInfo
_Py_wgetcwd
PyBytes_FromString
PyUnicodeDecodeError_GetEnd
PyUnicode_FromObject
_PyUnicode_IsDecimalDigit
PySet_Discard
PyFloat_GetMin
PyBuffer_GetPointer
_PyArgv_AsWstrList
PyErr_Occurred
_Py_DumpHexadecimal
PySuper_Type
PyFunction_GetCode
PyExc_ConnectionAbortedError
_Py_dg_dtoa
_PyObject_GC_Resize
PyMem_SetupDebugHooks
PyModule_Create2
_Py_EllipsisObject
_PyUnicode_IsWhitespace
PyObject_Length
PyFloat_Pack2
_Py_DumpASCII
Py_GenericAlias
PyLong_AsLong
PyUnicodeDecodeError_SetEnd
_Py_convert_optional_to_ssize_t
PyUnicode_Replace
PyObject_SetArenaAllocator
PyPickleBuffer_Release
PyExc_EOFError
PyImport_ImportModule
PyFloat_Pack4
_PyDict_SizeOf
_PyDict_DebugMallocStats
_PyMem_Strdup
PyUnicode_AsDecodedUnicode
_PyTime_gmtime
PyOS_strtoul
_PyErr_WriteUnraisableMsg
PyFloat_Pack8
PyImport_AddModuleObject
_PyDict_GetItem_KnownHash
_PyWideStringList_Clear
PyObject_CallObject
PyList_SetItem
PyImport_ExecCodeModuleEx
Py_LeaveRecursiveCall
PyImport_ImportModuleNoBlock
_PyArena_Free
PyThread_GetInfo
_PyExc_PrepReraiseStar
PyEval_GetGlobals
Py_IsNone
PyObject_VectorcallDict
_PyObject_DebugMallocStats
Py_FileSystemDefaultEncodeErrors
PyNumber_InPlaceOr
PyImport_ImportFrozenModule
PyNumber_InPlaceXor
Py_OptimizeFlag
PyState_FindModule
_Py_InitializeMain
_PyBytes_ReverseFind
PyTuple_GetSlice
PyUnicode_Split
PyConfig_Clear
_PyTraceMalloc_GetTracedMemory
PyRun_StringFlags
_PyObject_NewVar
_PyTime_AsTimespec_clamp
PyInit_time
PyCompile_OpcodeStackEffect
PyObject_CallFunctionObjArgs
PyUnicode_AsUCS4
PyConfig_InitPythonConfig
_Py_GetLocaleconvNumeric
_Py_device_encoding
Py_ReprEnter
PyTuple_SetItem
PyDict_GetItemString
PyMem_RawFree
PyList_Reverse
_PyObject_CallMethod_SizeT
Py_Version
PyEval_EvalCodeEx
_PyUnicode_JoinArray
_PyUnicode_EqualToASCIIString
__libc_csu_init
_PyUnicode_ToTitleFull
PyMapping_SetItemString
PyList_Sort
_PyTime_AsTimespec
PyObject_Size
Py_GetProgramFullPath
_Py_get_xoption
PyCapsule_SetDestructor
PyMarshal_Init
_PyImport_GetModuleId
_PyObject_SetAttrId
PyCodec_IncrementalEncoder
PyGILState_Check
PyUnicode_DecodeUnicodeEscape
_Py_wreadlink
PyCallIter_Type
_PyArg_ParseTuple_SizeT
_PyObject_CallMethodId_SizeT
_PyThreadState_DeleteCurrent
_Py_CheckFunctionResult
_PyCodec_EncodeText
_Py_fopen_obj
PyExc_UnicodeDecodeError
PyUnicode_CompareWithASCIIString
_PyLong_FormatAdvancedWriter
Py_NewInterpreterFromConfig
PyInit_errno
PyUnicode_Find
PyImport_GetMagicTag
_PyUnicode_AsLatin1String
PyInit__imp
_Py_c_sum
PyUnicode_DecodeUTF8
_Py_closerange
_Py_DisplaySourceLine
_PyTuple_MaybeUntrack
_Py_hashtable_foreach
PyConfig_SetWideStringList
_Py_NoneStruct
_PyErr_SetFromPyStatus
PyExc_ModuleNotFoundError
_Py_IsLocaleCoercionTarget
PyList_GetSlice
PyExc_ZeroDivisionError
PyUnicode_AsUTF32String
_Py_fstat_noraise
Py_IsInitialized
PyErr_SetFromErrnoWithFilenameObject
_PyToken_TwoChars
PyMemberDescr_Type
PyFunction_SetAnnotations
PyCoro_New
_PyEval_SetSwitchInterval
_Py_WriteIndent
PyObject_Vectorcall
_PyMem_RawStrdup
PyOS_AfterFork_Child
PyThreadState_Next
_Py_SetLocaleFromEnv
PyRun_AnyFileFlags
_Py_get_env_flag
_PyConfig_FromDict
_PyUnicodeWriter_PrepareInternal
Py_UniversalNewlineFgets
PyUnicode_RichCompare
PyTupleIter_Type
_PyUnicode_EqualToASCIIId
_PyInterpreterState_GetConfigCopy
_PyUnicode_ToDecimalDigit
_PyLong_Format
PySys_AddAuditHook
PyFloat_AsDouble
Py_DontWriteBytecodeFlag
Py_Is
_Py_VaBuildValue_SizeT
PyFunction_SetDefaults
PyObject_IsTrue
_PyType_Lookup
PyArg_ParseTuple
_PyBytes_FormatEx
PyListIter_Type
_PyUnicode_EncodeUTF32
PyEval_CallFunction
_PyAST_Compile
_PyToken_ThreeChars
_PyImport_SetModule
PyConfig_SetBytesString
PyImport_ImportModuleLevelObject
_PyUnicode_InternMortal
_PyGILState_GetInterpreterStateUnsafe
_PyLong_UnsignedInt_Converter
Py_FatalError
PyExc_AssertionError
PyPickleBuffer_GetBuffer
PyType_GenericAlloc
PyExc_IndentationError
PyExc_UnicodeEncodeError
PyMarshal_WriteObjectToFile
PyNumber_InPlaceRshift
PyInit_itertools
_PyParser_TokenNames
PyUnicode_RPartition
PyErr_ProgramText
_PyUnicode_IsAlpha
PyStaticMethod_Type
PyThread_allocate_lock
PyRun_SimpleFile
PyUnstable_PerfMapState_Fini
Py_GetPath
PyRun_InteractiveOneObject
PyDict_ClearWatcher
_PyArena_New
PyThread_set_stacksize
PyErr_ResourceWarning
PyObject_Realloc
_Py_wfopen
PyObject_Hash
_PyObject_CallMethodId
_Py_dg_freedtoa
_PyTime_ObjectToTimespec
Py_GETENV
PyDictIterKey_Type
PyCode_Addr2Location
PyInit__abc
_PyTraceMalloc_GetTraceback
_PyTime_FromMicrosecondsClamp
_Py_ResetForceASCII
PyUnicode_Compare
PyEval_CallMethod
PyEval_ReleaseThread
_PyEval_SliceIndex
PyWeakref_NewRef
PyErr_SyntaxLocationObject
PyMapping_Length
PyFrame_GetVar
_PyDict_GetItemStringWithError
Py_GetArgcArgv
PyExc_FileNotFoundError
PyCapsule_GetContext
PyCodec_ReplaceErrors
Py_IsTrue
PyExc_BaseException
_PyTraceMalloc_ResetPeak
_Py_set_blocking
PyODictIter_Type
PyInterpreterState_New
PyErr_SetFromErrnoWithFilenameObjects
_PyDictView_Intersect
PyNumber_Rshift
PyMem_GetAllocator
_PyArg_ParseTupleAndKeywords_SizeT
PyList_Size
PyOS_BeforeFork
PyErr_ProgramTextObject
PyThread_ReInitTLS
PyNumber_ToBase
Py_SetProgramName
PyObject_GET_WEAKREFS_LISTPTR
_PyErr_ChainExceptions
_PyUnicode_InternInPlace
_PyModuleSpec_IsInitializing
PyThreadState_GetInterpreter
PyByteArray_FromStringAndSize
_PyTrash_end
_Py_dup
PyThread_release_lock
PyDict_Watch
_Py_NewReference
PyThread_tss_alloc
PyVectorcall_Call
PyNumber_InPlaceRemainder
PyOS_getsig
_PyTime_ObjectToTime_t
PyException_SetArgs
_Py_TrueStruct
PyStructSequence_UnnamedField
PyType_GetQualName
_PyImport_AcquireLock
PyInit__ast
PyType_GetModuleState
__bss_start
PyLong_AsDouble
PyObject_GetItemData
PyUnicode_FromKindAndData
PyThread_tss_set
_Py_ClearStandardStreamEncoding
PyUnicodeEncodeError_GetReason
PyCallIter_New
PySys_Audit
PyFunction_Type
PyClassMethodDescr_Type
PyContextVar_Reset
PyDict_SetDefault
PyType_GetModuleByDef
PySequence_InPlaceConcat
Py_GetCopyright
Py_GetPlatform
_PyUnicode_ToFoldedFull
_PyLong_AsTime_t
_PyUnicode_IsLowercase
_PyUnicodeWriter_WriteStr
PyCFunction_GetFunction
_PyLong_UnsignedShort_Converter
_PySequence_BytesToCharpArray
PyThread_init_thread
PyFunction_GetClosure
Py_NoUserSiteDirectory
_PyBytesWriter_WriteBytes
_PyMem_GetAllocatorName
_Py_hashtable_destroy
PySys_FormatStderr
PyPickleBuffer_Type
PyGC_Collect
PyDict_New
PyFloat_GetMax
PyOS_AfterFork
PyExc_IndexError
PyObject_GC_IsFinalized
PyBool_Type
_PyType_LookupId
_PyThreadState_DeleteExcept
_PyUnicodeWriter_WriteChar
_PyFloat_DebugMallocStats
_PyUnicode_ToUpperFull
PyGen_NewWithQualName
PyCallable_Check
_PyErr_StackItemToExcInfoTuple
Py_PreInitializeFromBytesArgs
PyStatus_Exit
PyObject_GetBuffer
PyUnicodeEncodeError_GetEnd
PyLong_AsUnsignedLong
PyDict_Type
_PyObject_GetState
_PyUnicode_IsDigit
PyUnicode_AsWideCharString
PyThread_delete_key_value
PyBaseObject_Type
PyCode_GetVarnames
PyObject_GenericSetDict
_PyThreadState_Prealloc
_PyUnicode_FormatLong
_PyUnicode_ToTitlecase
_Py_DecRef
_PyErr_CheckSignals
_PyGen_FetchStopIterationValue
PyUnicode_AsEncodedUnicode
PyInit__tokenize
PyObject_VectorcallMethod
PyLong_FromUnsignedLong
_PyThreadState_Bind
PyStructSequence_SetItem
_Py_strhex_bytes_with_sep
_Py_UniversalNewlineFgetsWithSize
PyUnicode_Fill
_PyInterpreterState_IsRunningMain
_PyWideStringList_Extend
PyGetSetDescr_Type
_PyCodecInfo_GetIncrementalEncoder
PyUnicode_AsUTF8
PyUnicode_AsDecodedObject
_PyEval_AddPendingCall
PyLong_Type
_PyType_CheckConsistency
PyOS_FSPath
PyObject_CheckReadBuffer
_PyObject_NextNotImplemented
PyFrame_Type
PyAsyncGen_New
_PyLong_FromBytes
PyOS_ReadlineFunctionPointer
_PyObject_GenericSetAttrWithDict
_Py_gitversion
_PyWeakref_RefType
PyUnicode_DecodeUTF7Stateful
PyCapsule_Type
_PyErr_BadInternalCall
Py_NewRef
PyGC_Enable
PyWeakref_GetObject
PyUnicodeTranslateError_GetEnd
_PyLong_Size_t_Converter
PyBuffer_FromContiguous
PyCompile_OpcodeStackEffectWithJump
PyStatus_Ok
_PyUnicode_TransformDecimalAndSpaceToASCII
PyDict_Keys
Py_SetPythonHome
PyContext_Copy
PyUnicode_FSDecoder
_PyBytesWriter_Dealloc
PyInit__typing
_Py_PreInitializeFromConfig
_PyErr_FormatFromCause
_PyObject_AssertFailed
_Py_open
_PyObject_GetDictPtr
PyUnicode_DecodeFSDefault
_PyLong_DigitValue
PyException_SetCause
_PyObject_GC_NewVar
PyType_GetName
_PyInterpreterID_New
_Py_SwappedOp
PyFrame_GetLasti
PyFunction_SetKwDefaults
PyMapping_Size
_PyEval_EvalFrameDefault
_PyObject_New
_PyObject_GetAttrId
PyThreadState_Clear
PyExc_InterruptedError
PySlice_GetIndices
PyObject_CallFinalizer
_PyOS_URandom
PyCoro_Type
PySys_ResetWarnOptions
PyCapsule_SetPointer
PyUnicode_FromString
PyFunction_SetClosure
_PyObject_LookupSpecialId
PyUnstable_GC_VisitObjects
PyArg_VaParseTupleAndKeywords
PyArg_VaParse
PyUnstable_Long_IsCompact
_PyAsyncGenASend_Type
PyCell_Get
_PyErr_SetString
_PySet_NextEntry
PyMem_RawCalloc
_PyObject_CallMethodIdObjArgs
PyType_GetFlags
PyRange_Type
PyModule_AddStringConstant
PyMarshal_ReadObjectFromFile
PyObject_GetIter
PyUnicodeDecodeError_GetEncoding
PyEval_SaveThread
PyExc_BrokenPipeError
PyUnicode_InternFromString
_Py_HashPointer
PyModule_AddObject
_PyCodec_LookupTextEncoding
PyDictIterValue_Type
_PyTime_AsMicroseconds
PyUnstable_Code_NewWithPosOnlyArgs
PySlice_Unpack
_PyTime_AsTimeval_clamp
_Py_Get_Getpath_CodeObject
_Py_FdIsInteractive
_PyOS_ReadlineTState
PyExc_ImportError
_Py_hashtable_compare_direct
_PyCrossInterpreterData_RegisterClass
PyDict_SetItem
PyFrame_GetVarString
PyType_AddWatcher
PyObject_GenericSetAttr
PyReversed_Type
PyExc_UnicodeError
PyUnstable_InterpreterFrame_GetCode
PyObject_HasAttr
PyThread_tss_delete
PyExc_BlockingIOError
_PyDeadline_Get
PyFrame_GetBack
_PySys_GetAttr
_PyMem_SetupAllocators
PySequence_Tuple
PyExc_AttributeError
PyInit__stat
PyCMethod_Type
_PySlice_GetLongIndices
PySet_Add
_PyBytesWriter_Resize
_PyContext_NewHamtForTests
_PyTime_MulDiv
PyUnicode_DecodeUTF16
PyMapping_HasKey
PyException_GetContext
PyEval_AcquireLock
PyObject_AsFileDescriptor
PyFrozenSet_New
PyDict_Copy
PyBytes_AsString
PyStatus_Error
PyObject_GetAIter
PyObject_IsSubclass
_PyCodecInfo_GetIncrementalDecoder
_Py_VaBuildStack
PyCodec_StreamWriter
_PyBytes_FromHex
_PyArena_Malloc
_PyObject_RealIsInstance
Py_NoSiteFlag
PyExc_StopIteration
PySequence_List
PyEllipsis_Type
PyObject_GC_IsTracked
_PyUnicode_FormatAdvancedWriter
PyExc_RuntimeWarning
PyObject_Repr
_PyUnicode_EncodeUTF7
PyType_FromModuleAndSpec
PyNumber_Check
PyCFunction_New
PyExc_ChildProcessError
PyMapping_Values
_PyTime_GetPerfCounterWithInfo
_PyTime_AsTimeval
PyInit__sre
PyInterpreterState_Get
_PyWeakref_ProxyType
_Py_FatalRefcountErrorFunc
_Py_FreeCharPArray
PyModule_ExecDef
_PyMem_GetCurrentAllocatorName
PyUnicode_Type
PyLong_AsLongLong
PyImport_AppendInittab
_PyObject_CheckConsistency
PyEval_MergeCompilerFlags
_PyTraceMalloc_IsTracing
PyOS_vsnprintf
_PyThreadState_GetDict
PyFrame_GetGlobals
_PyCrossInterpreterData_Clear
PyCode_ClearWatcher
_Py_GetLocaleEncodingObject
_PyUnicode_FromASCII
_PyTime_FromSeconds
PyExc_GeneratorExit
_PyMem_RawWcsdup
_Py_HashSecret
PyErr_SyntaxLocationEx
_PyImport_GetModuleAttr
_Py_get_inheritable
PyFile_SetOpenCodeHook
Py_VaBuildValue
PyErr_SetFromErrnoWithFilename
PyAIter_Check
PyRun_AnyFileExFlags
PyCapsule_New
_Py_add_one_to_index_F
_Py_HasFileSystemDefaultEncodeErrors
PyStructSequence_GetItem
_Py_ClearArgcArgv
PyType_IsSubtype
_PyLong_AsByteArray
_PyDict_GetItemWithError
_PyUnicode_ToDigit
PyUnicode_AsUTF8AndSize
PyCode_AddWatcher
PyTuple_Size
PyInit_gc
PyStatus_IsError
_PyDict_HasOnlyStringKeys
PyRun_SimpleFileExFlags
PyCode_GetCellvars
PyDescr_NewMethod
PyUnicode_Decode
PyNumber_Positive
PyComplex_AsCComplex
_PyObject_ClearManagedDict
PyLong_FromUnicodeObject
PyNumber_InPlaceLshift
PyImport_ExtendInittab
PyDictProxy_Type
PyComplex_FromDoubles
PyODict_DelItem
PyFunction_AddWatcher
_PyEval_SetProfile
PyBytes_FromObject
PyCapsule_GetPointer
PyImport_Inittab
_PyTime_FromNanosecondsObject
PyComplex_FromCComplex
_PyUnicode_ToUppercase
PyStructSequence_InitType
PyNumber_Divmod
_Py_c_abs
PyODict_SetItem
_PyErr_SetObject
PyFunction_New
PyEval_AcquireThread
_Py_BuildValue_SizeT
_PyRuntime_Finalize
_PyFunction_Vectorcall
PySlice_New
PyExc_NameError
PyODictKeys_Type
PyInit_faulthandler
_Py_open_noraise
Py_ReprLeave
_PyUnicode_IsNumeric
PyIter_Check
PyUnicode_FromStringAndSize
_PyModule_Clear
PyBytes_FromFormat
_Py_DumpTracebackThreads
_PyLong_FileDescriptor_Converter
PyModule_GetDict
PyExc_FileExistsError
PyCapsule_GetDestructor
Py_hexdigits
PyRun_SimpleStringFlags
_Py_HashPointerRaw
PyCodec_StreamReader
PyFrozenSet_Type
PyUnicodeTranslateError_GetStart
PyDict_DelItemString
PySet_Pop
PyTraceBack_Print
_PyErr_DisplayException
Py_RunMain
Py_UnbufferedStdioFlag
PyMapping_HasKeyString
PyException_SetContext
_Py_CoerceLegacyLocale
PyDictItems_Type
_PyErr_Restore
PyExc_LookupError
_Py_DecodeUTF8_surrogateescape
PyLong_FromLongLong
Py_FinalizeEx
PyMemoryView_GetContiguous
PyUnicode_FromOrdinal
_Py_GetLocaleEncoding
PyUnicode_Concat
PyNumber_InPlaceMultiply
_PyObject_MakeTpCall
PyObject_GetAttr
PyUnicode_AppendAndDel
PyBytes_AsStringAndSize
PyThread_tss_get
_PySet_Update
PyMem_Calloc
PyDescr_NewClassMethod
PyExc_ResourceWarning
PySys_AddWarnOption
_PyOS_URandomNonblock
_Py_read
_PyArg_NoKeywords
PyUnicodeDecodeError_Create
_PyLong_AsInt
Py_GetPythonHome
PyType_FromSpecWithBases
_PyThreadState_GetCurrent
_PyDict_DelItemIf
PyEval_GetFuncDesc
PyEval_SetTraceAllThreads
PyCFunction_Type
PyNumber_Invert
PySys_WriteStdout
PyPreConfig_InitPythonConfig
PyUnicode_FromEncodedObject
_PyTime_localtime
_PyUnicode_ToLowerFull
_PyArg_ParseStack_SizeT
PyMarshal_ReadShortFromFile
PyInterpreterState_Head
_PyObject_CheckCrossInterpreterData
_PyUnicodeWriter_Finish
_PyDict_NewPresized
Py_IsFalse
_PyErr_GetExcInfo
PyEval_InitThreads
PySequence_Repeat
_Py_AtExit
PyUnicode_Splitlines
PyRangeIter_Type
_PyDict_DelItemId
PyErr_SetInterruptEx
PyCapsule_SetContext
PyMethodDescr_Type
_PyUnicode_ToLowercase
PyList_GetItem
_PyList_DebugMallocStats
PyComplex_RealAsDouble
_PyErr_GetHandledException
PyObject_IS_GC
PyMemoryView_FromMemory
PyUnicodeTranslateError_GetReason
PyCodec_Unregister
PyUnicode_Format
PyLong_FromString
PyMethod_Function
_PyDict_DelItem_KnownHash
_PyGen_SetStopIterationValue
_Py_LegacyLocaleDetected
PyUnicode_DecodeUTF16Stateful
PyContextVar_Type
PyErr_SetExcInfo
_PyModule_Add
Py_CompileStringObject
PyUnicode_FindChar
PyExc_PendingDeprecationWarning
_PyTime_GetPerfCounter
PyExc_EncodingWarning
_Py_gitidentifier
_PyInterpreterState_Enable
_PyBytes_Join
PyCodec_Decode
PyMem_Malloc
_PyInterpreterState_GetConfig
PyFrame_FastToLocalsWithError
PyNumber_InPlacePower
PyUnicodeEncodeError_GetStart
PyStatus_IsExit
PyUnicode_DecodeUTF32Stateful
PyErr_WarnFormat
PyModule_FromDefAndSpec2
PyUnstable_Code_New
PyNumber_Subtract
PyType_FromSpec
PyCode_GetFreevars
_PyInterpreterState_RequiresIDRef
_PyCodec_DecodeText
_PyType_GetTextSignatureFromInternalDoc
_PyObject_CallMethod
PyNumber_MatrixMultiply
_PyLong_FromTime_t
PyInit__functools
PyUnicode_New
_Py_strhex
_PyTime_GetMonotonicClock
_PyTraceMalloc_Stop
PyThread_free_lock
_Py_DumpExtensionModules
PyTuple_Pack
PyMemoryView_FromBuffer
PyEval_SetProfileAllThreads
_PyEval_SignalAsyncExc
_PyToken_OneChar
PySet_Type
PyUnicode_DecodeASCII
PyObject_CallNoArgs
_Py_trampoline_func_start
PyNumber_Xor
_Py_c_quot
PyNumber_Power
Py_GetVersion
PyCode_NewEmpty
PyODictItems_Type
PyNumber_InPlaceSubtract
_PyErr_ProgramDecodedTextObject
PyNumber_TrueDivide
PyObject_Print
PyInterpreterState_GetDict
_PyInterpreterState_SetEvalFrameFunc
Py_DecodeLocale
_PyCrossInterpreterData_ReleaseAndRawFree
_PyCrossInterpreterData_InitWithSize
_PyThreadState_Swap
_PyWideStringList_AsList
_Py_ctype_tolower
PyCodec_LookupError
_Py_c_diff
PyCodec_IgnoreErrors
_PyUnicodeWriter_PrepareKindInternal
_PySet_Dummy
PyObject_GC_UnTrack
_PyTime_FromNanoseconds
_PyUnicode_InternImmortal
PyExc_SyntaxError
_PyExc_CreateExceptionGroup
_PyConfig_InitCompatConfig
PyExc_UnboundLocalError
_PyBytes_Repeat
PyCodec_Decoder
PyErr_WriteUnraisable
PyUnicode_Substring
_PyNone_Type
_PyNumber_Index
_Py_EncodeUTF8Ex
PyList_Type
PyClassMethod_Type
_PyLong_Lshift
PyMem_RawRealloc
PyInterpreterState_Clear
PyImport_Import
_Py_ctype_toupper
_PyDict_SetItemId
_PyLong_UnsignedLongLong_Converter
_PyUnicode_DecodeUnicodeEscapeInternal
_Py_hashtable_get
PyInit__weakref
PyNumber_FloorDivide
PyExc_ImportWarning
PyDict_Values
PyFloat_FromString
PyObject_Calloc
PySequence_Fast
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.3.3
GLIBC_2.10
GLIBC_2.15
GLIBC_2.14
GLIBC_2.3.2
GLIBC_2.9
GLIBC_2.17
GLIBC_2.5
GLIBC_2.6
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.7
$ORIGIN/../lib
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
Simple substitute for functools.update_wrapper.
_WeakValueDictionary.__init__.<locals>.KeyedRef.__new__
_WeakValueDictionary.__init__.<locals>.KeyedRef.__init__
_WeakValueDictionary.__init__.<locals>.KeyedRef.remove
_WeakValueDictionary.__init__.<locals>.KeyedRef
self_weakref
KeyedRef
_WeakValueDictionary.__init__
_iterating
_WeakValueDictionary.clear
_remove_dead_weakref
_WeakValueDictionary._commit_removals
_WeakValueDictionary.get
_KeyedRef
_pending_removals
_WeakValueDictionary.setdefault
_commit_removals
_BlockingOnManager.__init__
Mark the running thread as waiting for self.lock. via _blocking_on.
thread_id
_BlockingOnManager.__enter__
Remove self.lock from this thread's _blocking_on list.
blocked_on
_BlockingOnManager.__exit__
A context manager responsible to updating ``_blocking_on``.
Check if 'target_id' is holding the same lock as another thread(s).
    The search within 'blocking_on' starts with the threads listed in
    'candidate_ids'.  'seen_ids' contains any threads that are considered
    already traversed in the search.
    Keyword arguments:
    target_id     -- The thread id to try to reach.
    seen_ids      -- A set of threads that have already been visited.
    candidate_ids -- The thread ids from which to begin.
    blocking_on   -- A dict representing the thread/blocking-on graph.  This may
                     be the same object as the global '_blocking_on' but it is
                     a parameter to reduce the impact that global mutable
                     state has on the result of this function.
    
edges
candidate_blocking_on
allocate_lock
_ModuleLock.__init__
blocking_on
candidate_ids
seen_ids
target_id
_ModuleLock.has_deadlock
deadlock detected by 
        Acquire the module lock.  If a potential deadlock is detected,
        a _DeadlockError is raised.
        Otherwise, the lock is always acquired and True is returned.
        
_ModuleLock.acquire
wakeup
waiters
get_ident
_ModuleLock.release
B7C!
_ModuleLock(
_ModuleLock.__repr__
A recursive lock implementation which is able to detect deadlocks
    (e.g. thread 1 trying to take locks A then B, and thread 2 trying to
    take locks B then A).
    
has_deadlock
_DummyModuleLock.__init__
_DummyModuleLock.acquire
cannot release un-acquired lock
_DummyModuleLock.release
) at 
_DummyModuleLock(
_DummyModuleLock.__repr__
A simple _ModuleLock equivalent for Python builds without
    multi-threading support.
_ModuleLockManager.__init__
_ModuleLockManager.__enter__
fmC~
_lock
_ModuleLockManager.__exit__
_get_module_lock.<locals>.cb
Get or create the module lock for a given module name.
    Acquire/release internally the global import lock to protect
    _module_locks.
Acquires then releases the module lock for a given module name.
    This is used to ensure a module is completely initialized, in the
    event it is being imported by another thread.
    
acquire
remove_importlib_frames in import.c will always remove sequences
    of importlib frames that end with a call to this function
    Use it instead of a normal call in places where including the importlib
    frames introduces unwanted noise into the traceback (e.g. when executing
    module code)
    
Print the message to stderr if -v/PYTHONVERBOSE is turned on.
verbosity
_requires_builtin.<locals>._requires_builtin_wrapper
Decorator to verify the named module is built-in.
_requires_builtin_wrapper
 is not a frozen module
_requires_frozen.<locals>._requires_frozen_wrapper
Decorator to verify the named module is frozen.
L/EO
_requires_frozen_wrapper
the load_module() method is deprecated and slated for removal in Python 3.12; use exec_module() instead
Load the specified module into sys.modules and return it.
    This method is deprecated.  Use loader.exec_module() instead.
    
The implementation of ModuleType.__repr__().
/	A;
ModuleSpec.__init__
submodule_search_locations=
origin=
loader=
name=
ModuleSpec.__repr__
ModuleSpec.__eq__
_cached
ModuleSpec.cached
The name of the module's parent.
ModuleSpec.parent
ModuleSpec.has_location
The specification for a module, used for loading.
    A module's spec is the source for information about the module.  For
    data associated with the module, including source, use the spec's
    loader.
    `name` is the absolute name of the module.  `loader` is the loader
    to use when loading the module.  `parent` is the name of the
    package the module is in.  The parent is derived from the name.
    `is_package` determines if the module is considered a package or
    not.  On modules this is reflected by the `__path__` attribute.
    `origin` is the specific location used by the loader from which to
    load the module, if that information is available.  When filename is
    set, origin will match.
    `has_location` indicates that a spec's "origin" reflects a location.
    When this is True, `__file__` attribute of the module is set.
    `cached` is the location of the cached bytecode file, if any.  It
    corresponds to the `__cached__` attribute.
    `submodule_search_locations` is the sequence of path entries to
    search when importing submodules.  If set, is_package should be
    True--and False otherwise.
    Packages are simply modules that (may) have submodules.  If a spec
    has a non-None value in `submodule_search_locations`, the import
    system will consider modules loaded from the spec as packages.
    Only finders (see importlib.abc.MetaPathFinder and
    importlib.abc.PathEntryFinder) should modify ModuleSpec instances.
    
setter
Return a module spec based on various loader methods.
 	B,
/	B;
#	E/
2	E>
.	F;
loaders that define exec_module() must also define create_module()
Create a module based on the provided spec.
 from 
 (namespace) from 
<module 
Return the repr to use for the module.
 not in sys.modules
module 
Execute the spec's specified module in an existing module's namespace.
3A%E
*	E6
import {!r} # {!r}
missing loader
.exec_module() not found; falling back to load_module()
A'E<
*	E6
Return a new module object, loaded by the spec's loader.
    The module is not added to its parent.
    If a module is already in sys.modules, that existing module gets
    clobbered.
    
is_builtin
BuiltinImporter.find_spec
 is not a built-in module
Create a built-in module
create_builtin
BuiltinImporter.create_module
Exec a built-in module
exec_builtin
BuiltinImporter.exec_module
Return None as built-in modules do not have code objects.
BuiltinImporter.get_code
Return None as built-in modules do not have source code.
BuiltinImporter.get_source
Return False as built-in modules are never packages.
BuiltinImporter.is_package
built-in
Meta path import for built-in modules.
    All methods are either class or static methods to avoid the need to
    instantiate the class.
    
see PyImport_ImportFrozenModuleObject()
has_location
FrozenImporter._fix_up_module
.__init__
_SEP
relfile
FrozenImporter._resolve_filename
pkgdir
FrozenImporter.find_spec
Set __file__, if able.
FrozenImporter.create_module
FrozenImporter.exec_module
Load a frozen module.
        This method is deprecated.  Use exec_module() instead.
        
vars
__origname__
find_frozen
origname
ispkg
FrozenImporter.load_module
Return the code object for the frozen module.
get_frozen_object
FrozenImporter.get_code
Return None as frozen modules do not have source code.
FrozenImporter.get_source
Return True if the frozen module is a package.
is_frozen_package
FrozenImporter.is_package
frozen
Meta path import for frozen modules.
    All methods are either class or static methods to avoid the need to
    instantiate the class.
    
nv?HM4 
_resolve_filename
_ORIGIN
Acquire the import lock.
acquire_lock
_ImportLockContext.__enter__
Release the import lock regardless of any raised exceptions.
b%UZi
release_lock
exc_traceback
_ImportLockContext.__exit__
Context manager for the import lock.
attempted relative import beyond top-level package
bits
sys.meta_path is empty
sys.meta_path is None, Python is likely shutting down
Find a module's spec.
is_reload
Empty module name
attempted relative import with no known parent package
__package__ not set to a string
level must be >= 0
module name must be str, not 
Verify arguments are "sane".
 for child module 
Cannot set an attribute on 
 is not a package
child
parent_module
parent_spec
9+F(
 halted; None in sys.modules
import of 
Find and load the module.
Import and return the module based on its name, the package the call is
    being made from, and the level adjustment.
    This function represents the greatest common denominator of functionality
    between import_module and __import__. This includes setting __package__ if
    the loader did not.
    
 must be str, not 
Item in 
``from list''
.__all__
Figure out what __import__ should return.
    The import_ parameter is a callable which takes the name of module to
    import. It is required to decouple the function from assuming importlib's
    import implementation is desired.
    
from_name
where
recursive
import_
,	C3
53C.
can't resolve package from __spec__ or __package__, falling back on __name__ and __path__
 != 
__package__ != __spec__.parent (
Calculate what __package__ should be.
    __package__ is not guaranteed to be defined or could be set to None
    to represent that its proper value is unknown.
    
Import a module.
    The 'globals' argument is used to infer where the import is occurring from
    to handle relative imports. The 'locals' argument is ignored. The
    'fromlist' argument specifies what should exist as attributes on the module
    being imported (e.g. ``from module import <fromlist>``).  The 'level'
    argument represents the package location to import from in a relative
    import (e.g. ``from ..pkg import mod`` would have a 'level' of 2).
    
cut_off
globals_
no built-in module named 
Setup importlib by importing needed built-in modules and injecting them
    into the global namespace.
    As sys is needed for sys.modules access and _imp is needed to load built-in
    modules, those two modules must be explicitly passed in.
    
setattr
is_frozen
builtin_module
builtin_name
self_module
module_type
Install importers for builtin and frozen modules
tO(D
_imp_module
sys_module
Install importers that require external filesystem access
{!r}
No module named 
Core implementation of import.
This module is NOT meant to be directly imported! It has been designed such
that it can be bootstrapped into Python as the implementation of import. As
such it requires the injection of specific modules and attributes in order to
work. One should use importlib as the public-facing version of this module.
_install_external_importers
_setup
_builtin_from_name
_calc___package__
_gcd_import
_NEEDS_LOADING
_find_and_load_unlocked
_ERR_MSG
_ERR_MSG_PREFIX
_sanity_check
_ImportLockContext
_load
_load_unlocked
_load_backward_compatible
_exec
_module_repr_from_spec
_init_module_attrs
_spec_from_module
_module_repr
_requires_frozen
_requires_builtin
BSe4
_get_module_lock
_ModuleLockManager
_DummyModuleLock
_ModuleLock
*DQ2
_has_deadlocked
_DeadlockError
_BlockingOnManager
_blocking_on
_module_locks
_WeakValueDictionary
_List
D{8c
_new_module
_weakref
_thread
_object_name
<frozen importlib._bootstrap>
cygwin
True if filenames must be checked case-insensitively and ignore environment flags are not set.
ignore_environment
True if filenames must be checked case-insensitively.
_make_relax_case.<locals>._relax_case
PYTHONCASEOK
PYTHONCASEOK
Convert a 32-bit integer to little-endian.
Convert 4 bytes in little-endian to an integer.
Convert 2 bytes in little-endian to an integer.
new_root
Replacement for os.path.join().
_path_split.<locals>.<genexpr>
Replacement for os.path.split().
Stat the path.
    Made a separate function to make it easier to override in experiments
    (e.g. cache stat results).
    
Test whether the path is the specified mode type.
stat_info
Replacement for os.path.isfile.
Replacement for os.path.isdir.
_path_splitroot
Replacement for os.path.isabs.
Replacement for os.path.abspath.
removeprefix
os.write() didn't write the full pyc file
Best-effort function to write data to a path atomically.
    Be prepared to handle a FileExistsError if concurrent writing of the
    temporary file is attempted.
O_WRONLY
O_CREAT
O_EXCL
bytes_written
path_tmp
(	C4
 is not alphanumeric
debug_override or optimization must be set to None
the debug_override parameter is deprecated; use 'optimization' instead
Given the path to a .py file, return the path to its .pyc file.
    The .py file does not need to exist; this simply returns the path to the
    .pyc file calculated as if the .py file were imported.
    The 'optimization' parameter controls the presumed optimization level of
    the bytecode file. If 'optimization' is not None, the string representation
    of the argument is taken and verified to be alphanumeric (else ValueError
    is raised).
    The debug_override parameter is deprecated. If debug_override is not None,
    a True value is the same as setting 'optimization' to the empty string
    while a False value is equivalent to setting 'optimization' to '1'.
    If sys.implementation.cache_tag is None then NotImplementedError is raised.
    
lstrip
almost_filename
debug_override
 is not an alphanumeric value
optimization level 
optimization portion of filename does not start with 
expected only 2 or 3 dots in 
 not bottom-level directory in 
sys.implementation.cache_tag is None
Given the path to a .pyc. file, return the path to its .py file.
    The .pyc file does not need to exist; this simply returns the path to
    the .py file calculated to correspond to the .pyc file.  If path does
    not conform to PEP 3147/488 format, ValueError will be raised. If
    sys.implementation.cache_tag is None then NotImplementedError is raised.
    
isalnum
pycache_prefix
g5hAu
cache_tag
implementation
base_filename
opt_level
optimization
dot_count
`DWd
pycache
stripped_path
found_in_pycache_prefix
pycache_filename
Convert a bytecode file path to a source path (if possible).
    This function exists purely for backwards-compatibility for
    PyImport_ExecCodeModuleWithFilenames() in the C API.
    
extension
Calculate the mode permissions for a bytecode file.
 cannot handle 
loader for 
_check_name.<locals>._check_name_wrapper
    
_check_name.<locals>._wrap
Decorator to verify that the module being requested matches the one the
    loader can handle.
    The first argument (self) must define _name which the second argument is
    compared against. If the comparison fails then ImportError is raised.
    
_wrap
_check_name_wrapper
 in 
invalid flags 
reached EOF while reading pyc header of 
bad magic number in 
Perform basic validity checking of a pyc header and return the flags field,
    which determines how the pyc should be further validated against the source.
    *data* is the contents of the pyc file. (Only the first 16 bytes are
    required, though.)
    *name* is the name of the module being imported. It is used for logging.
    *exc_details* is a dictionary passed to ImportError if it raised for
    improved debugging.
    ImportError is raised when the magic number is incorrect or when the flags
    field is invalid. EOFError is raised when the data is found to be truncated.
    
;pK!
magic
Validate a pyc against the source last-modified time.
    *data* is the contents of the pyc file. (Only the first 16 bytes are
    required.)
    *source_mtime* is the last modified timestamp of the source file.
    *source_size* is None or the size of the source file in bytes.
    *name* is the name of the module being imported. It is used for logging.
    *exc_details* is a dictionary passed to ImportError if it raised for
    improved debugging.
    An ImportError is raised if the bytecode is stale.
    
hash in bytecode doesn't match hash of source 
Validate a hash-based pyc by checking the real source hash against the one in
    the pyc header.
    *data* is the contents of the pyc file. (Only the first 16 bytes are
    required.)
    *source_hash* is the importlib.util.source_hash() of the source file.
    *name* is the name of the module being imported. It is used for logging.
    *exc_details* is a dictionary passed to ImportError if it raised for
    improved debugging.
    An ImportError is raised if the bytecode is stale.
    
Non-code object in 
code object from {!r}
Compile bytecode as found in a pyc.
_fix_co_filename
Produce the data for a timestamp-based pyc.
Produce the data for a hash-based pyc.
dumps
checked
Decode bytes representing source code and return the string.
    Universal newline support is used in the decoding.
    
"|Bq
detect_encoding
newline_decoder
source_bytes_readline
tokenize
Return a module spec based on a file location.
    To indicate that the module is a package, set
    submodule_search_locations to a list of directory paths.  An
    empty list is sufficient, though its not otherwise useful to the
    import system.
    The loader must take a spec as its only __init__() arg.
    
_set_fileattr
location
'	D3
Module globals; __loader__ != __spec__.loader
Module globals is missing a __spec__.loader
Helper function for _warnings.c
    See GH#97850 for details.
    
spec_loader
missing
HKEY_LOCAL_MACHINE
HKEY_CURRENT_USER
OpenKey
WindowsRegistryFinder._open_registry
sys_version
QueryValue
hkey
registry_key
WindowsRegistryFinder._search_registry
WindowsRegistryFinder.find_spec
1	A=
_d.pyd
Software\Python\PythonCore\{sys_version}\Modules\{fullname}\Debug
Software\Python\PythonCore\{sys_version}\Modules\{fullname}
Meta path finder for modules declared in the Windows registry.
_search_registry
_open_registry
DEBUG_BUILD
REGISTRY_KEY_DEBUG
REGISTRY_KEY
Concrete implementation of InspectLoader.is_package by checking if
        the path returned by get_filename has a filename of '__init__.py'.
rsplit
tail_name
filename_base
_LoaderBasics.is_package
Use default semantics for module creation.
_LoaderBasics.create_module
 when get_code() returns None
cannot load module 
Execute the module.
_LoaderBasics.exec_module
This method is deprecated.
_LoaderBasics.load_module
Base class of common code needed by both SourceLoader and
    SourcelessFileLoader.
Optional method that returns the modification time (an int) for the
        specified path (a str).
        Raises OSError when the path cannot be handled.
        
SourceLoader.path_mtime
Optional method returning a metadata dict for the specified
        path (a str).
        Possible keys:
        - 'mtime' (mandatory) is the numeric timestamp of last source
          code modification;
        - 'size' (optional) is the size in bytes of the source code.
        Implementing this method allows the loader to read bytecode files.
        Raises OSError when the path cannot be handled.
        
SourceLoader.path_stats
Optional method which writes data (bytes) to a file path (a str).
        Implementing this method allows for the writing of bytecode files.
        The source path is needed in order to correctly transfer permissions
        
cache_path
SourceLoader._cache_bytecode
Optional method which writes data (bytes) to a file path (a str).
        Implementing this method allows for the writing of bytecode files.
        
SourceLoader.set_data
source not available through get_data()
Concrete implementation of InspectLoader.get_source.
SourceLoader.get_source
Return the code object compiled from source.
        The 'data' argument can be any object type that compile() supports.
        
_optimize
SourceLoader.source_to_code
code object from {}
{} matches {}
Concrete implementation of InspectLoader.get_code.
        Reading of bytecode requires path_stats to be implemented. To write
        bytecode, set_data must also be implemented.
        
b1j]
dont_write_bytecode
code_object
bytes_data
SourceLoader.get_code
 B!D'
source_to_code
path_mtime
Cache the module name and the path to the file found by the
        finder.
FileLoader.__init__
FileLoader.__eq__
FileLoader.__hash__
Load a module from a file.
        This method is deprecated.  Use exec_module() instead.
        
FileLoader.load_module
Return the path to the source file as found by the finder.
FileLoader.get_filename
Return the data from path as raw bytes.
FileLoader.get_data
FileReader
FileLoader.get_resource_reader
Base file loader class which implements the loader protocol methods that
    require file system usage.
Return the metadata for the path.
SourceFileLoader.path_stats
source_path
SourceFileLoader._cache_bytecode
created {!r}
could not create {!r}: {!r}
Write bytes data to a file.
part
path_parts
_mode
SourceFileLoader.set_data
Concrete implementation of SourceLoader using the file system.
set_data
_cache_bytecode
J@".
path_stats
bytecode_path
SourcelessFileLoader.get_code
Return None as there is no source code.
SourcelessFileLoader.get_source
Loader which handles sourceless file imports.
ExtensionFileLoader.__init__
ExtensionFileLoader.__eq__
ExtensionFileLoader.__hash__
extension module {!r} loaded from {!r}
Create an uninitialized extension module
create_dynamic
ExtensionFileLoader.create_module
extension module {!r} executed from {!r}
Initialize an extension module
exec_dynamic
_call_with_frames_removed
ExtensionFileLoader.exec_module
ExtensionFileLoader.is_package.<locals>.<genexpr>
Return True if the extension module is a package.
file_name
ExtensionFileLoader.is_package
Return None as an extension module cannot create a code object.
ExtensionFileLoader.get_code
Return None as extension modules have no source code.
ExtensionFileLoader.get_source
ExtensionFileLoader.get_filename
Loader for extension modules.
    The constructor is designed to work with FileFinder.
    
path_finder
_NamespacePath.__init__
Returns a tuple of (parent-module-name, parent-path-attr-name)
_NamespacePath._find_parent_path_names
path_attr_name
parent_module_name
_NamespacePath._get_parent_path
_name
_path_finder
_last_epoch
_last_parent_path
_NamespacePath._recalculate
_NamespacePath.__iter__
_NamespacePath.__getitem__
_NamespacePath.__setitem__
_NamespacePath.__len__
_NamespacePath(
_NamespacePath.__repr__
_NamespacePath.__contains__
_NamespacePath.append
Represents a namespace package's path.  It uses the module name
    to find its parent module, and from there it looks up the parent's
    __path__.  When this changes, the module's own path is recomputed,
    using path_finder.  For top-level modules, the parent module's path
    is sys.path.
_recalculate
_get_parent_path
_find_parent_path_names
NamespaceLoader.__init__
NamespaceLoader.is_package
NamespaceLoader.get_source
NamespaceLoader.get_code
NamespaceLoader.create_module
NamespaceLoader.exec_module
namespace module loaded with path {!r}
Load a namespace module.
        This method is deprecated.  Use exec_module() instead.
        
_load_module_shim
NamespaceLoader.load_module
_path
NamespaceReader
NamespaceLoader.get_resource_reader
Call the invalidate_caches() method on all path entry finders
        stored in sys.path_importer_caches (where implemented).
_epoch
PathFinder.invalidate_caches
sys.path_hooks is empty
Search sys.path_hooks for a finder for 'path'.
ImportWarning
PathFinder._path_hooks
Get the finder for the path entry from sys.path_importer_cache.
        If the path entry is not in the cache, find the appropriate finder
        and cache it. If no finder is available, store None.
        
path_importer_cache
PathFinder._path_importer_cache
spec missing loader
Find the loader or namespace_path for this module/package name.
portions
finder
PathFinder._get_spec
Try to find a spec for 'fullname' on sys.path or 'path'.
        The search is based on sys.path_hooks and sys.path_importer_cache.
        
namespace_path
PathFinder.find_spec
        Find distributions.
        Return an iterable of all Distribution instances capable of
        loading the metadata for packages matching ``context.name``
        (or all names if ``None`` indicated) along the paths in the list
        of directories ``context.path``.
        
importlib.metadata
$sJ3
MetadataPathFinder
PathFinder.find_distributions
Meta path finder for sys.path and package __path__ attributes.
find_distributions
_path_importer_cache
_path_hooks
FileFinder.__init__.<locals>.<genexpr>
Initialize with the path to search on and a variable number of
        2-tuples containing the loader and the file suffixes the loader
        recognizes.
suffixes
loaders
FileFinder.__init__
     @
Invalidate the directory mtime.
FileFinder.invalidate_caches
smsl
FileFinder._get_spec
possible namespace for {}
trying {}
Try to find a spec for the specified module.
        Returns the matching spec, or None if not found.
        
_loaders
_path_mtime
full_path
init_filename
loader_class
base_path
cache_module
cache
mtime
tail_module
is_namespace
FileFinder.find_spec
Fill the cache of potential modules and packages for this directory.
_relaxed_path_cache
_path_cache
PermissionError
new_name
lower_suffix_contents
contents
FileFinder._fill_cache
only directories are supported
Path hook for importlib.machinery.FileFinder.
FileFinder.path_hook.<locals>.path_hook_for_FileFinder
A class method which returns a closure to use on sys.path_hook
        which will return an instance using the specified loaders and the path
        called on the closure.
        If the path called on the closure is not a directory, ImportError is
        raised.
        
path_hook_for_FileFinder
loader_details
FileFinder.path_hook
FileFinder(
FileFinder.__repr__
File-based finder.
    Interactions with the file system are cached for performance, being
    refreshed when the directory the finder is handling has been modified.
    
_fill_cache
_get_spec
cpathname
Returns a list of file-based module loaders.
    Each item is a tuple (loader, suffixes).
    
H^>j
bytecode
+A&F
extensions
Install the path-based import components.
meta_path
path_hook
path_hooks
supported_loaders
_bootstrap_module
.pyw
opt-
__pycache__
win32
Core implementation of path-based import.
This module is NOT meant to be directly imported! It has been designed such
that it can be bootstrapped into Python as the implementation of import. As
such it requires the injection of specific modules and attributes in order to
work. One should use importlib as the public-facing version of this module.
_install
_set_bootstrap_module
_get_supported_file_loaders
_NamespaceLoader
_NamespacePath
FileLoader
SourceLoader
_bless_my_loader
_POPULATE
_code_to_hash_pyc
_code_to_timestamp_pyc
_compile_bytecode
_validate_timestamp_pyc
_check_name
_calc_mode
_get_cached
extension_suffixes
_OPT
_PYCACHE
from_bytes
to_bytes
_write_atomic
_path_abspath
_path_isabs
_path_is_mode_type
_pack_uint32
_relax_case
_make_relax_case
_CASE_INSENSITIVE_PLATFORMS
_CASE_INSENSITIVE_PLATFORMS_BYTES_KEY
_CASE_INSENSITIVE_PLATFORMS_STR_KEY
_pathseps_with_colon
path_sep_tuple
winreg
 	Ge*
_MS_WINDOWS
<frozen importlib._bootstrap_external>
not a Zip file
archive path is empty
expected str, not 
_path_split
_path_stat
zipimporter.__init__
Create a ModuleSpec for the specified module.
        Returns None if the module cannot be found.
        
module_info
zipimporter.find_spec
get_code(fullname) -> code object.
        Return the code object for the specified module. Raise ZipImportError
        if the module couldn't be imported.
        
zipimporter.get_code
get_data(pathname) -> string with file data.
        Return the data associated with 'pathname'. Raise OSError if
        the file wasn't found.
        
zipimporter.get_data
get_filename(fullname) -> filename string.
        Return the filename for the specified module or raise ZipImportError
        if it couldn't be imported.
        
zipimporter.get_filename
get_source(fullname) -> source string.
        Return the source code for the specified module. Raise ZipImportError
        if the module couldn't be found, return None if the archive does
        contain the module, but has no source for it.
        
zipimporter.get_source
=	B	
is_package(fullname) -> bool.
        Return True if the module specified by fullname is a package.
        Raise ZipImportError if the module couldn't be found.
        
zipimporter.is_package
import {} # loaded from Zip {}
 not found in sys.modules
Loaded module 
zipimport.zipimporter.load_module() is deprecated and slated for removal in Python 3.12; use exec_module() instead
load_module(fullname) -> module.
        Load the module specified by 'fullname'. 'fullname' must be the
        fully qualified (dotted) module name. It returns the imported
        module, or raises ZipImportError if it could not be imported.
        Deprecated since Python 3.10. Use exec_module() instead.
        
zipimporter.load_module
Return the ResourceReader for a module in a zip file.
importlib.readers
ZipReader
zipimporter.get_resource_reader
Reload the file data of the archive path.
zipimporter.invalidate_caches
<zipimporter object "
zipimporter.__repr__
zipimporter(archivepath) -> zipimporter object
    Create a new zipimporter instance. 'archivepath' must be a path to
    a zipfile, or to a specific path inside a zipfile. For example, it can be
    '/tmp/myimport.zip', or '/tmp/myimport.zip/mydirectory', if mydirectory is a
    valid directory inside the archive.
    'ZipImportError is raised if 'archivepath' doesn't point to a valid Zip
    archive.
    The 'archive' attribute of zipimporter objects contains the name of the
    zipfile targeted.
    
invalidate_caches
get_resource_reader
load_module
is_package
get_filename
get_data
.pyc
dirpath
zipimport: found {} names in {!r}
bad local header offset: 
bad central directory size or offset: 
bad central directory offset: 
bad central directory size: 
corrupt Zip file: 
not a Zip file: 
can't open Zip file: 
_path_join
comment_size
arc_offset
header_offset
max_comment_start
header_position
start_offset
                           
(.S%
1-S"
zipimport: zlib available
zipimport: zlib UNAVAILABLE
zlib
can't decompress data; zlib not available
zipimport: can't read data
bad local file header: 
EOF read where not expected
can't read Zip file: 
negative data size
EOFError
decompress
raw_data
header_size
extra_size
name_size
file_offset
file_size
data_size
compress
datapath
                 
A+E	
 is not a code object
compiled module 
bytecode is stale for 
always
never
loads
_validate_hash_pyc
check_hash_based_pycs
_classify_pyc
source_size
source_mtime
check_source
hash_based
exc_details
pathname
mktime
uncompressed_size
date
can't find module 
module load failed: 
trying {}{}{}
_files
archive
qD)[
_verbose_message
modpath
toc_entry
j;=v
fullpath
ispackage
isbytecode
suffix
import_error
"	C.
%$%a%b%V%U%c%Q%W%]%\%[%
%4%,%
%<%^%_%Z%T%i%f%`%P%l%g%h%d%e%Y%X%R%S%k%j%
)"a"
e"d" #!#
__init__.py
__init__.pyc
zipimport provides support for importing Python modules from Zip archives.
This module exports three objects:
- zipimporter: a class; its constructor takes a path to a Zip archive.
- ZipImportError: exception raised by zipimporter objects. It's a
  subclass of ImportError, so it can be caught as ImportError, too.
- _zip_directory_cache: a dict, mapping archive paths to zip directory
  info dicts, as used in zipimporter._files.
It is usually not needed to use the zipimport module explicitly; it is
used by the builtin import mechanism for sys.path items that are paths
to Zip archives.
_get_module_code
_get_pyc_source
_get_mtime_and_size_of_source
_parse_dostime
at`sK
_compile_source
_normalize_line_endings
_code_type
__code__
_unmarshal_code
_eq_mtime
_get_data
_get_decompress_func
_importing_zlib
cp437_table
_read_directory
V7=B
_get_module_info
_is_dir
_get_module_path
_zip_searchorder
zipimporter
_LoaderBasics
MAX_COMMENT_LEN
STRING_END_ARCHIVE
END_CENTRAL_DIR_SIZE
_module_type
_zip_directory_cache
ZipImportError
alt_path_sep
path_separators
path_sep
_warnings
time
marshal
_unpack_uint32
zN$hY
_unpack_uint16
<frozen zipimport>
A decorator indicating abstract methods.
    Requires that the metaclass is ABCMeta or derived from it.  A
    class that has a metaclass derived from ABCMeta cannot be
    instantiated unless all of its abstract methods are overridden.
    The abstract methods can be called using any of the normal
    'super' call mechanisms.  abstractmethod() may be used to declare
    abstract methods for properties and descriptors.
    Usage:
        class C(metaclass=ABCMeta):
            @abstractmethod
            def my_abstract_method(self, arg1, arg2, argN):
                ...
    
funcobj
callable
abstractclassmethod.__init__
A decorator indicating abstract classmethods.
    Deprecated, use 'classmethod' with 'abstractmethod' instead:
        class C(ABC):
            @classmethod
            @abstractmethod
            def my_abstract_classmethod(cls, ...):
                ...
    
abstractstaticmethod.__init__
A decorator indicating abstract staticmethods.
    Deprecated, use 'staticmethod' with 'abstractmethod' instead:
        class C(ABC):
            @staticmethod
            @abstractmethod
            def my_abstract_staticmethod(...):
                ...
    
A decorator indicating abstract properties.
    Deprecated, use 'property' with 'abstractmethod' instead:
        class C(ABC):
            @property
            @abstractmethod
            def my_abstract_property(self):
                ...
    
mcls
ABCMeta.__new__
Register a virtual subclass of an ABC.
            Returns the subclass, to allow usage as a class decorator.
            
subclass
ABCMeta.register
Override for isinstance(instance, cls).
ABCMeta.__instancecheck__
Override for issubclass(subclass, cls).
ABCMeta.__subclasscheck__
_abc_negative_cache_version: 
_abc_negative_cache: 
_abc_cache: 
_abc_registry: 
Inv. counter: 
Class: 
Debug helper to print the ABC registry.
_abc_negative_cache_version
_abc_negative_cache
_abc_cache
_abc_registry
ABCMeta._dump_registry
Clear the registry (for debugging or testing).
ABCMeta._abc_registry_clear
Clear the caches (for debugging or testing).
ABCMeta._abc_caches_clear
Metaclass for defining Abstract Base Classes (ABCs).
        Use this metaclass to create an ABC.  An ABC can be subclassed
        directly, and then acts as a mix-in class.  You can also register
        unrelated concrete classes (even built-in classes) and unrelated
        ABCs as 'virtual subclasses' -- these and their descendants will
        be considered subclasses of the registering ABC by the built-in
        issubclass() function, but the registering ABC won't show up in
        their MRO (Method Resolution Order) nor will method
        implementations defined by the registering ABC be callable (not
        even via super()).
        
i#d`\P8]
_abc_caches_clear
_abc_registry_clear
_dump_registry
Recalculate the set of abstract methods of an abstract class.
    If a class has had one of its abstract methods implemented after the
    class was created, the method will not be considered implemented until
    this function is called. Alternatively, if a new abstract method has been
    added to the class, it will only be considered an abstract method of the
    class after this function is called.
    This function should be called before any use is made of the class,
    usually in class decorators that add methods to the subject class.
    Returns cls, to allow usage as a class decorator.
    If cls is not an instance of ABCMeta, does nothing.
    
scls
abstracts
Helper class that provides a standard way to create an ABC using
    inheritance.
    
Abstract Base Classes (ABCs) according to PEP 3119.
update_abstractmethods
_py_abc
_reset_caches
_reset_registry
_get_dump
_abc_subclasscheck
_abc_instancecheck
_abc_register
_abc_init
get_cache_token
abstractproperty
abstractstaticmethod
abstractclassmethod
<frozen abc>
register_error
CodecInfo.__new__
<%s.%s object for encoding %s at %#x>
CodecInfo.__repr__
Codec details when looking up the codec registry
 Encodes the object input and returns a tuple (output
            object, length consumed).
            errors defines the error handling to apply. It defaults to
            'strict' handling.
            The method may not store state in the Codec instance. Use
            StreamWriter for codecs which have to keep state in order to
            make encoding efficient.
            The encoder must be able to handle zero length input and
            return an empty object of the output object type in this
            situation.
        
NotImplementedError
Codec.encode
 Decodes the object input and returns a tuple (output
            object, length consumed).
            input must be an object which provides the bf_getreadbuf
            buffer slot. Python strings, buffer objects and memory
            mapped files are examples of objects providing this slot.
            errors defines the error handling to apply. It defaults to
            'strict' handling.
            The method may not store state in the Codec instance. Use
            StreamReader for codecs which have to keep state in order to
            make decoding efficient.
            The decoder must be able to handle zero length input and
            return an empty object of the output object type in this
            situation.
        
Codec.decode
 Defines the interface for stateless encoders/decoders.
        The .encode()/.decode() methods may use different error
        handling schemes by providing the errors argument. These
        string values are predefined:
         'strict' - raise a ValueError error (or a subclass)
         'ignore' - ignore the character and continue with the next
         'replace' - replace with a suitable replacement character;
                    Python will use the official U+FFFD REPLACEMENT
                    CHARACTER for the builtin Unicode codecs on
                    decoding and '?' on encoding.
         'surrogateescape' - replace with private code points U+DCnn.
         'xmlcharrefreplace' - Replace with the appropriate XML
                               character reference (only for encoding).
         'backslashreplace'  - Replace with backslashed escape sequences.
         'namereplace'       - Replace with \N{...} escape sequences
                               (only for encoding).
        The set of allowed values can be extended via register_error.
    
        Creates an IncrementalEncoder instance.
        The IncrementalEncoder may use different error handling schemes by
        providing the errors keyword argument. See the module docstring
        for a list of possible values.
        
IncrementalEncoder.__init__
        Encodes input and returns the resulting object.
        
IncrementalEncoder.encode
        Resets the encoder to the initial state.
        
IncrementalEncoder.reset
        Return the current state of the encoder.
        
IncrementalEncoder.getstate
        Set the current state of the encoder. state must have been
        returned by getstate().
        
state
IncrementalEncoder.setstate
    An IncrementalEncoder encodes an input in multiple steps. The input can
    be passed piece by piece to the encode() method. The IncrementalEncoder
    remembers the state of the encoding process between calls to encode().
    
BufferedIncrementalEncoder.__init__
BufferedIncrementalEncoder._buffer_encode
BufferedIncrementalEncoder.encode
BufferedIncrementalEncoder.reset
BufferedIncrementalEncoder.getstate
BufferedIncrementalEncoder.setstate
    This subclass of IncrementalEncoder can be used as the baseclass for an
    incremental encoder if the encoder must keep some of the output in a
    buffer between calls to encode().
    
_buffer_encode
        Create an IncrementalDecoder instance.
        The IncrementalDecoder may use different error handling schemes by
        providing the errors keyword argument. See the module docstring
        for a list of possible values.
        
IncrementalDecoder.__init__
        Decode input and returns the resulting object.
        
IncrementalDecoder.decode
        Reset the decoder to the initial state.
        
IncrementalDecoder.reset
        Return the current state of the decoder.
        This must be a (buffered_input, additional_state_info) tuple.
        buffered_input must be a bytes object containing bytes that
        were passed to decode() that have not yet been converted.
        additional_state_info must be a non-negative integer
        representing the state of the decoder WITHOUT yet having
        processed the contents of buffered_input.  In the initial state
        and after reset(), getstate() must return (b"", 0).
        
IncrementalDecoder.getstate
        Set the current state of the decoder.
        state must have been returned by getstate().  The effect of
        setstate((b"", 0)) must be equivalent to reset().
        
IncrementalDecoder.setstate
    An IncrementalDecoder decodes an input in multiple steps. The input can
    be passed piece by piece to the decode() method. The IncrementalDecoder
    remembers the state of the decoding process between calls to decode().
    
BufferedIncrementalDecoder.__init__
BufferedIncrementalDecoder._buffer_decode
BufferedIncrementalDecoder.decode
BufferedIncrementalDecoder.reset
BufferedIncrementalDecoder.getstate
BufferedIncrementalDecoder.setstate
    This subclass of IncrementalDecoder can be used as the baseclass for an
    incremental decoder if the decoder must be able to handle incomplete
    byte sequences.
    
_buffer_decode
 Creates a StreamWriter instance.
            stream must be a file-like object open for writing.
            The StreamWriter may use different error handling
            schemes by providing the errors keyword argument. These
            parameters are predefined:
             'strict' - raise a ValueError (or a subclass)
             'ignore' - ignore the character and continue with the next
             'replace'- replace with a suitable replacement character
             'xmlcharrefreplace' - Replace with the appropriate XML
                                   character reference.
             'backslashreplace'  - Replace with backslashed escape
                                   sequences.
             'namereplace'       - Replace with \N{...} escape sequences.
            The set of allowed parameter values can be extended via
            register_error.
        
StreamWriter.__init__
 Writes the object's contents encoded to self.stream.
        
consumed
StreamWriter.write
 Writes the concatenated list of strings to the stream
            using .write().
        
StreamWriter.writelines
 Resets the codec buffers used for keeping internal state.
            Calling this method should ensure that the data on the
            output is put into a clean state, that allows appending
            of new fresh data without having to rescan the whole
            stream to recover state.
        
StreamWriter.reset
whence
StreamWriter.seek
 Inherit all other methods from the underlying stream.
        
StreamWriter.__getattr__
StreamWriter.__enter__
StreamWriter.__exit__
can't serialize %s
StreamWriter.__reduce_ex__
 Creates a StreamReader instance.
            stream must be a file-like object open for reading.
            The StreamReader may use different error handling
            schemes by providing the errors keyword argument. These
            parameters are predefined:
             'strict' - raise a ValueError (or a subclass)
             'ignore' - ignore the character and continue with the next
             'replace'- replace with a suitable replacement character
             'backslashreplace' - Replace with backslashed escape sequences;
            The set of allowed parameter values can be extended via
            register_error.
        
StreamReader.__init__
StreamReader.decode
 Decodes data from the stream self.stream and returns the
            resulting object.
            chars indicates the number of decoded code points or bytes to
            return. read() will never return more data than requested,
            but it might return less, if there is not enough available.
            size indicates the approximate maximum number of decoded
            bytes or code points to read for decoding. The decoder
            can modify this setting as appropriate. The default value
            -1 indicates to read and decode as much as possible.  size
            is intended to prevent having to decode huge files in one
            step.
            If firstline is true, and a UnicodeDecodeError happens
            after the first line terminator in the input only the first line
            will be returned, the rest of the input will be kept until the
            next call to read().
            The method should use a greedy read strategy, meaning that
            it should read as much data as is allowed within the
            definition of the encoding and the given size, e.g.  if
            optional encoding endings or state markers are available
            on the stream, these should be read too.
        
nxM$
result
decodedbytes
newchars
newdata
StreamReader.read
=	F 
firstline
chars
 Read one line from the input stream and return the
            decoded data.
            size, if given, is passed as size argument to the
            read() method.
        
line0withoutend
line0withend
%{U#
lines
\"	N
readsize
StreamReader.readline
 Read all lines available on the input stream
            and return them as a list.
            Line breaks are implemented using the codec's decoder
            method and are included in the list entries.
            sizehint, if given, is ignored since there is no efficient
            way to finding the true end-of-line.
        
StreamReader.readlines
 Resets the codec buffers used for keeping internal state.
            Note that no stream repositioning should take place.
            This method is primarily intended to be able to recover
            from decoding errors.
        
linebuffer
charbuffer
LhVFhU
_empty_charbuffer
bytebuffer
StreamReader.reset
 Set the input stream's current position.
            Resets the codec buffers used for keeping state.
        
StreamReader.seek
 Return the next decoded line from the input stream.
StreamReader.__next__
StreamReader.__iter__
StreamReader.__getattr__
StreamReader.__enter__
StreamReader.__exit__
StreamReader.__reduce_ex__
charbuffertype
 Creates a StreamReaderWriter instance.
            stream must be a Stream-like object.
            Reader, Writer must be factory functions or classes
            providing the StreamReader, StreamWriter interface resp.
            Error handling is done in the same way as defined for the
            StreamWriter/Readers.
        
StreamReaderWriter.__init__
StreamReaderWriter.read
StreamReaderWriter.readline
StreamReaderWriter.readlines
StreamReaderWriter.__next__
StreamReaderWriter.__iter__
StreamReaderWriter.write
StreamReaderWriter.writelines
StreamReaderWriter.reset
StreamReaderWriter.seek
StreamReaderWriter.__getattr__
StreamReaderWriter.__enter__
StreamReaderWriter.__exit__
StreamReaderWriter.__reduce_ex__
 StreamReaderWriter instances allow wrapping streams which
        work in both read and write modes.
        The design is such that one can use the factory functions
        returned by the codec.lookup() function to construct the
        instance.
    
 Creates a StreamRecoder instance which implements a two-way
            conversion: encode and decode work on the frontend (the
            data visible to .read() and .write()) while Reader and Writer
            work on the backend (the data in stream).
            You can use these objects to do transparent
            transcodings from e.g. latin-1 to utf-8 and back.
            stream must be a file-like object.
            encode and decode must adhere to the Codec interface; Reader and
            Writer must be factory functions or classes providing the
            StreamReader and StreamWriter interfaces resp.
            Error handling is done in the same way as defined for the
            StreamWriter/Readers.
        
Writer
Reader
StreamRecoder.__init__
StreamRecoder.read
StreamRecoder.readline
StreamRecoder.readlines
>Q2{
bytesencoded
StreamRecoder.__next__
StreamRecoder.__iter__
StreamRecoder.write
bytesdecoded
StreamRecoder.writelines
StreamRecoder.reset
writer
reader
StreamRecoder.seek
StreamRecoder.__getattr__
StreamRecoder.__enter__
StreamRecoder.__exit__
StreamRecoder.__reduce_ex__
unknown
 StreamRecoder instances translate data from one encoding to another.
        They use the complete set of APIs returned by the
        codecs.lookup() function to implement their task.
        Data written to the StreamRecoder is first decoded into an
        intermediate format (depending on the "decode" codec) and then
        written to the underlying stream using an instance of the provided
        Writer class.
        In the other direction, data is read from the underlying stream using
        a Reader instance and then encoded and returned to the caller.
    
writelines
readlines
 Open an encoded file using the given mode and return
        a wrapped version providing transparent encoding/decoding.
        Note: The wrapped version will only accept the object format
        defined by the codecs, i.e. Unicode objects for most builtin
        codecs. Output is also codec dependent and will usually be
        Unicode as well.
        If encoding is not None, then the
        underlying encoded files are always opened in binary mode.
        The default file mode is 'r', meaning to open the file in read mode.
        encoding specifies the encoding which is to be used for the
        file.
        errors may be given to define the error handling. It defaults
        to 'strict' which causes ValueErrors to be raised in case an
        encoding error occurs.
        buffering has the same meaning as for the builtin open() API.
        It defaults to -1 which means that the default buffer size will
        be used.
        The returned wrapped file object provides an extra attribute
        .encoding which allows querying the used encoding. This
        attribute is only available if an encoding was specified as
        parameter.
    
info
 Return a wrapped version of file which provides transparent
        encoding translation.
        Data written to the wrapped file is decoded according
        to the given data_encoding and then encoded to the underlying
        file using file_encoding. The intermediate data type
        will usually be Unicode but depends on the specified codecs.
        Bytes read from the file are decoded using file_encoding and then
        passed back to the caller encoded using data_encoding.
        If file_encoding is not given, it defaults to data_encoding.
        errors may be given to define the error handling. It defaults
        to 'strict' which causes ValueErrors to be raised in case an
        encoding error occurs.
        The returned wrapped file object provides two extra attributes
        .data_encoding and .file_encoding which reflect the given
        parameters of the same name. The attributes can be used for
        introspection by Python programs.
    
file_info
data_info
ft7<n_
file_encoding
data_encoding
 Lookup up the codec for the given encoding and return
        its encoder function.
        Raises a LookupError in case the encoding cannot be found.
    
 Lookup up the codec for the given encoding and return
        its decoder function.
        Raises a LookupError in case the encoding cannot be found.
    
 Lookup up the codec for the given encoding and return
        its IncrementalEncoder class or factory function.
        Raises a LookupError in case the encoding cannot be found
        or the codecs doesn't provide an incremental encoder.
    
incrementalencoder
 Lookup up the codec for the given encoding and return
        its IncrementalDecoder class or factory function.
        Raises a LookupError in case the encoding cannot be found
        or the codecs doesn't provide an incremental decoder.
    
incrementaldecoder
 Lookup up the codec for the given encoding and return
        its StreamReader class or factory function.
        Raises a LookupError in case the encoding cannot be found.
    
streamreader
 Lookup up the codec for the given encoding and return
        its StreamWriter class or factory function.
        Raises a LookupError in case the encoding cannot be found.
    
streamwriter
lookup
    Encoding iterator.
    Encodes the input strings from the iterator using an IncrementalEncoder.
    errors and kwargs are passed through to the IncrementalEncoder
    constructor.
    
encoder
    Decoding iterator.
    Decodes the input strings from the iterator using an IncrementalDecoder.
    errors and kwargs are passed through to the IncrementalDecoder
    constructor.
    
output
iterator
 make_identity_dict(rng) -> dict
        Return a dictionary where elements of the rng sequence are
        mapped to themselves.
    
 Creates an encoding map from a decoding map.
        If a target mapping in the decoding map occurs multiple
        times, then that target is mapped to None (undefined mapping),
        causing an exception when encountered by the charmap codec
        during translation.
        One example where this happens is cp875.py which decodes
        multiple character to \u001a.
    
decoding_map
namereplace
backslashreplace
xmlcharrefreplace
Failed to load the builtin codecs: %s
 codecs -- Python Codec Registry, API and helpers.
Written by Marc-Andre Lemburg (mal@lemburg.com).
(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.
encodings
_false
LookupError
namereplace_errors
backslashreplace_errors
xmlcharrefreplace_errors
replace_errors
ignore_errors
strict_errors
lookup_error
make_encoding_map
make_identity_dict
iterdecode
iterencode
getwriter
getreader
getincrementaldecoder
getincrementalencoder
getdecoder
getencoder
EncodedFile
StreamRecoder
StreamReaderWriter
StreamReader
StreamWriter
BufferedIncrementalDecoder
IncrementalDecoder
BufferedIncrementalEncoder
IncrementalEncoder
Codec
CodecInfo
BOM64_BE
BOM64_LE
BOM32_BE
BOM32_LE
BOM_UTF32
BOM_UTF16
BOM_UTF32_BE
BOM_UTF32_LE
BOM_UTF16_BE
BOM_BE
BOM_UTF16_LE
BOM_LE
BOM_UTF8
SystemError
_codecs
<frozen codecs>
Guido van Rossum <guido@python.org>, Mike Verdone <mike.verdone@gmail.com>, Mark Russell <mark.russell@zen.co.uk>, Antoine Pitrou <solipsis@pitrou.net>, Amaury Forgeot d'Arc <amauryfa@gmail.com>, Benjamin Peterson <benjamin@python.org>
The io module provides the Python interfaces to stream handling. The
builtin open function is defined in this module.
At the top of the I/O hierarchy is the abstract base class IOBase. It
defines the basic interface to a stream. Note, however, that there is no
separation between reading and writing to streams; implementations are
allowed to raise an OSError if they do not support a given operation.
Extending IOBase is RawIOBase which deals simply with the reading and
writing of raw bytes to a stream. FileIO subclasses RawIOBase to provide
an interface to OS files.
BufferedIOBase deals with buffering on a raw byte stream (RawIOBase). Its
subclasses, BufferedWriter, BufferedReader, and BufferedRWPair buffer
streams that are readable, writable, and both respectively.
BufferedRandom provides a buffered interface to random access
streams. BytesIO is a simple stream of in-memory bytes.
Another IOBase subclass, TextIOBase, deals with the encoding and decoding
of streams into text. TextIOWrapper, which extends it, is a buffered text
interface to a buffered raw stream (`BufferedIOBase`). Finally, StringIO
is an in-memory stream for text.
Argument names are not part of the specification, and only the arguments
of open() are intended to be used as keyword arguments.
data:
DEFAULT_BUFFER_SIZE
   An int containing the default buffer size used by the module's buffered
   I/O classes. open() uses the file's blksize (as obtained by os.stat) if
   possible.
klass
TextIOBase
_TextIOBase
BufferedIOBase
_BufferedIOBase
RawIOBase
_RawIOBase
IOBase
_IOBase
IncrementalNewlineDecoder
BufferedRandom
BufferedRWPair
BufferedWriter
BufferedReader
StringIO
BytesIO
FileIO
UnsupportedOperation
BlockingIOError
DEFAULT_BUFFER_SIZE
__author__
<frozen io>
__mro__
methods
Hashable.__hash__
Hashable.__subclasshook__
Awaitable.__await__
Awaitable.__subclasshook__
Send a value into the coroutine.
        Return next yielded value or raise StopIteration.
        
Coroutine.send
Raise an exception in the coroutine.
        Return next yielded value or raise StopIteration.
        
with_traceback
Coroutine.throw
coroutine ignored GeneratorExit
Coroutine.close
Coroutine.__subclasshook__
AsyncIterable.__aiter__
AsyncIterable.__subclasshook__
Return the next item or raise StopAsyncIteration when exhausted.
AsyncIterator.__anext__
AsyncIterator.__aiter__
AsyncIterator.__subclasshook__
Return the next item from the asynchronous generator.
        When exhausted, raise StopAsyncIteration.
        
AsyncGenerator.__anext__
Send a value into the asynchronous generator.
        Return next yielded value or raise StopAsyncIteration.
        
AsyncGenerator.asend
Raise an exception in the asynchronous generator.
        Return next yielded value or raise StopAsyncIteration.
        
AsyncGenerator.athrow
asynchronous generator ignored GeneratorExit
Raise GeneratorExit inside coroutine.
        
StopAsyncIteration
GeneratorExit
AsyncGenerator.aclose
AsyncGenerator.__subclasshook__
aclose
athrow
asend
Iterable.__iter__
Iterable.__subclasshook__
Return the next item from the iterator. When exhausted, raise StopIteration
Iterator.__next__
Iterator.__iter__
Iterator.__subclasshook__
Reversible.__reversed__
Reversible.__subclasshook__
Return the next item from the generator.
        When exhausted, raise StopIteration.
        
Generator.__next__
Send a value into the generator.
        Return next yielded value or raise StopIteration.
        
Generator.send
Raise an exception in the generator.
        Return next yielded value or raise StopIteration.
        
Generator.throw
generator ignored GeneratorExit
Raise GeneratorExit inside generator.
        
Generator.close
Generator.__subclasshook__
Sized.__len__
Sized.__subclasshook__
Container.__contains__
Container.__subclasshook__
Collection.__subclasshook__
Buffer.__buffer__
Buffer.__subclasshook__
Expected a list of types, an ellipsis, ParamSpec, or Concatenate. Got 
Callable must be used as Callable[[arg, ...], result].
_CallableGenericAlias.__new__
collections.abc.Callable[[
_CallableGenericAlias.__repr__
_CallableGenericAlias.__reduce__
t_args
t_result
new_args
_CallableGenericAlias.__getitem__
     
 Represent `Callable[argtypes, resulttype]`.
    This sets ``__args__`` to a tuple containing the flattened ``argtypes``
    followed by ``resulttype``.
    Example: ``Callable[[int, str], float]`` sets ``__args__`` to
    ``(int, str, float)``.
    
_ConcatenateGenericAlias
ParamSpec
_is_param_expr.<locals>.<genexpr>
typing
Checks if obj matches either a list of types, ``...``, ``ParamSpec`` or
    ``_ConcatenateGenericAlias`` from typing.py
    
Return the repr() of an object, special-casing types (internal helper).
    Copied from :mod:`typing` since collections.abc
    shouldn't depend on that module.
    (Keep this roughly in sync with the typing version.)
    
Ellipsis
Callable.__call__
Callable.__subclasshook__
elem
Set.__le__
Set.__lt__
Set.__gt__
Set.__ge__
Set.__eq__
Construct an instance of the class from any iterable input.
        Must override this method if the class constructor signature
        does not accept an iterable for an input.
        
Set._from_iterable
Set.__and__.<locals>.<genexpr>
Set.__and__
Return True if two sets have a null intersection.
Set.isdisjoint
Set.__or__.<locals>.<genexpr>
chain
Set.__or__
Set.__sub__.<locals>.<genexpr>
Set.__sub__
Set.__rsub__.<locals>.<genexpr>
Set.__rsub__
Set.__xor__
Compute the hash value of a set.
        Note that we don't define __hash__: not all sets are hashable.
        But if you define a hashable set type, its __hash__ should
        call this function.
        This must be compatible __eq__.
        All sets ought to compare equal if they contain the same
        elements, regardless of how they are implemented, and
        regardless of the order of the elements; so there's not much
        freedom for __eq__ or __hash__.  We match the algorithm used
        by the built-in frozenset type.
        
hash
maxsize
MASK
Set._hash
A set is a finite, iterable container.
    This class provides concrete generic implementations of all
    methods except for __contains__, __iter__ and __len__.
    To override the comparisons (presumably for speed, as the
    semantics are fixed), redefine __le__ and __ge__,
    then the other operations will automatically follow suit.
    
_hash
isdisjoint
Add an element.
MutableSet.add
Remove an element.  Do not raise an exception if absent.
MutableSet.discard
Remove an element. If not a member, raise a KeyError.
MutableSet.remove
Return the popped value.  Raise KeyError if empty.
MutableSet.pop
This is slow (creates N new iterators!) but effective.
MutableSet.clear
MutableSet.__ior__
MutableSet.__iand__
MutableSet.__ixor__
MutableSet.__isub__
A mutable set is a finite, iterable container.
    This class provides concrete generic implementations of all
    methods except for __contains__, __iter__, __len__,
    add(), and discard().
    To override the comparisons (presumably for speed, as the
    semantics are fixed), all you have to do is redefine __le__ and
    then the other operations will automatically follow suit.
    
Mapping.__getitem__
D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
Mapping.get
Mapping.__contains__
D.keys() -> a set-like object providing a view on D's keys
Mapping.keys
D.items() -> a set-like object providing a view on D's items
Mapping.items
D.values() -> an object providing a view on D's values
Mapping.values
Mapping.__eq__
A Mapping is a generic container for associating key/value
    pairs.
    This class provides concrete generic implementations of all
    methods except for __getitem__, __iter__, and __len__.
    
MappingView.__init__
MappingView.__len__
{0.__class__.__name__}({0._mapping!r})
MappingView.__repr__
KeysView._from_iterable
KeysView.__contains__
KeysView.__iter__
ItemsView._from_iterable
_from_iterable
_mapping
ItemsView.__contains__
ItemsView.__iter__
ValuesView.__contains__
ValuesView.__iter__
MutableMapping.__setitem__
MutableMapping.__delitem__
D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
          If key is not found, d is returned if given, otherwise KeyError is raised.
        
MutableMapping.pop
D.popitem() -> (k, v), remove and return some (key, value) pair
           as a 2-tuple; but raise KeyError if D is empty.
        
MutableMapping.popitem
D.clear() -> None.  Remove all items from D.
MutableMapping.clear
 D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.
            If E present and has a .keys() method, does:     for k in E.keys(): D[k] = E[k]
            If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
            In either case, this is followed by: for k, v in F.items(): D[k] = v
        
MutableMapping.update
D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
MutableMapping.setdefault
A MutableMapping is a generic container for associating
    key/value pairs.
    This class provides concrete generic implementations of all
    methods except for __getitem__, __setitem__, __delitem__,
    __iter__, and __len__.
    
popitem
Tz\M
_MutableMapping__marker
Sequence.__getitem__
Sequence.__iter__
Sequence.__contains__
Sequence.__reversed__
S.index(value, [start, [stop]]) -> integer -- return first index of value.
           Raises ValueError if the value is not present.
           Supporting start and stop arguments is optional, but
           recommended.
        
stop
Sequence.index
#	A4
Sequence.count.<locals>.<genexpr>
S.count(value) -> integer -- return number of occurrences of value
Sequence.count
All the operations on a read-only sequence.
    Concrete subclasses must override __new__ or __init__,
    __getitem__, and __len__.
    
namespace
bases
_DeprecateByteStringMeta.__new__
      
collections.abc.ByteString
super
_deprecated
instance
_DeprecateByteStringMeta.__instancecheck__
This unifies bytes and bytearray.
    XXX Should add all their methods.
    
MutableSequence.__setitem__
MutableSequence.__delitem__
S.insert(index, value) -- insert value before index
MutableSequence.insert
S.append(value) -- append value to the end of the sequence
MutableSequence.append
S.clear() -> None -- remove all items from S
MutableSequence.clear
S.reverse() -- reverse *IN PLACE*
MutableSequence.reverse
S.extend(iterable) -- extend sequence by appending elements from the iterable
MutableSequence.extend
S.pop([index]) -> item -- remove and return item at index (default last).
           Raise IndexError if list is empty or index is out of range.
        
MutableSequence.pop
S.remove(value) -- remove first occurrence of value.
           Raise ValueError if the value is not present.
        
MutableSequence.remove
MutableSequence.__iadd__
All the operations on a read-write sequence.
    Concrete subclasses must provide __new__ or __init__,
    __getitem__, __setitem__, __delitem__, __len__, and insert().
    
collections.abc
Abstract Base Classes (ABCs) for collections, according to PEP 3119.
Unit tests are in test_collections.
MutableSequence
ByteString
_DeprecateByteStringMeta
|7zQ
memoryview
Sequence
ValuesView
ItemsView
KeysView
MappingView
MutableSet
frozenset
Callable
_type_repr
_is_param_expr
_CallableGenericAlias
Buffer
Collection
Container
Sized
Generator
Reversible
Iterator
Iterable
 L3g
AsyncGenerator
AsyncIterator
AsyncIterable
Coroutine
DfG~*
Awaitable
Hashable
async_generator
coroutine
_coro
>Y\I
generator
mappingproxy
]0}'i
dict_items
dict_values
dict_keys
zip_iterator
tuple_iterator
str_iterator
set_iterator
L|rpF
longrange_iterator
range_iterator
list_reverseiterator
list_iterator
dict_itemiterator
dict_valueiterator
dict_keyiterator
bytearray_iterator
bytearray
bytes_iterator
FunctionType
EllipsisType
ABCMeta
<frozen _collections_abc>
Quitter.__init__
 to exit
() or 
Use 
Quitter.__repr__
SystemExit
Quitter.__call__
_Printer.__init__
_Printer__linecnt
_Printer__data
_Printer__filenames
_Printer.__setup
__setup
Type %s() to see the full %s text
_Printer__name
_Printer.__repr__
Hit Return for more, or q (and Return) to quit: 
IndexError
_Printer__lines
range
prompt
_Printer.__call__
interactive prompt objects for printing the license text, a list of
    contributors and the copyright notice.
_Printer__setup
MAXLINES
Type help() for interactive help, or help(object) for help about object.
_Helper.__repr__
pydoc
kwds
_Helper.__call__
Define the builtin 'help'.
    This is a wrapper around pydoc.help that provides a helpful message
    when 'help' is typed at the Python interactive prompt.
    Calling help() at the Python prompt starts an interactive help session.
    Calling help(thing) prints help for the python object 'thing'.
    
The objects used by the site module to add custom builtins.
<frozen _sitebuiltins>
Test whether a path exists.  Returns False for broken symbolic links
Test whether a path is a regular file
Return true if the pathname refers to an existing directory.
Test whether a path is a symbolic link
Return the size of a file, reported by os.stat().
st_size
Return the last modification time of a file, reported by os.stat().
st_mtime
Return the last access time of a file, reported by os.stat().
st_atime
Return the metadata change time of a file, reported by os.stat().
st_ctime
Given a list of pathnames, returns the longest common leading component
Test whether two stat buffers reference the same file
Test whether two pathnames reference the same actual file or directory
    This is determined by the device number and i-node number and
    raises an exception if an os.stat() call on either pathname fails.
    
Test whether two open file objects reference the same file
fstat
Split the extension from a pathname.
    Extension is everything from the last dot to the end, ignoring
    leading dots.  Returns "(root, ext)"; ext may be empty.
filenameIndex
dotIndex
altsepIndex
~^}E
sepIndex
Can't mix strings and bytes in path components
() argument must be str, bytes, or os.PathLike object, not 
hasbytes
hasstr
funcname
Path operations common to more than one OS
Do not use directly.  The OS specific modules import the appropriate
functions from this module themselves.
<frozen genericpath>
Normalize case of pathname.
        Makes all characters lowercase and all slashes into backslashes.
        
colon_sep
p_path
p_root
p_drive
result_path
result_root
result_drive
B/C,
Split a pathname into drive/UNC sharepoint and relative path specifiers.
    Returns a 2-tuple (drive_or_unc, path); either part may be empty.
    If you assign
        result = splitdrive(p)
    It is always true that:
        result[0] + result[1] == p
    If the path contained a drive letter, drive_or_unc will contain everything
    up to and including the colon.  e.g. splitdrive("c:/dir") returns ("c:", "/dir")
    If the path contained a UNC path, the drive_or_unc will contain the host name
    and share up to but not including the fourth directory separator character.
    e.g. splitdrive("//host/computer/dir") returns ("//host/computer", "/dir")
    Paths cannot contain both a drive letter and a UNC path.
    
Split a pathname into drive, root and tail. The drive is defined
    exactly as in splitdrive(). On Windows, the root may be a single path
    separator or an empty string. The tail contains anything after the root.
    For example:
        splitroot('//server/share/') == ('//server/share', '/', '')
        splitroot('C:/Users/Barney') == ('C:', '/', 'Users/Barney')
        splitroot('C:///spam///ham') == ('C:', '/', '//spam///ham')
        splitroot('Windows/notepad') == ('', '', 'Windows/notepad')
    
index2
normp
colon
Split a pathname.
    Return tuple (head, tail) where tail is everything after the final slash.
    Either part may be empty.
Test whether a path is a junction
IO_REPARSE_TAG_MOUNT_POINT
Test whether a path exists.  Returns True for broken symbolic links
Test whether a path is a mount point (a drive root, the root of a
    share, or a mounted volume)
casefold
seps
,p=	Qg
USERNAME
HOMEDRIVE
.}[)
HOMEPATH
USERPROFILE
Expand ~ and ~user constructs.
    If user or $HOME is unknown, do nothing.
current_user
target_user
ascii
Expand shell variables of the forms $var, ${var} and %var%.
    Unknown variables are left unchanged.
digits
ascii_letters
pathlen
index
dollar
rbrace
brace
percent
quote
varchars
               
Return the absolute version of a path.
Y9oG
old_path
allowed_winerror
'	A3
\\.\NUL
\\?\UNC\
\\?\
\\.\NUL
\\?\UNC\
\\?\
winerror
getcwd
getcwdb
spath
y;iVM
initial_winerror
had_prefix
new_unc_prefix
unc_prefix
, start on mount 
path is on mount 
path_rest
sA"#
path_drive
start_rest
start_drive
path_abs
start_abs
,7F#
Paths don't have the same drive
drive
drivesplits
                  
Determines whether the specified path is on a Windows Dev Drive.
st_reparse_tag
.;C:\bin
Common pathname manipulations, WindowsNT/95 version.
Instead of importing this module directly, import os and refer to this
module as os.path.
isdevdrive
_path_isdevdrive
_path_exists
_path_islink
_path_isfile
_path_isdir
_getfinalpathname_nonstrict
_readlink_deep
_nt_readlink
%:x|
_getfinalpathname
_getfullpathname
_getvolumepathname
stat_result
_LCMAP_LOWERCASE
LCMAP_LOWERCASE
_LOCALE_NAME_INVARIANT
LOCALE_NAME_INVARIANT
_LCMapStringEx
LCMapStringEx
#l>a\
_winapi
_get_bothseps
<frozen ntpath>
sameopenfile
samefile
getctime
getatime
getmtime
getsize
Normalize case of pathname.  Has no effect under Posix
Test whether a path is absolute
Join two or more pathname components, inserting '/' as needed.
    If any component is an absolute path, all previous path components
    will be discarded.  An empty last part will result in a path that
    ends with a separator.
Split a pathname.  Returns tuple "(head, tail)" where "tail" is
    everything after the final slash.  Either part may be empty.
Split a pathname into drive and path. On Posix, drive is always
    empty.
Split a pathname into drive, root and tail. On Posix, drive is always
    empty; the root may be empty, a single slash, or two slashes. The tail
    contains anything after the root. For example:
        splitroot('foo/bar') == ('', '', 'foo/bar')
        splitroot('/foo/bar') == ('', '/', 'foo/bar')
        splitroot('//foo/bar') == ('', '//', 'foo/bar')
        splitroot('///foo/bar') == ('', '/', '//foo/bar')
    
Returns the final component of a pathname
rfind
Returns the directory component of a pathname
Test whether a path is a junction
    Junctions are not a part of posix semantics
Test whether a path is a mount point
|O@-
st_ino
st_dev
ino2
ino1
dev2
dev1
}nVo
HOME
Expand ~ and ~user constructions.  If user or $HOME is unknown,
    do nothing.
getpwnam
pw_dir
getpwuid
find
root
pwent
userhome
tilde
\$(\w+|\{[^}]*\})
\$(\w+|\{[^}]*\})
Expand shell variables of form $var and ${var}.  Unknown variables
    are left unchanged.
group
span
search
xd>_
            
Normalize path, eliminating double slashes, etc.
comp
new_comps
comps
initial_slashes
dotdot
empty
Return an absolute path.
Return the canonical path of the specified filename, eliminating any
symbolic links encountered in the path.
is_link
newpath
rest
no path specified
Return a relative version of a path
DeprecationWarning
commonprefix
rel_list
start_list
-3C3
32D%
commonpath.<locals>.<genexpr>
Can't mix absolute and relative paths
commonpath() arg is an empty sequence
Given a sequence of path names, returns the longest common sub-path.
_check_arg_types
K$=#
common
split_paths
            @
		D&
)4D,
/dev/null
/bin:/usr/bin
Common operations on Posix pathnames.
Instead of importing this module directly, import os and refer to
this module as os.path.  The "os.path" name is an alias for this
module on Posix systems; on other systems (e.g. Windows),
os.path provides the same operations in a manner specific to that
platform, and is an alias to another module (e.g. ntpath).
Some of this can actually be useful on non-Posix systems too, e.g.
for manipulation of the pathname component of URLs.
commonpath
relpath
supports_unicode_filenames
_joinrealpath
realpath
normpath
_path_normpath
expandvars
_varprogb
~?_8
_varprog
ismount
lexists
isjunction
basename
splitroot
splitdrive
_splitext
splitext
isabs
_get_sep
genericpath
<frozen posixpath>
ASCII
makedirs(name [, mode=0o777][, exist_ok=False])
    Super-mkdir; create a leaf directory and all intermediate ones.  Works like
    mkdir, except that any intermediate path segment (not just the rightmost)
    will be created if it does not exist. If the target directory already
    exists, raise an OSError if exist_ok is False. Otherwise no exception is
    raised.  This is recursive.
    
FileExistsError
>`P+
cdir
exist_ok
removedirs(name)
    Super-rmdir; remove a leaf directory and all empty intermediate
    ones.  Works like rmdir except that, if the leaf directory is
    successfully removed, directories corresponding to rightmost path
    segments will be pruned away until either the whole path is
    consumed or an error occurs.  Errors during this latter phase are
    ignored -- they generally mean that a directory was not empty.
    
/	A;
renames(old, new)
    Super-rename; create directories as necessary and delete any left
    empty.  Works like rename, except creation of any intermediate
    directories needed to make the new pathname good is attempted
    first.  After the rename, directories corresponding to rightmost
    path segments of the old name will be pruned until either the
    whole path is consumed or a nonempty directory is found.
    Note: this function can fail with the new directory structure made
    if you lack permissions needed to unlink the leaf directory or
    file.
    
tail
head
os.walk
Directory tree generator.
    For each directory in the directory tree rooted at top (including top
    itself, but excluding '.' and '..'), yields a 3-tuple
        dirpath, dirnames, filenames
    dirpath is a string, the path to the directory.  dirnames is a list of
    the names of the subdirectories in dirpath (including symlinks to directories,
    and excluding '.' and '..').
    filenames is a list of the names of the non-directory files in dirpath.
    Note that the names in the lists are just names, with no path components.
    To get a full path (which begins with top) to a file or directory in
    dirpath, do os.path.join(dirpath, name).
    If optional arg 'topdown' is true or not specified, the triple for a
    directory is generated before the triples for any of its subdirectories
    (directories are generated top down).  If topdown is false, the triple
    for a directory is generated after the triples for all of its
    subdirectories (directories are generated bottom up).
    When topdown is true, the caller can modify the dirnames list in-place
    (e.g., via del or slice assignment), and walk will only recurse into the
    subdirectories whose names remain in dirnames; this can be used to prune the
    search, or to impose a specific order of visiting.  Modifying dirnames when
    topdown is false has no effect on the behavior of os.walk(), since the
    directories in dirnames have already been generated by the time dirnames
    itself is generated. No matter the value of topdown, the list of
    subdirectories is retrieved before the tuples for the directory and its
    subdirectories are generated.
    By default errors from the os.scandir() call are ignored.  If
    optional arg 'onerror' is specified, it should be a function; it
    will be called with one argument, an OSError instance.  It can
    report the error to continue with the walk, or raise the exception
    to abort the walk.  Note that the filename is available as the
    filename attribute of the exception object.
    By default, os.walk does not follow symbolic links to subdirectories on
    systems that support them.  In order to get this functionality, set the
    optional argument 'followlinks' to true.
    Caution:  if you pass a relative pathname for top, don't change the
    current working directory between resumptions of walk.  walk never
    changes the current directory, and assumes that the client doesn't
    either.
    Example:
    import os
    from os.path import join, getsize
    for root, dirs, files in os.walk('python/Lib/email'):
        print(root, "consumes ")
        print(sum(getsize(join(root, name)) for name in files), end=" ")
        print("bytes in", len(files), "non-directory files")
        if 'CVS' in dirs:
            dirs.remove('CVS')  # don't visit CVS directories
    
is_junction
StopIteration
new_path
walk_into
m{Qvj
cont
walk_dirs
islink
followlinks
                   
+	E7
os.fwalk
Directory tree generator.
        This behaves exactly like walk(), except that it yields a 4-tuple
            dirpath, dirnames, filenames, dirfd
        `dirpath`, `dirnames` and `filenames` are identical to walk() output,
        and `dirfd` is a file descriptor referring to the directory `dirpath`.
        The advantage of fwalk() over walk() is that it's safe against symlink
        races (when follow_symlinks is False).
        If dir_fd is not None, it should be a file descriptor open to a directory,
          and top should be relative; top will then be relative to that directory.
          (dir_fd is always supported for fwalk.)
        Caution:
        Since fwalk() yields file descriptors, those are only valid until the
        next iteration step, so you should dup() them if you want to keep them
        for a longer period.
        Example:
        import os
        for root, dirs, files, rootfd in os.fwalk('python/Lib/email'):
            print(root, "consumes", end="")
            print(sum(os.stat(name, dir_fd=rootfd).st_size for name in files),
                  end="")
            print("bytes in", len(files), "non-directory files")
            if 'CVS' in dirs:
                dirs.remove('CVS')  # don't visit CVS directories
        
audit
_fwalk.<locals>.<genexpr>
is_symlink
is_dir
samestat
st_mode
O_NONBLOCK
O_RDONLY
toppath
topfd
entries
nondirs
scandir_it
orig_st
entry
topname
dirfd
isroot
action
onerror
topdown
isbytes
stack
                  @@
execl(file, *args)
    Execute the executable file with argument list args, replacing the
    current process. 
execle(file, *args, env)
    Execute the executable file with argument list args and
    environment env, replacing the current process. 
execlp(file, *args)
    Execute the executable file (which is searched for along $PATH)
    with argument list args, replacing the current process. 
execlpe(file, *args, env)
    Execute the executable file (which is searched for along $PATH)
    with argument list args and environment env, replacing the current
    process. 
execvp(file, args)
    Execute the executable file (which is searched for along $PATH)
    with argument list args, replacing the current process.
    args may be a list or tuple of strings. 
execvpe(file, args, env)
    Execute the executable file (which is searched for along $PATH)
    with argument list args and environment env, replacing the
    current process.
    args may be a list or tuple of strings. 
NotADirectoryError
FileNotFoundError
saved_exc
argrest
exec_func
env cannot contain 'PATH' and b'PATH' keys
PATH
PATH
Returns the sequence of directories that will be searched for the
    named executable (similar to a shell) when launching a process.
    *env* must be an environment variable dict or None.  If *env* is None,
    os.environ will be used.
    
split
BytesWarning
simplefilter
khW6
catch_warnings
path_listb
path_list
_Environ.__init__
_Environ.__getitem__
putenv
encodevalue
_Environ.__setitem__
unsetenv
encodedkey
_Environ.__delitem__
_Environ.__iter__
_Environ.__len__
decodevalue
decodekey
_Environ.__repr__.<locals>.<genexpr>
environ({
formatted_items
_Environ.__repr__
_Environ.copy
_Environ.setdefault
_Environ.__ior__
other
_Environ.__or__
_Environ.__ror__
setdefault
_createenviron.<locals>.check_str
upper
_createenviron.<locals>.encodekey
str expected, not %s
_createenviron.<locals>.encode
surrogateescape
_createenviron.<locals>.decode
encodekey
check_str
      @@
Get an environment variable, return None if it doesn't exist.
    The optional second argument can specify an alternate default.
    key, default and the result are str.
bytes expected, not %s
Get an environment variable, return None if it doesn't exist.
        The optional second argument can specify an alternate default.
        key, default and the result are bytes.
Encode filename (an os.PathLike, bytes, or str) to the filesystem
        encoding with 'surrogateescape' error handler, return bytes unchanged.
        On Windows, use 'strict' error handler if the file system encoding is
        'mbcs' (which is the default encoding).
        
_fscodec.<locals>.fsencode
Decode filename (an os.PathLike, bytes, or str) from the filesystem
        encoding with 'surrogateescape' error handler, return str unchanged. On
        Windows, use 'strict' error handler if the file system encoding is
        'mbcs' (which is the default encoding).
        
_fscodec.<locals>.fsdecode
getfilesystemencodeerrors
getfilesystemencoding
  @@
argv first element cannot be empty
argv must be a tuple or a list
waitstatus_to_exitcode
WIFSTOPPED
waitpid
tuple
wpid
spawnv(mode, file, args) -> integer
Execute file with arguments from args in a subprocess.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
spawnve(mode, file, args, env) -> integer
Execute file with arguments from args in a subprocess with the
specified environment.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
spawnvp(mode, file, args) -> integer
Execute file (which is looked for along $PATH) with arguments from
args in a subprocess.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
spawnvpe(mode, file, args, env) -> integer
Execute file (which is looked for along $PATH) with arguments from
args in a subprocess with the supplied environment.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
spawnl(mode, file, *args) -> integer
Execute file with arguments from args in a subprocess.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
spawnle(mode, file, *args, env) -> integer
Execute file with arguments from args in a subprocess with the
supplied environment.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
spawnlp(mode, file, *args) -> integer
Execute file (which is looked for along $PATH) with arguments from
args in a subprocess with the supplied environment.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
spawnlpe(mode, file, *args, env) -> integer
Execute file (which is looked for along $PATH) with arguments from
args in a subprocess with the supplied environment.
If mode == P_NOWAIT return the pid of the process.
If mode == P_WAIT return the process's exit code if it exits normally;
otherwise return -SIG, where SIG is the signal that killed it. 
shell
popen() does not support unbuffered streams
invalid mode %r
invalid cmd type (%s, expected string)
PIPE
Popen
subprocess
JA7*6
proc
stream
_wrap_close.__init__
wait
Ue2<
_proc
returncode
_wrap_close.close
_wrap_close.__enter__
_wrap_close.__exit__
_wrap_close.__getattr__
_stream
_wrap_close.__iter__
invalid fd type (%s, expected integer)
text_encoding
expected {}.__fspath__() to return str or bytes, not {}
expected str, bytes or os.PathLike object, not 
Return the path representation of a path-like object.
    If str or bytes is passed in, it is returned unchanged. Otherwise the
    os.PathLike interface is used to get the path representation. If the
    path representation is not str or bytes, TypeError is raised. If the
    provided path is not str, bytes, or os.PathLike, TypeError is raised.
    
path_repr
path_type
Return the file system path representation of the object.
PathLike.__fspath__
NotImplemented
PathLike.__subclasshook__
Abstract base class for implementing the file system path protocol.
abstractmethod
remove_dll_directory
_AddedDllDirectory.__init__
_cookie
_AddedDllDirectory.close
_AddedDllDirectory.__enter__
_AddedDllDirectory.__exit__
<AddedDllDirectory()>
<AddedDllDirectory({!r})>
_AddedDllDirectory.__repr__
Add a path to the DLL search path.
        This search path is used when resolving dependencies for imported
        extension modules (the module itself is resolved through sys.path),
        and also by ctypes.
        Remove the directory by calling close() on the returned object or
        using it in a with statement.
        
_remove_dll_directory
_add_dll_directory
execv
fork
MS_WINDOWS
HAVE_LSTAT
HAVE_LUTIMES
HAVE_LCHOWN
lchown
HAVE_LCHMOD
chflags
HAVE_LCHFLAGS
HAVE_FSTATVFS
fstatvfs
statvfs
pathconf
HAVE_FPATHCONF
HAVE_FUTIMES
J[yk
HAVE_FUTIMENS
HAVE_FTRUNCATE
execve
HAVE_FEXECVE
HAVE_FDOPENDIR
HAVE_FCHOWN
HAVE_FCHMOD
chdir
HAVE_FCHDIR
HAVE_UTIMENSAT
rmdir
HAVE_UNLINKAT
symlink
HAVE_SYMLINKAT
rename
HAVE_RENAMEAT
readlink
HAVE_READLINKAT
HAVE_OPENAT
mknod
HAVE_MKNODAT
mkfifo
HAVE_MKFIFOAT
mkdir
HAVE_MKDIRAT
link
HAVE_LINKAT
utime
HAVE_FUTIMESAT
HAVE_FSTATAT
chown
grC"
HAVE_FCHOWNAT
chmod
HAVE_FCHMODAT
HAVE_FACCESSAT
no os specific module found
OS routines for NT or Posix depending on what system we're on.
This exports:
  - all functions from posix or nt, e.g. unlink, stat, etc.
  - os.path is either posixpath or ntpath
  - os.name is either 'posix' or 'nt'
  - os.curdir is a string representing the current directory (always '.')
  - os.pardir is a string representing the parent directory (always '..')
  - os.sep is the (or a most common) pathname separator ('/' or '\\')
  - os.extsep is the extension separator (always '.')
  - os.altsep is the alternate pathname separator (None or '/')
  - os.pathsep is the component separator used in $PATH etc
  - os.linesep is the line separator in text files ('\r' or '\n' or '\r\n')
  - os.defpath is the default search path for executables
  - os.devnull is the file path of the null device ('/dev/null', etc.)
Programs that import and use 'os' stand a better chance of being
portable between different platforms.  Of course, they must then
only use functions that are defined by all platforms (e.g., unlink
and opendir), and leave all pathname manipulation to os.path
(e.g., split and join).
{N:;
add_dll_directory
_AddedDllDirectory
PathLike
fspath
_fspath
fdopen
_wrap_close
popen
spawnlpe
spawnlp
spawnle
spawnl
spawnvpe
spawnvp
spawnve
h]fh?T$p
spawnv
_spawnvef
P_NOWAITO
P_NOWAIT
P_WAIT
fsencode
_fscodec
getenvb
wwHS
environb
_data
_check_bytes
supports_bytes_environ
getenv
_createenviron
_Environ
Mapping
MutableMapping
get_exec_path
_execvpe
execvpe
execvp
&B[3
execlpe
execlp
execle
execl
_fwalk
_fwalk_close
_fwalk_yield
)8A~
_fwalk_walk
fwalk
scandir
oV]+m
walk
%?@`9?N
_walk_symlinks_as_files
renames
removedirs
5|o)
makedirs
SEEK_END
SEEK_CUR
}Jb9Z
SEEK_SET
supports_follow_symlinks
supports_fd
supports_effective_ids
supports_dir_fd
s)t&uy
_set
_add
_globals
devnull
altsep
extsep
defpath
?u*Z 
os.path
ntpath
_have_functions
posixpath
_exit
linesep
_get_exports_list
_exists
_names
builtin_module_names
GenericAlias
list
_check_methods
_collections_abc
<frozen os>
normcase
paths
_frozen_importlib_external
_frozen_importlib
Set all module __file__ and __cached__ attributes to an absolute path
loader_module
*	C'
 Remove duplicate entries from sys.path along with making them
    absolute
Return a set containing all existing file system items from sys.path.
itemcase
!	A-
import	
import 
Remainder of file ignored
 of 
Error processing line 
 as UTF-8. Using fallback encoding 
Cannot read 
utf-8-sig
Processing .pth file: 
Skipping hidden .pth file: 
st_file_attributes
st_flags
Process a .pth file within the site-packages directory:
       For each line in the file, either combine it with sitedir to a path
       and add that to known_paths, or execute it if it starts with 'import '.
    
format_exception
rstrip
splitlines
enumerate
getencoding
UnicodeDecodeError
lstat
record
dircase
pth_content
                
A2H=
.pth
Adding directory: 
Add 'sitedir' argument to sys.path if missing and handle .pth files in
    'sitedir'
sorted
listdir
names
sitedircase
Check if user site directory is safe for inclusion
    The function tests for the command line flag (including environment var),
    process uid/gid equal to effective uid/gid.
    None: Disabled for security reasons
    False: Disabled by user (command line option)
    True: Safe and enabled
    
Vf0h
getgid
getegid
getuid
geteuid
C^G`
no_user_site
wasi
vxworks
emscripten
_getuserbase.<locals>.joinuser
.local
%d.%d
Library
Python
APPDATA
g6~,
PYTHONUSERBASE
joinuser
env_base
/site-packages
/lib/python
/lib/python/site-packages
\site-packages
\Python
_framework
winver
ver_nodot
Returns the `user base` directory path.
    The `user base` directory can be used to store data. If the global
    variable ``USER_BASE`` is not initialized yet, this function will also set
    it.
    
Returns the user-specific site-packages directory path.
    If the global variable ``USER_SITE`` is not initialized yet, this
    function will also set it.
    
userbase
Processing user site-packages
Add a per user site-package to sys.path
    Each user has its own python directory with site-packages in the
    home directory.
    
c(<a
site-packages
python%d.%d
Returns a list containing all global site-packages directories.
    For each directory present in ``prefixes`` (or the global ``PREFIXES``),
    this function will find its `site-packages` subdirectory depending on the
    system environment, and will return a list of full paths.
    
version_info
platlibdir
libdir
libdirs
seen
sitepackages
Processing global site-packages
Add site-packages to sys.path
sitedir
prefixes
Ctrl-D (i.e. EOF)
Ctrl-Z plus Return
Define new builtins 'quit' and 'exit'.
    These are objects which make the interpreter exit when called.
    The repr of each object contains a hint at how it works.
    
quit
Quitter
dzLB
See https://www.python.org/psf/license/
LICENSE
LICENSE.txt
_stdlib_dir
    Thanks to CWI, CNRI, BeOpen, Zope Corporation, the Python Software
    Foundation, and a cast of thousands for supporting Python
    development.  See www.python.org for more information.
Set 'copyright' and 'credits' in builtins
license
curdir
pardir
credits
copyright
_Printer
here
dirs
files
_Helper
write_history_file
enablerlcompleter.<locals>.register_readline.<locals>.write_history
.python_history
tab: complete
bind ^I rl_complete
libedit
register
read_history_file
expanduser
get_current_history_length
OSError
read_init_file
parse_and_bind
history
write_history
readline_doc
rlcompleter
atexit
enablerlcompleter.<locals>.register_readline
    @@
!	C-
0	C<
Enable default readline configuration on interactive prompts, by
    registering a sys.__interactivehook__.
    If the readline module can be imported, the hook will set the Tab key
    as completion key and register ~/.python_history as history file.
    This can be overridden in the sitecustomize or usercustomize module,
    or in a PYTHONSTARTUP file.
    
__interactivehook__
register_readline
isfile
conffile
venv.<locals>.<genexpr>
home
include-system-site-packages
pyvenv.cfg
__PYVENV_LAUNCHER__
darwin
lower
strip
partition
_home
dirname
_base_executable
platform
environ
system_site
virtual_conf
candidate_conf
conf_basename
site_prefix
exe_dir
              
Error in sitecustomize; set PYTHONVERBOSE for traceback:
Run custom site specific code, if available.
sitecustomize
Error in usercustomize; set PYTHONVERBOSE for traceback:
Run custom user specific code, if available.
exc_info
I!1!O
verbose
usercustomize
A9B;
Add standard site-specific directories to the module search path.
    This function is called automatically when this module is imported,
    unless the python interpreter was started with the -S flag.
    
isolated
known_paths
orig_path
doesn't exist
isdir
_script.<locals>.exists
--user-site
--user-base
ENABLE_USER_SITE: 
USER_SITE: 
USER_BASE: 
    
sys.path = [
    %s [--user-base] [--user-site]
    Without arguments print some useful information
    With arguments print the value of USER_BASE and/or USER_SITE separated
    by '%s'.
    Exit codes with --user-base or --user-site:
      0 - user site directory is enabled
      1 - user site directory is disabled by user
      2 - user site directory is disabled by super user
          or for security reasons
     >2 - unknown error
    
dedent
pathsep
textwrap
exists
user_site
user_base
help
        
Append module search paths for third-party packages to sys.path.
****************************************************************
* This module is automatically imported during initialization. *
****************************************************************
This will append site-specific paths to the module search path.  On
Unix (including Mac OSX), it starts with sys.prefix and
sys.exec_prefix (if different) and appends
lib/python<version>/site-packages.
On other platforms (such as Windows), it tries each of the
prefixes directly, as well as with lib/site-packages appended.  The
resulting directories, if they exist, are appended to sys.path, and
also inspected for path configuration files.
If a file named "pyvenv.cfg" exists one directory above sys.executable,
sys.prefix and sys.exec_prefix are set to that directory and
it is also checked for site-packages (sys.base_prefix and
sys.base_exec_prefix will always be the "real" prefixes of the Python
installation). If "pyvenv.cfg" (a bootstrap configuration file) contains
the key "include-system-site-packages" set to anything other than "false"
(case-insensitive), the system-level prefixes will still also be
searched for site-packages; otherwise they won't.
All of the resulting site-specific directories, if they exist, are
appended to sys.path, and also inspected for path configuration
files.
A path configuration file is a file whose name has the form
<package>.pth; its contents are additional directories (one per line)
to be added to sys.path.  Non-existing directories (or
non-directories) are never added to sys.path; no directory is added to
sys.path more than once.  Blank lines and lines beginning with
'#' are skipped. Lines starting with 'import' are executed.
For example, suppose sys.prefix and sys.exec_prefix are set to
/usr/local and there is a directory /usr/local/lib/python2.5/site-packages
with three subdirectories, foo, bar and spam, and two path
configuration files, foo.pth and bar.pth.  Assume foo.pth contains the
following:
  # foo package configuration
  foo
  bar
  bletch
and bar.pth contains:
  # bar package configuration
  bar
Then the following directories are added to sys.path, in this order:
  /usr/local/lib/python2.5/site-packages/bar
  /usr/local/lib/python2.5/site-packages/foo
Note that bletch is omitted because it doesn't exist; bar precedes foo
because bar.pth comes alphabetically before foo.pth; and spam is
omitted because it is not mentioned in either path configuration file.
The readline module is also automatically configured to enable
completion for systems that support it.  This can be overridden in
sitecustomize, usercustomize or PYTHONSTARTUP.  Starting Python in
isolated mode (-I) disables automatic readline configuration.
After these operations, an attempt is made to import a module
named sitecustomize, which can perform arbitrary additional
site-specific customizations.  If this import fails with an
ImportError exception, it is silently ignored.
_script
no_site
execusercustomize
execsitecustomize
venv
enablerlcompleter
sethelper
setcopyright
setquit
addsitepackages
getsitepackages
9,kd
addusersitepackages
getusersitepackages
\h?2=
getuserbase
_get_path
tnm'
_getuserbase
check_enableusersite
addsitedir
addpackage
_init_pathinfo
removeduppaths
abs_paths
makepath
_trace
USER_BASE
USER_SITE
ENABLE_USER_SITE
PREFIXES
exec_prefix
prefix
stat
_sitebuiltins
<frozen site>
Return the portion of the file's mode that can be set by
    os.chmod().
    
Return the portion of the file's mode that describes the
    file type.
    
Return True if mode is from a directory.
Return True if mode is from a character special device file.
Return True if mode is from a block special device file.
Return True if mode is from a regular file.
Return True if mode is from a FIFO (named pipe).
Return True if mode is from a symbolic link.
Return True if mode is from a socket.
Return True if mode is from a door.
Return True if mode is from an event port.
Return True if mode is from a whiteout.
Convert a file's mode to a string of the form '-rwxrwxrwx'.
char
table
perm
Constants/functions for interpreting results of os.stat() and os.lstat().
Suggested usage: from stat import *
_stat
FILE_ATTRIBUTE_VIRTUAL
FILE_ATTRIBUTE_TEMPORARY
FILE_ATTRIBUTE_SYSTEM
FILE_ATTRIBUTE_SPARSE_FILE
FILE_ATTRIBUTE_REPARSE_POINT
FILE_ATTRIBUTE_READONLY
FILE_ATTRIBUTE_OFFLINE
:w&|g
FILE_ATTRIBUTE_NO_SCRUB_DATA
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED
FILE_ATTRIBUTE_NORMAL
FILE_ATTRIBUTE_INTEGRITY_STREAM
FILE_ATTRIBUTE_HIDDEN
FILE_ATTRIBUTE_ENCRYPTED
FILE_ATTRIBUTE_DIRECTORY
FILE_ATTRIBUTE_DEVICE
FILE_ATTRIBUTE_COMPRESSED
FILE_ATTRIBUTE_ARCHIVE
filemode
_filemode_table
SF_SNAPSHOT
SF_NOUNLINK
SF_APPEND
ZjS3
SF_IMMUTABLE
SF_ARCHIVED
UF_HIDDEN
UF_COMPRESSED
UF_NOUNLINK
UF_OPAQUE
!zDm;
UF_APPEND
UF_IMMUTABLE
X2u"
UF_NODUMP
S_IXOTH
S_IWOTH
S_IROTH
1?le
S_IRWXO
S_IXGRP
S_IWGRP
S_IRGRP
S_IRWXG
S_IXUSR
S_IWUSR
}emN
S_IRUSR
S_IRWXU
S_IEXEC
S_IWRITE
S_IREAD
S_ISVTX
S_ENFMT
S_ISGID
S_ISUID
S_ISWHT
S_ISPORT
S_ISDOOR
S_ISSOCK
.7#C
S_ISLNK
S_ISFIFO
S_ISREG
S_ISBLK
S_ISCHR
S_ISDIR
S_IFWHT
S_IFPORT
S_IFDOOR
S_IFSOCK
S_IFLNK
S_IFIFO
S_IFREG
S_IFBLK
S_IFCHR
S_IFDIR
S_IFMT
S_IMODE
ST_CTIME
ST_MTIME
ST_ATIME
ST_SIZE
ST_GID
2cOA
ST_UID
ST_NLINK
yAD]
ST_DEV
ST_INO
r&#N
ST_MODE
<frozen stat>
Return the hash of *source_bytes* as used in hash-based pyc files.
source_bytes
 (required for relative module names)
no package specified for 
Resolve a relative module name to an absolute one.
repr
character
Return the spec for the specified module.
    First, sys.modules is checked to see if the module was already imported. If
    so, then sys.modules[name].__spec__ is returned. If that happens to be
    set to None, then ValueError is raised. If the module is not in
    sys.modules, then sys.meta_path is searched for a suitable spec with the
    value of 'path' given to the finders. None is returned if no spec could
    be found.
    Dotted names do not have their parent packages implicitly imported. You will
    most likely need to explicitly import all parent packages in the proper
    order for a submodule to get the correct spec.
    
.__spec__ is not set
.__spec__ is None
 while trying to find 
__path__ attribute not found on 
Return the spec for the specified module.
    First, sys.modules is checked to see if the module was already imported. If
    so, then sys.modules[name].__spec__ is returned. If that happens to be
    set to None, then ValueError is raised. If the module is not in
    sys.modules, then sys.meta_path is searched for a suitable spec with the
    value of 'path' given to the finders. None is returned if no spec could
    be found.
    If the name is for submodule (contains a dot), the parent module is
    automatically imported.
    The name and package arguments work the same as importlib.import_module().
    In other words, relative module names (with leading dots) work.
    
ModuleNotFoundError
parent_path
parent_name
fullname
package
'	C	
bool
_incompatible_extension_module_restrictions.__init__
_incompatible_extension_module_restrictions.__enter__
_override_multi_interp_extensions_check
_incompatible_extension_module_restrictions.__exit__
disable_check
_incompatible_extension_module_restrictions.override
A context manager that can temporarily skip the compatibility check.
    NOTE: This function is meant to accommodate an unusual case; one
    which is likely to eventually go away.  There's is a pretty good
    chance this is not what you were looking for.
    WARNING: Using this function to disable the check can lead to
    unexpected behavior and even crashes.  It should only be used during
    extension module development.
    If "disable_check" is True then the compatibility check will not
    happen while the context manager is active.  Otherwise the check
    *will* happen.
    Normally, extensions that do not support multiple interpreters
    may not be imported in a subinterpreter.  That implies modules
    that do not implement multi-phase init or that explicitly of out.
    Likewise for modules import in a subinterpeter with its own GIL
    when the extension does not support a per-interpreter GIL.  This
    implies the module does not have a Py_mod_multiple_interpreters slot
    set to Py_MOD_PER_INTERPRETER_GIL_SUPPORTED.
    In both cases, this context manager may be used to temporarily
    disable the check for compatible extension modules.
    You can get the same effect as this function by implementing the
    basic interface of multi-phase init (PEP 489) and lying about
    support for multiple interpreters (or per-interpreter GIL).
    
override
property
 substituted in sys.modules during a lazy load
module object for 
Trigger the load of the module and return the attribute.
attrs_updated
attrs_now
attrs_then
original_name
_LazyModule.__getattribute__
*A-E=
Trigger the load and then perform the deletion.
delattr
bBB7W
attr
_LazyModule.__delattr__
A subclass of the module type which triggers loading upon attribute access.
loader must define exec_module()
LazyLoader.__check_eager_loader
__check_eager_loader
kwargs
LazyLoader.factory.<locals>.<lambda>
Construct a callable which returns the eager loader made lazy.
LazyLoader.factory
LazyLoader.__init__
LazyLoader.create_module
is_loading
5T;cV
lock
Make the module load lazily.
RLock
loader_state
LazyLoader.exec_module
A loader that creates a module which defers loading until attribute access.
exec_module
create_module
classmethod
_LazyLoader__check_eager_loader
staticmethod
Utility code for constructing importers, etc.
LazyLoader
_LazyModule
_incompatible_extension_module_restrictions
_find_spec_from_path
resolve_name
source_hash
types
_imp
spec_from_file_location
source_from_cache
decode_source
cache_from_source
_RAW_MAGIC_NUMBER
MAGIC_NUMBER
HR#f
_find_spec
spec_from_loader
_resolve_name
module_from_spec
Loader
_abc
<frozen importlib.util>
Returns a list of all recognized module suffixes for this process
The machinery of importlib: finders, loaders, hooks, etc.
all_suffixes
NamespaceLoader
>FQK
ExtensionFileLoader
SourcelessFileLoader
SourceFileLoader
FileFinder
PathFinder
WindowsRegistryFinder
EXTENSION_SUFFIXES
BYTECODE_SUFFIXES
OPTIMIZED_BYTECODE_SUFFIXES
DEBUG_BYTECODE_SUFFIXES
SOURCE_SUFFIXES
_bootstrap_external
FrozenImporter
BuiltinImporter
ModuleSpec
<frozen importlib.machinery>
_TempModule.__init__
KeyError
_TempModule.__enter__
_saved_module
_TempModule.__exit__
Temporarily replace a module in sys.modules with an empty namespace
_ModifiedArgv0.__init__
Already preserving saved value
	/.6
RuntimeError
_ModifiedArgv0.__enter__
_saved_value
_sentinel
_ModifiedArgv0.__exit__
__cached__
Helper to run code in nominated namespace
update
cached
run_globals
          
Helper to run code in new namespace with sys modified
         
No code object available for %s
%r is a namespace package and cannot be executed
 is a package and cannot be directly executed
Cannot use package as __main__ module
.__main__
No module named %s
' as the module name.
' instead of '
. Try using '
Error while finding module specification for {!r} ({}: {})
{mod_name!r} found in sys.modules after import of package {pkg_name!r}, but prior to execution of {mod_name!r}; this may result in unpredictable behaviour
Relative module names not supported
get_code
submodule_search_locations
endswith
TypeError
AttributeError
find_spec
Wy3+n
util
RuntimeWarning
hasattr
startswith
loader
pkg_main_name
spec
warn
existing
             
)	I	
Error that _run_module_as_main() should report without a traceback
Runs the designated module in the __main__ namespace
       Note that the executed module will have full access to the
       __main__ namespace. If this is not desirable, the run_module()
       function should be used to run the module code in a fresh namespace.
       At the very least, these variables in __main__ will be overwritten:
           __name__
           __file__
           __cached__
           __loader__
           __package__
    
exit
executable
main_globals
alter_argv
       
<	B9
alter_sys
      
 module in 
can't find 
saved_main
main_name
error
    
exec
compile
Bqf:
open_code
abspath
code_path
read_code
fname
     
script_name
<run_path>
ValueError
remove
;#j3
insert
fsdecode
pkgutil
rpartition
mod_globals
temp_module
mod_spec
mod_name
importer
get_importer
pkg_name
run_name
Sds}
init_globals
path_name
           
24D(
&	D>
/	E:
5	E:
+	E7
No module specified for execution
runpy.py - locating and running Python code using the module namespace
Provides support for locating and running Python scripts using the Python
module namespace instead of the native filesystem.
This allows Python code to play nicely with non-filesystem based PEP 302
importers when locating support scripts as well as when importing modules.
run_path
_get_code_from_file
_get_main_module_details
run_module
_run_module_as_main
_Error
Exception
|V4]
_get_module_details
y.)u]
ImportError
_run_module_code
_run_code
_ModifiedArgv0
_TempModule
ModuleType
importlib.util
importlib.machinery
<frozen runpy>
TestFrozenUtf8_4
TestFrozenUtf8_2
TestFrozenUtf8_1
<frozen __hello__>
<frozen __phello__>
<frozen __phello__.ham>
<frozen __phello__.ham.eggs>
main
<frozen __phello__.spam>
Hello world!
print
initialized
<frozen frozen_only>
rT}	d
}	~	w
}	n2|
r%t	
r%t	
	|	D
d	k(
r&t&
r*t	
r*t	
r0t4
n&t	
	|	}
}	~	
}	~	w
}	~	
}	~	w
|	j!
	|	s
r!t	
	X	X
	|	j
d	k7
d	k7
	|	t
r2V	d	kD
V	d	k(
	|	t
	V	d
X	V	d
|	r/X	|
r*|	j
r]t	
Z	e	f
Z	d	
}	t	
|	_	
d	d	d	f	
Z	d	
s t	
	|	j
r6t&
r)t#
d	k(
}	t)
|	t*
|	k(
|	r0t	
|	k(
r0t	
y	y	
m	Z	m
m	Z	
d	Z	d
Z"e"Z#d Z$d!Z%d"Z&d#Z'd$Z(d!Z)d"Z*d#Z+d%Z,d&Z-d'Z.d	Z/d
Z6d	Z7d'Z8d&Z9d
Z:d(Z;d)Z<d*Z=d+Z>d,Z?e
e)d4f
e*d5f
e+e!z
e!d6f
e+d7f
e-d4f
e.d5f
e/e"z
e"d6f
e/d7f
e1d4f
e2d5f
e3e$z
e$d9f
e3d7f
Z@d:
ZAd&ZBd
ZCd#ZDd'ZEd
ZHd"ZId
ZJd)ZKd
ZNd ZOd
ZPd!ZQd(ZR	
d;lS
Z&e'd
m Z m!Z!m"Z"m#Z#m$Z$m%Z%
e(d d!
e(d"d#
e(d$d%
e(d&d'
e(d(d)
e(d*d+
e(d,d-
e(d.d/
e(d.d0
e(d1d
e*Z+
e*Z,
e(d2d3
e(d4d
e(d5d
e(d6d7
e(d6d8
e(d9d:
e*j[
e(d;d<
e(d=d
e(d>d
e(d?d@
e(dCdA
e*Z.
e(dDdE
e(dFd
e(dHd
e(dId
e(dJd
e(d1d
e(dKd
e*Z/[*[
['[(d
Z0dLZ1dMZ2d
Z3dP
Z4dQ
r)e:e
Z<dLZ=dMZ>dW
Z@dZ
ZAd[
ZBd\
ZCd]
ZDd^
mHZHmIZI
ddeH
ZJde
ZL[Kd
eNr/dh
eJeLj
eOeQeOeQ
ZR[Od
ZUZV[T
ZWdLx
ZXZYe
ZZdq
Z[dr
Z\ds
Z]dt
Z_dw
dxdyg
Zad|
d}d~g
s	egZhd
eh_i
l	Z	d
l m!Z"
Z%d 
d!k(
Z(d$d"
Z)d#
d	l	Z	d
e!e	jD
l%m&Z&
d l%m*Z+
d"l%m,Z,
d%l%m.Z.m/Z0
Z1d'
Z2d(d)
Z3d+Z4d5d,
Z5d-
d.l%m7Z8
d/l%m9Z:
d0l%m;Z<
d1l%m=Z>
d2l%m?Z?
Z@y	#
d	Z&Y
e-Z3Y
Z+e*jY
Z.[-d
Z2e2jg
Z6e6jg
d!e7
Z8e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
e8jg
d#e7
d%e8
Z:e:jg
d+e;e7e<
Z?d0
Z@d1
d5e=
ZCeCjg
d7eC
ZEeEjg
d9e=
ZFeFjg
d;e;
d=eGeC
ZHeHjg
d?eGeC
ZIeIjg
dAeGe=
ZJeJjg
dCeF
ZKeKjg
dEe9e=
ZMeMjg
eMjg
eMjg
eMjg
dIeMeQ
ZReRjg
eRjg
dKeM
ZTeTjg
eTjg
m	Z	m
Z"e jC"
m#Z#
Z"d2d!
Z#d3d"
Z$d#
Z%d$
Z&d%
Z'd&
Z(d'
Z)d(
Z*d4d)
Z+d4d*
Z,d+
Z-d,
e/d 
e/d-
e/d.
e/d/
e/d0
e/d1
Z7e7r
l8Z8y
m	Z	m
m	Z	
l	Z	d
e%jL
Z,d 
Z#dNd
e%e$jL
Z)e*jW
Z.d g
e/ja
Z2d"g
Z3e3x
Z4Z5dOd
Z6d%
Z7d&
Z8d'
Z9d(
Z:d)
Z;d*
Z<d+
Z=d,
Z>dPd-
Z?dQd.
Z@dRd/
ZAd0
ZDdOd
eDd1
ZEd3
d9eH
d=eJeI
d?eJeH
dAeJeH
ZOeOZP
ZRdOdJ
ZSdK
ZTdL
ZUdM
dBd"
d#d$
Z d'
Z!d(
Z"d)
Z#d*
Z$d+
Z(d2
Z)dCd3
Z*d4
Z+d5Z,e,d6z
Z-d7
Z0d8
Z1dDd9
Z2d#d:
Z3d<
Z4dEd=
Z5d>
Z6d?
Z7d@
Z8dA
BUH 
BUH 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%%%%%
 !"#%%%%%%
 !"#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
<dictcomp>
<genexpr>
<lambda>
<listcomp>
|`NF
<module>
<setcomp>
<string>
<unknown>
.defaults
.<locals>
.generic_base
json.decoder
.kwdefaults
list index out of range
<shim>
.type_params
utf-8
CANCELLED
FINISHED
False
JSONDecodeError
PENDING
Py_Repr
TextIOWrapper
True
WarningMessage
_WindowsConsoleIO
__IOBase_closed
__abc_tpflags__
__abs__
__abstractmethods__
__add__
__aenter__
__aexit__
__aiter__
__all__
__and__
__anext__
__annotations__
__args__
__asyncio_running_event_loop__
__await__
__bases__
__bool__
__buffer__
8DB0
__build_class__
__builtins__
__bytes__
__call__
__cantrace__
__class__
__class_getitem__
__classcell__
__classdict__
__classdictcell__
__complex__
n1>I"]
__contains__
__copy__
__ctypes_from_outparam__
__del__
__delattr__
__delete__
__delitem__
__dict__
*4]r
__dictoffset__
__dir__
__divmod__
__doc__
__enter__
__eq__
__exit__
__file__
__float__
xC[^S
__floordiv__
__format__
rfPN
__fspath__
__ge__
__get__
__getattr__
__getattribute__
__getinitargs__
__getitem__
__getnewargs__
dQr'
__getnewargs_ex__
__getstate__
__gt__
__hash__
__iadd__
__iand__
__ifloordiv__
__ilshift__
__imatmul__
__imod__
__import__
__imul__
__index__
__init__
__init_subclass__
__instancecheck__
__int__
__invert__
__ior__
__ipow__
~/Qo
__irshift__
__isabstractmethod__
__isub__
__iter__
__itruediv__
__ixor__
__le__
__len__
__length_hint__
__lltrace__
__loader__
__lshift__
__lt__
__main__
__matmul__
__missing__
__mod__
__module__
__mro_entries__
*!22
__mul__
__name__
__ne__
__neg__
__new__
__newobj__
Pg?pU
__newobj_ex__
__next__
__notes__
__or__
__orig_class__
__origin__
__package__
__parameters__
__path__
__pos__
__pow__
__prepare__
__qualname__
__radd__
__rand__
__rdivmod__
__reduce__
__reduce_ex__
k0Ez
__release_buffer__
__repr__
__reversed__
__rfloordiv__
__rlshift__
__rmatmul__
{Utc
__rmod__
__rmul__
__ror__
__round__
__rpow__
__rrshift__
__rshift__
__rsub__
__rtruediv__
__rxor__
__set__
__set_name__
__setattr__
__setitem__
__setstate__
__sizeof__
__slotnames__
__slots__
__spec__
__str__
__sub__
__subclasscheck__
__subclasshook__
__truediv__
__trunc__
{wBG
__type_params__
__typing_is_unpacked_typevartuple__
__typing_prepare_subst__
__typing_subst__
__typing_unpacked_tuple_args__
__warningregistry__
__weaklistoffset__
__weakref__
__xor__
_abc_impl
_abstract_
_active
_annotation
_anonymous_
_argtypes_
_as_parameter_
_asyncio_future_blocking
8y!Q
_blksize
(N`..
_bootstrap
_check_retval_
_dealloc_warn
_feature_version
_fields_
_finalizing
_find_and_load
_fix_up_module
_flags_
_get_sourcefile
_handle_fromlist
_initializing
_is_text_encoding
_length_
_limbo
_lock_unlock_module
_loop
_needs_com_addref_
_only_immortal
_pack_
_restype_
_showwarnmsg
_shutdown
_slotnames
_strptime_datetime
_swappedbytes_
_type_
_uninitialized_submodules
j.=_
_warn_unawaited_coroutine
_xoptions
abs_tol
+v^y
access
add_done_callback
after_in_child
after_in_parent
aggregate_class
alias
append
argdefs
P`Ru
args
arguments
argv
as_integer_ratio
attribute
authorizer_callback
PKz>
autocommit
backtick
base
<37X
before
binary_form
block
?1_\P=
bound
buffer
buffer_callback
	#9n8
buffer_size
buffering
buffers
bufsize
builtins
byteorder
bytes
bytes_per_sep
c_call
c_exception
c_return
cached_statements
cadata
|DXs
cafile
call
call_exception_handler
call_soon
cancel
capath
category
cb_type
certfile
check_same_thread
clear
close
closed
closefd
closure
co_argcount
co_cellvars
co_code
co_consts
co_exceptiontable
co_filename
ffqVB
co_firstlineno
co_flags
co_freevars
co_kwonlyargcount
co_linetable
,_DV
co_name
vwnu'
co_names
co_nlocals
co_posonlyargcount
co_qualname
co_stacksize
co_varnames
code
command
comment_factory
compile_mode
consts
context
contravariant
cookie
copy
copyreg
coro
count
covariant
data
database
R^_eO
decode
decoder
default
defaultaction
delete
{xCx
depth
detect_types
deterministic
device
7GA\
dict
dictcomp
difference_update
digest
digest_size
digestmod
dir_fd
discard
dispatch_table
displayhook
dklen
dont_inherit
dst_dir_fd
duration
eager_start
effective_ids
element_factory
encode
encoding
end_lineno
end_offset
endpos
entrypoint
errors
event
eventmask
exc_type
exc_value
excepthook
exception
existing_file_name
extend
extra_tokens
facility
factory
false
family
fanout
fdel
fget
file
file_actions
filename
fileno
filepath
9T[uO9P
fillvalue
filters
final
find_class
fix_imports
flags
flush
follow_symlinks
format
;	S:F
frequency
from_param
fromlist
fI!=
fromtimestamp
fromutc
fset
func
future
generation
genexpr
get_debug
79-}
get_event_loop
get_loop
get_source
getattr
getstate
zs;G
globals
t<_B
groupindex
groups
handle
hash_name
header
headers
9J.M
hook
ident
ignore
imag
#7Ox
importlib
in_fd
incoming
indexgroup
infer_variance
inheritable
initial
initial_bytes
initial_value
initval
inner_size
input
insert_comments
insert_pis
instructions
intern
intersection
is_running
isatty
isinstance
isoformat
isolation_level
istext
item
items
iter
iterable
iterations
C3Gd
join
jump
keepends
keyfile
keys
kind
lambda
last
$,b?
last_exc
last_node
last_traceback
last_type
last_value
latin1
leaf_size
length
level
limit
line
line_buffering
lineno
listcomp
little
locale
locals
logoption
loop
mapping
match
max_length
maxdigits
maxevents
maxmem
maxsplit
maxvalue
Dhlf
memLevel
memlimit
message
metaclass
metadata
method
mode
77RS:
module
module_globals
modules
mycmp
n_arg
n_fields
n_sequence_fields
n_unnamed_fields
name
name_from
	*Bh
namespace_separator
namespaces
narg
ndigits
new_file_name
new_limit
newline
newlines
next
nlocals
node_depth
node_offset
dhNt
nstype
null
number
object
offset
offset_dst
U-}?p|
offset_src
on_type_read
onceregistry
only_keys
oparg
opcode
open
opener
operation
=^Vs
optimize
options
order
origin
out_fd
outgoing
overlapped
owner
pages
parent
password
path
pattern
peek
persistent_id
persistent_load
person
pi_factory
policy
pos1
pos2
posix
print_file_and_line
priority
progress
progress_handler
progress_routine
proto
protocol
query
quotetabs
read
read1
readable
readall
readinto
readinto1
readline
readonly
real
reducer_override
registry
rel_tol
release
reload
repl
replace
reserved
reset
resetids
return
reverse
reversed
salt
sched_priority
scheduler
seek
seekable
selectors
self
send
sequence
server_hostname
R`3Q*
server_side
session
setcomp
setpgroup
setsid
setsigdef
setsigmask
setstate
shape
show_cmd
signed
size
sizehint
6Ku7
skip_file_prefixes
sleep
sock
sort
sound
OE|_
source
source_traceback
spam
olO-
src_dir_fd
stacklevel
start
statement
status
stderr
stdin
H>!)
stdout
step
MdRn
steps
store_name
strategy
strftime
strict
strict_mode
string
sub_key
symmetric_difference_update
tabsize
;,9Y
target
target_is_directory
task
tb_frame
tb_lasti
tb_lineno
tb_next
tell
template
z;X)
term
text
threading
throw
timeout
times
timetuple
trace_callback
traceback
trailers
translate
true
truncate
twice
type
type_params
oS:	g
tzname
unlink
unraisablehook
usedforsecurity
value
values
version
volume
warnings
warnoptions
wbits
week
weekday
8pvM
which
withdata
writable
write
write_through
year
zdict
-N/q1
bb:"
h8>-
	\>i
VI	=
WJb)
{Q`z
u03 
c(.z
:?q2>
Jw17
Yw*z
%u!l
*a)2
3.12.9 | packaged by Anaconda, Inc. | (main, Feb  6 2025, 18:56:27) [GCC 11.2.0]
main, Feb  6 2025, 18:56:27
C.utf8
/usr/lib/locale/C.UTF-8.utf8/LC_CTYPE
 software; you can redistribute it and/o1
/usr/lib/locale/C.UTF-8/LC_CTYPE
GeneralQ
dation; either version 21
/usr/lib/locale/C/LC_CTYPE
# TA
ill be useful,
/usr/lib/locale/C.utf8/LC_CTYPE
the implQ
CULAR PURPOSE.  See the
/LC_0
# al
as f
# tV
 Win
Syst
e co
 bac1
d co2
ibil3
  No4
 sho5
rely6
the 7
s de8
d he9
# LoT
s sh`@1
ll n
: Th
 to 
ain <
LC_CTYPE=C.UTF-8;LC_NUMERIC=C;LC_TIME=C;LC_COLLATE=C;LC_MONETARY=C;LC_MESSAGES=C;LC_PAPER=C;LC_NAME=C;LC_ADDRESS=C;LC_TELEPHONE=C;LC_MEASUREMENT=C;LC_IDENTIFICATION=C
C.UTF-8
kmal
ISO-8859-1
catalan		ca_ES.ISO-8859-1
croatian	hr_HR.ISO-8859-2
czech		cs_CZ.ISO-8859-2
danish          da_DK.ISO
859-
ian	et_EE.ISO-8859-15
finnish         fi_FI.ISO-8859-1
french		fr_FR.ISO-8859-1
galego		gl_ES.ISO-8859-1
galiciaq
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
hu_HU.ISq
utf-8
koreq
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload
termios.cpython-312-x86_64-linux-gnu.so
nynorsk	q
/etc/localtime
surrogateescape
iconda3/1
/encodings/utf_80
bokmal
nb_NO.ISO-8859-1
catalan
ca_ES.ISO-8859-1
croatian
hr_HR.ISO-8859-2
czech
cs_CZ.ISO-8859-2
danish
da_DK.ISO-8859-1
dansk
da_DK.ISO-8859-1
deutsch
de_DE.ISO-8859-1
dutch
nl_NL.ISO-8859-1
eesti
et_EE.ISO-8859-15
estonian
et_EE.ISO-8859-15
finnish
fi_FI.ISO-8859-1
french
fr_FR.ISO-8859-1
galego
gl_ES.ISO-8859-1
galician
gl_ES.ISO-8859-1
german
de_DE.ISO-8859-1
greek
el_GR.ISO-8859-7
hebrew
he_IL.ISO-8859-8
hrvatski
hr_HR.ISO-8859-2
hungarian
hu_HU.ISO-8859-2
icelandic
is_IS.ISO-8859-1
italian
it_IT.ISO-8859-1
japanese
ja_JP.eucJP
japanese.euc
ja_JP.eucJP
ja_JP
ja_JP.eucJP
ja_JP.ujis
ja_JP.eucJP
japanese.sjis
ja_JP.SJIS
korean
ko_KR.eucKR
korean.euc
ko_KR.eucKR
ko_KR
ko_KR.eucKR
lithuanian
lt_LT.ISO-8859-13
no_NO
nb_NO.ISO-8859-1
no_NO.ISO-8859-1
nb_NO.ISO-8859-1
norwegian
nb_NO.ISO-8859-1
nynorsk
nn_NO.ISO-8859-1
polish
pl_PL.ISO-8859-2
portuguese
pt_PT.ISO-8859-1
romanian
ro_RO.ISO-8859-2
russian
ru_RU.KOI8-R
slovak
sk_SK.ISO-8859-2
slovene
sl_SI.ISO-8859-2
slovenian
sl_SI.ISO-8859-2
spanish
es_ES.ISO-8859-1
swedish
sv_SE.ISO-8859-1
thai
th_TH.TIS-620
turkish
tr_TR.ISO-8859-9
YA0q
@contextmanager decorator.
    Typical usage:
        @contextmanager
        def some_generator(<arguments>):
            <setup>
            try:
                yield <value>
            finally:
                <cleanup>
    This makes this:
        with some_generator(<arguments>) as <variable>:
            <body>
    equivalent to this:
        <setup>
        try:
            <variable> = <value>
            <body>
        finally:
            <cleanup>
    
8DB0
.w)0v
n1>I"]Xw
*4]r y
xC[^S
`=8{
rfPN
k0Ez
{Utc
{wBG
dQr'
~/Qo
*!22
Pg?pU
ffqVB
,_DV
vwnu'
R^_eO
{xCx
7GA\
sys:sys
8y!Q
(N`..
Fs@p
j.=_
+v^y
FmY`
P`Ru
PKz>@
<37X
?1_\P=
	#9n8@
|DXs
=^Vs
VYnH
R`3Q*
6Ku7
OE|_
DU((
olO-
H>!)
MdRn 
BT (
;,9Y
z;X)
oS:	g
8pvM
9T[uO9P
;	S:F
fI!=
79-}
zs;G
t<_B
9J.M
#7Ox
C3Gd
$,b?
JZ]p
Dhlf
77RS:
	*Bh
dhNt
U-}?p|
I!1!O
y.)u]
L/EO
uFy@
D{8c@6
qD)[
;#j3
7l`n
nv?HM4  
HR#f
/*`/
tO(D`'
 	Ge*
K$=#
g5hAu
`DWd
;pK!
"|Bq
b1j]
|7zQ
J@".
Mkj`x
Bqf:`4
>FQK
$sJ3
builtins:builtins
vp`m
<Xpj
|`NF
-N/q1
bb:"
!+\@
h8>- 
	\>i 
VI	=
WJb)
{Q`z
u03 
c(.z
:?q2>
Jw17
\5t 
Yw*z
e@ "
mG &
%u!l
|Y`*
)a ,
Kt`,
*a)2
t}{`S
5T;cV
*DQ2
EZ i
	/.6
fmC~
BSe4
b%UZi
&B[3
oV]+m
?u*Z 
J[yk
grC"
h(2@x
Vf0h
C^G`
qAz 
g6~,@
tnm'
\h?2=
c(<a
	HK@X
9,kd
L" b
Q\	@
:w&|g 
ZjS3
!zDm;
X2u"
1?le
}emN
2cOA`
yAD]
r&#N
bBB7W 
Sds}
|V4]
Wy3+n
$Q`0
nt`I
Y#b A
~GH T
> :	
bytearray(iterable_of_ints) -> bytearray
bytearray(string, encoding[, errors]) -> bytearray
bytearray(bytes_or_buffer) -> mutable copy of bytes_or_buffer
bytearray(int) -> bytes array of size given by the parameter initialized with null bytes
bytearray() -> empty bytes array
Construct a mutable bytearray object from:
  - an iterable yielding integers in range(256)
  - a text string encoded using the specified encoding
  - a bytes or a buffer object
  - any object implementing the buffer API.
  - an integer
zip(*iterables, strict=False) --> Yield tuples until an input is exhausted.
   >>> list(zip('abcdefg', range(3), range(4)))
   [('a', 0, 0), ('b', 1, 1), ('c', 2, 2)]
The zip object yields n-length tuples, where n is the number of iterables
passed as positional arguments to zip().  The i-th element in every tuple
comes from the i-th iterable argument to zip().  This continues until the
shortest argument is exhausted.
If strict is true and one of the arguments is exhausted before the others,
raise a ValueError.
classmethod(function) -> method
Convert a function to be a class method.
A class method receives the class as implicit first argument,
just like an instance method receives the instance.
To declare a class method, use this idiom:
  class C:
      @classmethod
      def f(cls, arg1, arg2, argN):
          ...
It can be called either on the class (e.g. C.f()) or on an instance
(e.g. C().f()).  The instance is ignored except for its class.
If a class method is called for a derived class, the derived class
object is passed as the implied first argument.
Class methods are different than C++ or Java static methods.
If you want those, see the staticmethod builtin.
staticmethod(function) -> method
Convert a function to be a static method.
A static method does not receive an implicit first argument.
To declare a static method, use this idiom:
     class C:
         @staticmethod
         def f(arg1, arg2, argN):
             ...
It can be called either on the class (e.g. C.f()) or on an instance
(e.g. C().f()). Both the class and the instance are ignored, and
neither is passed implicitly as the first argument to the method.
Static methods in Python are similar to those found in Java or C++.
For a more advanced concept, see the classmethod builtin.
riconda3/envs/cysa/lib/python3.12/os.py
7R@F
JE`k
H^>j@]
+A&F
rB a
zN$hY
V7=B
j;=v
at`sK
i#d`\P8] 
nxM$
LhVFhU
%{U#
\"	N
>Q2{@
ft7<n_
%$f@
}Jb9Z
DfG~*
A*@`)
 L3g
#Zj`y
Tz\M`
>Y\I
]0}'i
L|rpF
X@2@
dzLB
2>`b
.7#C
|O@-
r0&@.
~^}E
i`w O
,p=	Qg
.}[)
wwHS
Y9oG
 ;@z
%:x|
y;iVM
sA"#`
#l>a\
}nVo`
~?_8
xd>_
s)t&uy
5|o)
>`P+
%?@`9?N
m{Qvj
)8A~
*x`/
khW6
== `H
h]fh?T$p
JA7*6
Ue2<
{N:;
Type alias.
Type aliases are created through the type statement::
    type Alias = int
In this example, Alias and int will be treated equivalently by static
type checkers.
At runtime, Alias is an instance of TypeAliasType. The __name__
attribute holds the name of the type alias. The value of the type alias
is stored in the __value__ attribute. It is evaluated lazily, so the
value is computed only if the attribute is accessed.
Type aliases can also be generic::
    type ListOrSet[T] = list[T] | set[T]
In this case, the type parameters of the alias are stored in the
__type_params__ attribute.
See PEP 695 for more information.
Abstract base class for generic types.
On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::
    class Mapping[KT, VT]:
        def __getitem__(self, key: KT) -> VT:
            ...
        # Etc.
On older versions of Python, however, generic classes have to
explicitly inherit from Generic.
After a class has been declared to be generic, it can then be used as
follows::
    def lookup_name[KT, VT](mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:
        try:
            return mapping[key]
        except KeyError:
            return default
S3z.m
int([x]) -> integer
int(x, base=10) -> integer
Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating-point
numbers, this truncates towards zero.
If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by '+' or '-' and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int('0b100', base=0)
The io module provides the Python interfaces to stream handling. The
builtin open function is defined in this module.
At the top of the I/O hierarchy is the abstract base class IOBase. It
defines the basic interface to a stream. Note, however, that there is no
separation between reading and writing to streams; implementations are
allowed to raise an OSError if they do not support a given operation.
Extending IOBase is RawIOBase which deals simply with the reading and
writing of raw bytes to a stream. FileIO subclasses RawIOBase to provide
an interface to OS files.
BufferedIOBase deals with buffering on a raw byte stream (RawIOBase). Its
subclasses, BufferedWriter, BufferedReader, and BufferedRWPair buffer
streams that are readable, writable, and both respectively.
BufferedRandom provides a buffered interface to random access
streams. BytesIO is a simple stream of in-memory bytes.
Another IOBase subclass, TextIOBase, deals with the encoding and decoding
of streams into text. TextIOWrapper, which extends it, is a buffered text
interface to a buffered raw stream (`BufferedIOBase`). Finally, StringIO
is an in-memory stream for text.
Argument names are not part of the specification, and only the arguments
of open() are intended to be used as keyword arguments.
data:
DEFAULT_BUFFER_SIZE
   An int containing the default buffer size used by the module's buffered
   I/O classes. open() uses the file's blksize (as obtained by os.stat) if
   possible.
E:+=
A168
Abstract base class for generic types.
On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::
    class Mapping[KT, VT]:
        def __getitem__(self, key: KT) -> VT:
            ...
        # Etc.
On older versions of Python, however, generic classes have to
explicitly inherit from Generic.
After a class has been declared to be generic, it can then be used as
follows::
    def lookup_name[KT, VT](mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:
        try:
            return mapping[key]
        except KeyError:
            return default
Type variable.
The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::
    class Sequence[T]:  # T is a TypeVar
        ...
This syntax can also be used to create bound and constrained type
variables::
    # S is a TypeVar bound to str
    class StrSequence[S: str]:
        ...
    # A is a TypeVar constrained to str or bytes
    class StrOrBytesSequence[A: (str, bytes)]:
        ...
However, if desired, reusable type variables can also be constructed
manually, like so::
   T = TypeVar('T')  # Can be anything
   S = TypeVar('S', bound=str)  # Can be any subtype of str
   A = TypeVar('A', str, bytes)  # Must be exactly str or bytes
Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function and type alias definitions.
The variance of type variables is inferred by type checkers when they
are created through the type parameter syntax and when
``infer_variance=True`` is passed. Manually created type variables may
be explicitly marked covariant or contravariant by passing
``covariant=True`` or ``contravariant=True``. By default, manually
created type variables are invariant. See PEP 484 and PEP 695 for more
details.
Type variable tuple. A specialized form of type variable that enables
variadic generics.
The preferred way to construct a type variable tuple is via the
dedicated syntax for generic functions, classes, and type aliases,
where a single '*' indicates a type variable tuple::
    def move_first_element_to_last[T, *Ts](tup: tuple[T, *Ts]) -> tuple[*Ts, T]:
        return (*tup[1:], tup[0])
For compatibility with Python 3.11 and earlier, TypeVarTuple objects
can also be created as follows::
    Ts = TypeVarTuple('Ts')  # Can be given any name
Just as a TypeVar (type variable) is a placeholder for a single type,
a TypeVarTuple is a placeholder for an *arbitrary* number of types. For
example, if we define a generic class using a TypeVarTuple::
    class C[*Ts]: ...
Then we can parameterize that class with an arbitrary number of type
arguments::
    C[int]       # Fine
    C[int, str]  # Also fine
    C[()]        # Even this is fine
For more details, see PEP 646.
Note that only TypeVarTuples defined in the global scope can be
pickled.
and when
iables are iA
rd PEP 695 for more
details.
Type variable.
The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::
    class Sequence[T]:  # T is a TypeVar
        ...
This syntax can also be used to create bound and constrained type
variables::
    # S is a TypeVar bound to str
    class StrSequence[S: str]:
        ...
    # A is a TypeVar constrained to str or bytes
    class StrOrBytesSequence[A: (str, bytes)]:
        ...
However, if desired, reusable type variables can also be constructed
manually, like so::
   T = TypeVar('T')  # Can be anything
   S = TypeVar('S', bound=str)  # Can be any subtype of str
   A = TypeVar('A', str, bytes)  # Must be exactly str or bytes
Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function and type alias definitions.
The variance of type variables is inferred by type checkers when they
are created through the type parameter syntax and when
``infer_variance=True`` is passed. Manually created type variables may
be explicitly marked covariant or contravariant by passing
``covariant=True`` or ``contravariant=True``. By default, manually
created type variables are invariant. See PEP 484 and PEP 695 for more
details.
using a 
s fi1
e PEP 646.
Note that onA
r in the global scope can be
pick@
Type variable tuple. A specialized form of type variable that enables
variadic generics.
The preferred way to construct a type variable tuple is via the
dedicated syntax for generic functions, classes, and type aliases,
where a single '*' indicates a type variable tuple::
    def move_first_element_to_last[T, *Ts](tup: tuple[T, *Ts]) -> tuple[*Ts, T]:
        return (*tup[1:], tup[0])
For compatibility with Python 3.11 and earlier, TypeVarTuple objects
can also be created as follows::
    Ts = TypeVarTuple('Ts')  # Can be given any name
Just as a TypeVar (type variable) is a placeholder for a single type,
a TypeVarTuple is a placeholder for an *arbitrary* number of types. For
example, if we define a generic class using a TypeVarTuple::
    class C[*Ts]: ...
Then we can parameterize that class with an arbitrary number of type
arguments::
    C[int]       # Fine
    C[int, str]  # Also fine
    C[()]        # Even this is fine
For more details, see PEP 646.
Note that only TypeVarTuples defined in the global scope can be
pickled.
Parameter specification variable.
The preferred way to construct a parameter specification is via the
dedicated syntax for generic functions, classes, and type aliases,
where the use of '**' creates a parameter specification::
    type IntFunc[**P] = Callable[P, int]
For compatibility with Python 3.11 and earlier, ParamSpec objects
can also be created as follows::
    P = ParamSpec('P')
Parameter specification variables exist primarily for the benefit of
static type checkers.  They are used to forward the parameter types of
one callable to another callable, a pattern commonly found in
higher-order functions and decorators.  They are only valid when used
in ``Concatenate``, or as the first argument to ``Callable``, or as
parameters for user-defined Generics. See class Generic for more
information on generic types.
An example for annotating a decorator::
    def add_logging[**P, T](f: Callable[P, T]) -> Callable[P, T]:
        '''A type-safe decorator to add logging to a function.'''
        def inner(*args: P.args, **kwargs: P.kwargs) -> T:
            logging.info(f'{f.__name__} was called')
            return f(*args, **kwargs)
        return inner
    @add_logging
    def add_two(x: float, y: float) -> float:
        '''Add two numbers together.'''
        return x + y
Parameter specification variables can be introspected. e.g.::
    >>> P = ParamSpec("P")
    >>> P.__name__
    'P'
Note that only parameter specification variables defined in the global
scope can be pickled.
@add
rame1
les defined in the globa!
Parameter specification variable.
The preferred way to construct a parameter specification is via the
dedicated syntax for generic functions, classes, and type aliases,
where the use of '**' creates a parameter specification::
    type IntFunc[**P] = Callable[P, int]
For compatibility with Python 3.11 and earlier, ParamSpec objects
can also be created as follows::
    P = ParamSpec('P')
Parameter specification variables exist primarily for the benefit of
static type checkers.  They are used to forward the parameter types of
one callable to another callable, a pattern commonly found in
higher-order functions and decorators.  They are only valid when used
in ``Concatenate``, or as the first argument to ``Callable``, or as
parameters for user-defined Generics. See class Generic for more
information on generic types.
An example for annotating a decorator::
    def add_logging[**P, T](f: Callable[P, T]) -> Callable[P, T]:
        '''A type-safe decorator to add logging to a function.'''
        def inner(*args: P.args, **kwargs: P.kwargs) -> T:
            logging.info(f'{f.__name__} was called')
            return f(*args, **kwargs)
        return inner
    @add_logging
    def add_two(x: float, y: float) -> float:
        '''Add two numbers together.'''
        return x + y
Parameter specification variables can be introspected. e.g.::
    >>> P = ParamSpec("P")
    >>> P.__name__
    'P'
Note that only parameter specification variables defined in the global
scope can be pickled.
This module provides access to some objects used or maintained by the
interpreter and to functions that interact strongly with the interpreter.
Dynamic objects:
argv -- command line arguments; argv[0] is the script pathname if known
path -- module search path; path[0] is the script directory, else ''
modules -- dictionary of loaded modules
displayhook -- called to show results in an interactive session
excepthook -- called to handle any uncaught exception other than SystemExit
  To customize printing in an interactive session or to install a custom
  top-level exception handler, assign other functions to replace these.
stdin -- standard input file object; used by input()
stdout -- standard output file object; used by print()
stderr -- standard error object; used for error messages
  By assigning other file objects (or objects that behave like files)
  to these, it is possible to redirect all of the interpreter's I/O.
last_exc - the last uncaught exception
  Only available in an interactive session after a
  traceback has been printed.
last_type -- type of last uncaught exception
last_value -- value of last uncaught exception
last_traceback -- traceback of last uncaught exception
  These three are the (deprecated) legacy representation of last_exc.
Static objects:
builtin_module_names -- tuple of module names built into this interpreter
copyright -- copyright notice pertaining to this interpreter
exec_prefix -- prefix used to find the machine-specific Python library
executable -- absolute path of the executable binary of the Python interpreter
float_info -- a named tuple with information about the float implementation.
float_repr_style -- string indicating the style of repr() output for floats
hash_info -- a named tuple with information about the hash algorithm.
hexversion -- version information encoded as a single integer
implementation -- Python implementation information.
int_info -- a named tuple with information about the int implementation.
maxsize -- the largest supported length of containers.
maxunicode -- the value of the largest Unicode code point
platform -- platform identifier
prefix -- prefix used to find the Python library
thread_info -- a named tuple with information about the thread implementation.
version -- the version of this interpreter as a string
version_info -- version information as a named tuple
__stdin__ -- the original stdin; don't touch!
__stdout__ -- the original stdout; don't touch!
__stderr__ -- the original stderr; don't touch!
__displayhook__ -- the original displayhook; don't touch!
__excepthook__ -- the original excepthook; don't touch!
Functions:
displayhook() -- print an object to the screen, and save it in builtins._
excepthook() -- print an exception and its traceback to sys.stderr
exception() -- return the current thread's active exception
exc_info() -- return information about the current thread's active exception
exit() -- exit the interpreter by raising SystemExit
getdlopenflags() -- returns flags to be used for dlopen() calls
getprofile() -- get the global profiling function
getrefcount() -- return the reference count for an object (plus one :-)
getrecursionlimit() -- return the max recursion depth for the interpreter
getsizeof() -- return the size of an object in bytes
gettrace() -- get the global debug tracing function
setdlopenflags() -- set the flags to be used for dlopen() calls
setprofile() -- set the global profiling function
setrecursionlimit() -- set the max recursion depth for the interpreter
settrace() -- set the global debug tracing function
.nfm
z$U#q
"f,J*
#l>a\
1RC-
mN*[`	
A>{P
~by`
}XGMU
n5I<aI
bJmG1
pMV[
xd>_
#7Ox
-i0i)
{pd)
X??Cv6
H:9D
,0`)
,Didc
c-rQ
~8H 
s[ypU)
8ES?
mqF;
`M1cfJ|.
Q0d)
X!?[
hBD`ty
}Q+UD
q]/(
.3.M
><v0n)
hp])
The specification for a module, used for loading.
    A module's spec is the source for information about the module.  For
    data associated with the module, including source, use the spec's
    loader.
    `name` is the absolute name of the module.  `loader` is the loader
    to use when loading the module.  `parent` is the name of the
    package the module is in.  The parent is derived from the name.
    `is_package` determines if the module is considered a package or
    not.  On modules this is reflected by the `__path__` attribute.
    `origin` is the specific location used by the loader from which to
    load the module, if that information is available.  When filename is
    set, origin will match.
    `has_location` indicates that a spec's "origin" reflects a location.
    When this is True, `__file__` attribute of the module is set.
    `cached` is the location of the cached bytecode file, if any.  It
    corresponds to the `__cached__` attribute.
    `submodule_search_locations` is the sequence of path entries to
    search when importing submodules.  If set, is_package should be
    True--and False otherwise.
    Packages are simply modules that (may) have submodules.  If a spec
    has a non-None value in `submodule_search_locations`, the import
    system will consider modules loaded from the spec as packages.
    Only finders (see importlib.abc.MetaPathFinder and
    importlib.abc.PathEntryFinder) should modify ModuleSpec instances.
    
#9.8
e cl 
ric 
12 a(
neri
 inh0
neri
a pa8
 aft
ping
f __H
lf, 4th
    h
    Qth
sionp
 how
s hax
itlymth
s ha@~j
e ge
n thh~j
kup_
: Ma
], k
 -> 
try:
mapp
    /uh
 Evh
*>I?
A6D.%
AEDT
AEST
ub/lib:/snap/bin
e@eAf
e3e$e
e3e$e
e$Z&Y
s=e%s;e\j
eDd*
efeeeg
r e"j
eejc
The abstract base class for all I/O classes.
This class provides dummy implementations for many methods that
derived classes can override selectively; the default implementations
represent a file that cannot be read, written or seeked.
Even though IOBase does not declare read, readinto, or write because
their signatures will vary, implementations and clients should
consider those methods part of the interface. Also, implementations
may raise UnsupportedOperation when operations they do not support are
called.
The basic type used for binary data read from or written to a file is
bytes. Other bytes-like objects are accepted as method arguments too.
In some cases (such as readinto), a writable object is required. Text
I/O classes work with str data.
Note that calling any method (except additional calls to close(),
which are ignored) on a closed stream should raise a ValueError.
IOBase (and its subclasses) support the iterator protocol, meaning
that an IOBase object can be iterated over yielding the lines in a
stream.
IOBase also supports the :keyword:`with` statement. In this example,
fp is closed after the suite of the with statement is complete:
with open('spam.txt', 'r') as fp:
    fp.write('Spam and eggs!')
rator pr
'r') as fp:
    0
utf-8
The abstract base class for all I/O classes.
This class provides dummy implementations for many methods that
derived classes can override selectively; the default implementations
represent a file that cannot be read, written or seeked.
Even though IOBase does not declare read, readinto, or write because
their signatures will vary, implementations and clients should
consider those methods part of the interface. Also, implementations
may raise UnsupportedOperation when operations they do not support are
called.
The basic type used for binary data read from or written to a file is
bytes. Other bytes-like objects are accepted as method arguments too.
In some cases (such as readinto), a writable object is required. Text
I/O classes work with str data.
Note that calling any method (except additional calls to close(),
which are ignored) on a closed stream should raise a ValueError.
IOBase (and its subclasses) support the iterator protocol, meaning
that an IOBase object can be iterated over yielding the lines in a
stream.
IOBase also supports the :keyword:`with` statement. In this example,
fp is closed after the suite of the with statement is complete:
with open('spam.txt', 'r') as fp:
    fp.write('Spam and eggs!')
oes 
Base class for buffered IO objects.
The main difference with RawIOBase is that the read() method
supports omitting the size argument, and does not have a default
implementation that defers to readinto().
In addition, read(), readinto() and write() may raise
BlockingIOError if the underlying raw stream is in non-blocking
mode and not ready; unlike their raw counterparts, they will never
return None.
A typical implementation should not inherit from a RawIOBase
implementation, but wrap one.
FileIO(file, mode='r', closefd=True, opener=None)
Open a file.
The mode can be 'r' (default), 'w', 'x' or 'a' for reading,
writing, exclusive creation or appending.  The file will be created if it
doesn't exist when opened for writing or appending; it will be truncated
when opened for writing.  A FileExistsError will be raised if it already
exists when opened for creating. Opening a file for creating implies
writing so this mode behaves in a similar way to 'w'.Add a '+' to the mode
to allow simultaneous reading and writing. A custom opener can be used by
passing a callable as *opener*. The underlying file descriptor for the file
object is then obtained by calling opener with (*name*, *flags*).
*opener* must return an open file descriptor (passing os.open as *opener*
results in functionality similar to passing None).
Z	d	
Z d 
Z!d!
Z"d"
Z#d#
Z$d$
Z%d%
Z&d&
Z'd@d'
Z(d(
Z,d/
Z-d0
Z.d1
Z/d2
Z0d3
Z1d4
Z2d5
Z3d6
Z4d7
Z5d8
Z6d9
Z7d:
Z8d;
Z9d<
d=l;
d>l;m
Z@e	ZAe
ZFe)ZGe
ZVe ZWe!ZXe"ZYe$ZZe%Z[e'Z\e-Z]e.Z^e/Z_e0Z`e1Zae2Zbe3Zce4Zde5Zee6Zfe7Zge8Zhe9Zie:Zjy?#
Open a file.
The mode can be 'r' (default), 'w', 'x' or 'a' for reading,
writing, exclusive creation or appending.  The file will be created if it
doesn't exist when opened for writing or appending; it will be truncated
when opened for writing.  A FileExistsError will be raised if it already
exists when opened for creating. Opening a file for creating implies
writing so this mode behaves in a similar way to 'w'.Add a '+' to the mode
to allow simultaneous reading and writing. A custom opener can be used by
passing a callable as *opener*. The underlying file descriptor for the file
object is then obtained by calling opener with (*name*, *flags*).
*opener* must return an open file descriptor (passing os.open as *opener*
results in functionality similar to passing None).
TextIOWrapper(buffer, encoding=None, errors=None, newline=None,
              line_buffering=False, write_through=False)
Character and line based layer over a BufferedIOBase object, buffer.
encoding gives the name of the encoding that the stream will be
decoded or encoded with. It defaults to locale.getencoding().
errors determines the strictness of encoding and decoding (see
help(codecs.Codec) or the documentation for codecs.register) and
defaults to "strict".
newline controls how line endings are handled. It can be None, '',
'\n', '\r', and '\r\n'.  It works as follows:
* On input, if newline is None, universal newlines mode is
  enabled. Lines in the input can end in '\n', '\r', or '\r\n', and
  these are translated into '\n' before being returned to the
  caller. If it is '', universal newline mode is enabled, but line
  endings are returned to the caller untranslated. If it has any of
  the other legal values, input lines are only terminated by the given
  string, and the line ending is returned to the caller untranslated.
* On output, if newline is None, any '\n' characters written are
  translated to the system default line separator, os.linesep. If
  newline is '' or '\n', no translation takes place. If newline is any
  of the other legal values, any '\n' characters written are translated
  to the given string.
If line_buffering is True, a call to flush is implied when a call to
write contains a newline character.
This module contains functions that can read and write Python values in
a binary format. The format is specific to Python, but independent of
machine architecture issues.
Not all Python object types are supported; in general, only objects
whose value is independent from a particular invocation of Python can be
written and read by this module. The following types are supported:
None, integers, floating-point numbers, strings, bytes, bytearrays,
tuples, lists, sets, dictionaries, and code objects, where it
should be understood that tuples, lists and dictionaries are only
supported as long as the values contained therein are themselves
supported; and recursive lists and dictionaries should not be written
(they will cause infinite loops).
Variables:
version -- indicates the format that the module uses. Version 0 is the
    historical format, version 1 shares interned strings and version 2
    uses a binary format for floating-point numbers.
    Version 3 shares common object references (New in version 3.4).
Functions:
dump() -- write value to a file
load() -- read value from a file
dumps() -- marshal value as a bytes object
loads() -- read value from a bytes-like object
 translatea
erable.py
Character and line based layer over a BufferedIOBase object, buffer.
encoding gives the name of the encoding that the stream will be
decoded or encoded with. It defaults to locale.getencoding().
errors determines the strictness of encoding and decoding (see
help(codecs.Codec) or the documentation for codecs.register) and
defaults to "strict".
newline controls how line endings are handled. It can be None, '',
'\n', '\r', and '\r\n'.  It works as follows:
* On input, if newline is None, universal newlines mode is
  enabled. Lines in the input can end in '\n', '\r', or '\r\n', and
  these are translated into '\n' before being returned to the
  caller. If it is '', universal newline mode is enabled, but line
  endings are returned to the caller untranslated. If it has any of
  the other legal values, input lines are only terminated by the given
  string, and the line ending is returned to the caller untranslated.
* On output, if newline is None, any '\n' characters written are
  translated to the system default line separator, os.linesep. If
  newline is '' or '\n', no translation takes place. If newline is any
  of the other legal values, any '\n' characters written are translated
  to the given string.
If line_buffering is True, a call to flush is implied when a call to
write contains a newline character.
rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/remote-cli:/home/adnaan/miniconda3/envs/cysa/bin:/home/adnaan/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/libnvvp:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/System32/OpenSSH:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/Docker/host/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.2.0:/mnt/c/windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Program Files/HP/HP One Agent:/mnt/c/Program Files/dotnet:/mnt/c/Users/adnaa/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/adnaa/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/adnaa/AppData/Local/GitHubDesktop/bin:/mnt/c/Program Files/JetBrains/PyCharm Community Edition 2023.2.1/bin:/mnt/c/Users/adnaa/AppData/Local/Muse Hub/lib:/snap/bin:/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/remote-cli:/home/adnaan/miniconda3/bin:/home/adnaan/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/libnvvp:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/System32/OpenSSH:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/Docker/host/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.2.0:/mnt/c/windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Program Files/HP/HP One Agent:/mnt/c/Program Files/dotnet:/mnt/c/Users/adnaa/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/adnaa/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/adnaa/AppData/Local/GitHubDesktop/bin:/mnt/c/Program Files/JetBrains/PyCharm Community Edition 2023.2.1/bin:/mnt/c/Users/adnaa/AppData/Local/Muse Hub/lib:/snap/bin:/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/remote-cli:/home/adnaan/miniconda3/bin:/home/adnaan/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/libnvvp:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/System32/OpenSSH:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/Docker/host/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.2.0:/mnt/c/windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Program Files/HP/HP One Agent:/mnt/c/Program Files/dotnet:/mnt/c/Users/adnaa/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/adnaa/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/adnaa/AppData/Local/GitHubDesktop/bin:/mnt/c/Program Files/JetBrains/PyCharm Community Edition 2023.2.1/bin:/mnt/c/Users/adnaa/AppData/Local/Muse Hub/lib:/snap/bin
9]f'.
F;]jQ'
}nVo
'>rN`
Metaclass for defining Abstract Base Classes (ABCs).
        Use this metaclass to create an ABC.  An ABC can be subclassed
        directly, and then acts as a mix-in class.  You can also register
        unrelated concrete classes (even built-in classes) and unrelated
        ABCs as 'virtual subclasses' -- these and their descendants will
        be considered subclasses of the registering ABC by the built-in
        issubclass() function, but the registering ABC won't show up in
        their MRO (Method Resolution Order) nor will method
        implementations defined by the registering ABC be callable (not
        even via super()).
        
The abstract base class for all I/O classes.
This class provides dummy implementations for many methods that
derived classes can override selectively; the default implementations
represent a file that cannot be read, written or seeked.
Even though IOBase does not declare read, readinto, or write because
their signatures will vary, implementations and clients should
consider those methods part of the interface. Also, implementations
may raise UnsupportedOperation when operations they do not support are
called.
The basic type used for binary data read from or written to a file is
bytes. Other bytes-like objects are accepted as method arguments too.
In some cases (such as readinto), a writable object is required. Text
I/O classes work with str data.
Note that calling any method (except additional calls to close(),
which are ignored) on a closed stream should raise a ValueError.
IOBase (and its subclasses) support the iterator protocol, meaning
that an IOBase object can be iterated over yielding the lines in a
stream.
IOBase also supports the :keyword:`with` statement. In this example,
fp is closed after the suite of the with statement is complete:
with open('spam.txt', 'r') as fp:
    fp.write('Spam and eggs!')
S_IFMT_: file type bits
S_IFDIR: directory
S_IFCHR: character device
S_IFBLK: block device
S_IFREG: regular file
S_IFIFO: fifo (named pipe)
S_IFLNK: symbolic link
S_IFSOCK: socket file
S_IFDOOR: door
S_IFPORT: event port
S_IFWHT: whiteout
S_ISUID: set UID bit
S_ISGID: set GID bit
S_ENFMT: file locking enforcement
S_ISVTX: sticky bit
S_IREAD: Unix V7 synonym for S_IRUSR
S_IWRITE: Unix V7 synonym for S_IWUSR
S_IEXEC: Unix V7 synonym for S_IXUSR
S_IRWXU: mask for owner permissions
S_IRUSR: read by owner
S_IWUSR: write by owner
S_IXUSR: execute by owner
S_IRWXG: mask for group permissions
S_IRGRP: read by group
S_IWGRP: write by group
S_IXGRP: execute by group
S_IRWXO: mask for others (not in group) permissions
S_IROTH: read by others
S_IWOTH: write by others
S_IXOTH: execute by others
UF_NODUMP: do not dump file
UF_IMMUTABLE: file may not be changed
UF_APPEND: file may only be appended to
UF_OPAQUE: directory is opaque when viewed through a union stack
UF_NOUNLINK: file may not be renamed or deleted
UF_COMPRESSED: OS X: file is hfs-compressed
UF_HIDDEN: OS X: file should not be displayed
SF_ARCHIVED: file may be archived
SF_IMMUTABLE: file may not be changed
SF_APPEND: file may only be appended to
SF_NOUNLINK: file may not be renamed or deleted
SF_SNAPSHOT: file is a snapshot file
ST_MODE
ST_INO
ST_DEV
ST_NLINK
ST_UID
ST_GID
ST_SIZE
ST_ATIME
ST_MTIME
ST_CTIME
FILE_ATTRIBUTE_*: Windows file attribute constants
                   (only present on Windows)
.!:<-
rllections
This module provides various functions to manipulate time values.
There are two standard representations of time.  One is the number
of seconds since the Epoch, in UTC (a.k.a. GMT).  It may be an integer
or a floating-point number (to represent fractions of seconds).
The epoch is the point where the time starts, the return value of time.gmtime(0).
It is January 1, 1970, 00:00:00 (UTC) on all platforms.
The other representation is a tuple of 9 integers giving local time.
The tuple items are:
  year (including century, e.g. 1998)
  month (1-12)
  day (1-31)
  hours (0-23)
  minutes (0-59)
  seconds (0-59)
  weekday (0-6, Monday is 0)
  Julian day (day in the year, 1-366)
  DST (Daylight Savings Time) flag (-1, 0 or 1)
If the DST flag is 0, the time is given in the regular time zone;
if it is 1, the time is given in the DST time zone;
if it is -1, mktime() should guess based on the date and time.
AEDT
AEST
AEST-10AEDT,M10.1.0,M4.1.0/3
 Standard "encodings" Package
    Standard Python encoding modules are stored in this package
    directory.
    Codec modules must have names corresponding to normalized encoding
    names as defined in the normalize_encoding() function below, e.g.
    'utf-8' must be implemented by the module 'utf_8.py'.
    Each codec module must export the following interface:
    * getregentry() -> codecs.CodecInfo object
    The getregentry() API must return a CodecInfo object with encoder, decoder,
    incrementalencoder, incrementaldecoder, streamwriter and streamreader
    attributes which adhere to the Python Codec Interface Standard.
    In addition, a module may optionally also define the following
    APIs which are then used by the package's codec search function:
    * getaliases() -> sequence of encoding name strings to use as aliases
    Alias names returned by getaliases() must be normalized encoding
    names as defined by normalize_encoding().
Written by Marc-Andre Lemburg (mal@lemburg.com).
(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.
e7cC
y>e0
D9gzJ
!Q.wf
'Z"0
e7cC
y>e0
xJS1
xd>_
#7Ox
pSmx-
0D.(A
~8H 
(U:/
D9lK
C,.=
{Q'D
)8M%
2j/-
md]4
CCm0
=mbM
rvt%
	|	t
 module 
Route attribute access on a class to __getattr__.
    This is a descriptor, used to define attributes that act differently when
    accessed through an instance and through a class.  Instance access remains
    normal, but access to an attribute through a class will be routed to the
    class's __getattr__ method; this is done by raising AttributeError.
    This allows one to have properties active on an instance, and have virtual
    attributes on the class with the same name.  (Enum used this between Python
    versions 3.4 - 3.9 .)
    Subclass from this to use a different method of accessing virtual attributes
    and still be treated properly by the inspect module. (Enum uses this since
    Python 3.10 .)
    
 Defines the interface for stateless encoders/decoders.
        The .encode()/.decode() methods may use different error
        handling schemes by providing the errors argument. These
        string values are predefined:
         'strict' - raise a ValueError error (or a subclass)
         'ignore' - ignore the character and continue with the next
         'replace' - replace with a suitable replacement character;
                    Python will use the official U+FFFD REPLACEMENT
                    CHARACTER for the builtin Unicode codecs on
                    decoding and '?' on encoding.
         'surrogateescape' - replace with private code points U+DCnn.
         'xmlcharrefreplace' - Replace with the appropriate XML
                               character reference (only for encoding).
         'backslashreplace'  - Replace with backslashed escape sequences.
         'namereplace'       - Replace with \N{...} escape sequences
                               (only for encoding).
        The set of allowed values can be extended via register_error.
    
SystemErrorr
 StreamRecoder instances translate data from one encoding to another.
        They use the complete set of APIs returned by the
        codecs.lookup() function to implement their task.
        Data written to the StreamRecoder is first decoded into an
        intermediate format (depending on the "decode" codec) and then
        written to the underlying stream using an instance of the provided
        Writer class.
        In the other direction, data is read from the underlying stream using
        a Reader instance and then encoded and returned to the caller.
    
`pu.
odqM
NvYD
h0q.
":0p.
rpp.
o0o.
%)V8
RURk
,C3I
6BkC
sD)M
7U,Q
 Encoding Aliases Support
    This module is used by the encodings package search function to
    map encodings names to module names.
    Note that the search function normalizes the encoding names before
    doing the lookup, so the mapping will have to map normalized
    encoding names to module names.
    Contents:
        The following aliases dictionary contains mappings of all IANA
        character set names for which the Python core library provides
        codecs. In addition to these, a few Python specific codec
        aliases have also been added.
Return the class's "original" bases prior to modification by `__mro_entries__`.
    Examples::
        from typing import TypeVar, Generic, NamedTuple, TypedDict
        T = TypeVar("T")
        class Foo(Generic[T]): ...
        class Bar(Foo[int], float): ...
        class Baz(list[str]): ...
        Eggs = NamedTuple("Eggs", [("a", int), ("b", str)])
        Spam = TypedDict("Spam", {"a": int, "b": str})
        assert get_original_bases(Bar) == (Foo[int], float)
        assert get_original_bases(Baz) == (list[str],)
        assert get_original_bases(Eggs) == (NamedTuple,)
        assert get_original_bases(Spam) == (TypedDict,)
        assert get_original_bases(int) == (object,)
    
riconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so:termios
iso_88
tf_7
surrogateescape
This module provides mechanisms to use signal handlers in Python.
Functions:
alarm() -- cause SIGALRM after a specified time [Unix only]
setitimer() -- cause a signal (described below) after a specified
               float time and the timer may restart then [Unix only]
getitimer() -- get current value of timer [Unix only]
signal() -- set the action for a given signal
getsignal() -- get the signal action for a given signal
pause() -- wait until a signal arrives [Unix only]
default_int_handler() -- default SIGINT handler
signal constants:
SIG_DFL -- used to refer to the system default handler
SIG_IGN -- used to ignore the signal
NSIG -- number of defined signals
SIGINT, SIGTERM, etc. -- signal numbers
itimer constants:
ITIMER_REAL -- decrements in real time, and delivers SIGALRM upon
               expiration
ITIMER_VIRTUAL -- decrements only when the process is executing,
               and delivers SIGVTALRM upon expiration
ITIMER_PROF -- decrements both when the process is executing and
               when the system is executing on behalf of the process.
               Coupled with ITIMER_VIRTUAL, this timer is usually
               used to profile the time spent by the application
               in user and kernel space. SIGPROF is delivered upon
               expiration.
*** IMPORTANT NOTICE ***
A signal handler function is called with two arguments:
the first is the signal number, the second is the interrupted stack frame.
r)d	|
r"d	|
==============================
__module
strea
rpe/
product(*iterables, repeat=1) --> product object
Cartesian product of input iterables.  Equivalent to nested for-loops.
For example, product(A, B) returns the same as:  ((x,y) for x in A for y in B).
The leftmost iterators are in the outermost for-loop, so the output tuples
cycle in a manner similar to an odometer (with the rightmost element changing
on every iteration).
To compute the product of an iterable with itself, specify the number
of repetitions with the optional repeat keyword argument. For example,
product(A, repeat=4) means the same as product(A, A, A, A).
product('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)
product((0,1), (0,1), (0,1)) --> (0,0,0) (0,0,1) (0,1,0) (0,1,1) (1,0,0) ...
?&40
wcwid
oder`
ecod
reme
sets
Stre
ream
r.en
ream
er.d
tryr
odul
Like dict.update() but subtracts counts instead of replacing them.
        Counts can be reduced below zero.  Both the inputs and outputs are
        allowed to contain zero and negative counts.
        Source can be an iterable, a dictionary, or another Counter instance.
        >>> c = Counter('which')
        >>> c.subtract('witch')             # subtract elements from another iterable
        >>> c.subtract(Counter('watch'))    # subtract elements from another counter
        >>> c['h']                          # 2 in which, minus 1 in witch, minus 1 in watch
        0
        >>> c['w']                          # 1 in which, minus 1 in witch, minus 1 in watch
        -1
        
.F?"
5c8Y
iEWs!n
Returns a new subclass of tuple with named fields.
    >>> Point = namedtuple('Point', ['x', 'y'])
    >>> Point.__doc__                   # docstring for the new class
    'Point(x, y)'
    >>> p = Point(11, y=22)             # instantiate with positional args or keywords
    >>> p[0] + p[1]                     # indexable like a plain tuple
    33
    >>> x, y = p                        # unpack like a regular tuple
    >>> x, y
    (11, 22)
    >>> p.x + p.y                       # fields also accessible by name
    33
    >>> d = p._asdict()                 # convert to a dictionary
    >>> d['x']
    11
    >>> Point(**d)                      # convert from a dictionary
    Point(x=11, y=22)
    >>> p._replace(x=100)               # _replace() is like str.replace() but targets named fields
    Point(x=100, y=22)
    
;.Lx"
a;(\
^b;Y
Z5aT 
}	t/
|	t&
m	Z	
Z"e"f
m#Z#
m$Z$
d&e!
Z%d'
d+e(
e*e+h
e,e-e.f
Z/d;d-
Z0d.
m1Z1
Z2d1
Z3d<d3
Z4d4
Z5d5
Z6d6
Z:y2#
ord 
312-x86_
hon-312-
8lib/py
@asynccontextmanager decorator.
    Typical usage:
        @asynccontextmanager
        async def some_async_generator(<arguments>):
            <setup>
            try:
                yield <value>
            finally:
                <cleanup>
    This makes this:
        async with some_async_generator(<arguments>) as <variable>:
            <body>
    equivalent to this:
        <setup>
        try:
            <variable> = <value>
            <body>
        finally:
            <cleanup>
    
This module implements specialized container datatypes providing
alternatives to Python's general purpose built-in containers, dict,
list, set, and tuple.
* namedtuple   factory function for creating tuple subclasses with named fields
* deque        list-like container with fast appends and pops on either end
* ChainMap     dict-like class for creating a single view of multiple mappings
* Counter      dict subclass for counting hashable objects
* OrderedDict  dict subclass that remembers the order entries were added
* defaultdict  dict subclass that calls a factory function to supply missing values
* UserDict     wrapper around dictionary objects for easier dict subclassing
* UserList     wrapper around list objects for easier list subclassing
* UserString   wrapper around string objects for easier string subclassing
Prompt for a password, with echo turned off.
    Args:
      prompt: Written on stream to ask for the input.  Default: 'Password: '
      stream: A writable file object to display the prompt.  Defaults to
              the tty.  If no tty is available defaults to sys.stderr.
    Returns:
      The seKr3t input.
    Raises:
      EOFError: If our input tty or stdin was closed.
      GetPassWarning: When we were unable to turn echo off on the input.
    Always restores terminal settings before returning.
    
A context manager that copies and restores the warnings filter upon
    exiting the context.
    The 'record' argument specifies whether warnings should be captured by a
    custom implementation of warnings.showwarning() and be appended to a list
    returned by the context manager. Otherwise None is returned by the context
    manager. The objects appended to the list are arguments whose attributes
    mirror the arguments to showwarning().
    The 'module' argument is to specify an alternative module to the module
    named 'warnings' and imported under that name. This argument is only useful
    when testing the warnings module itself.
    If the 'action' argument is not None, the remaining arguments are passed
    to warnings.simplefilter() as if it were called immediately on entering the
    context.
    
Functional tools for creating and using iterators.
Infinite iterators:
count(start=0, step=1) --> start, start+step, start+2*step, ...
cycle(p) --> p0, p1, ... plast, p0, p1, ...
repeat(elem [,n]) --> elem, elem, elem, ... endlessly or up to n times
Iterators terminating on the shortest input sequence:
accumulate(p[, func]) --> p0, p0+p1, p0+p1+p2
batched(p, n) --> [p0, p1, ..., p_n-1], [p_n, p_n+1, ..., p_2n-1], ...
chain(p, q, ...) --> p0, p1, ... plast, q0, q1, ...
chain.from_iterable([p, q, ...]) --> p0, p1, ... plast, q0, q1, ...
compress(data, selectors) --> (d[0] if s[0]), (d[1] if s[1]), ...
dropwhile(predicate, seq) --> seq[n], seq[n+1], starting when predicate fails
groupby(iterable[, keyfunc]) --> sub-iterators grouped by value of keyfunc(v)
filterfalse(predicate, seq) --> elements of seq where predicate(elem) is False
islice(seq, [start,] stop [, step]) --> elements from
       seq[start:stop:step]
pairwise(s) --> (s[0],s[1]), (s[1],s[2]), (s[2], s[3]), ...
starmap(fun, seq) --> fun(*seq[0]), fun(*seq[1]), ...
tee(it, n=2) --> (it1, it2 , ... itn) splits one iterator into n
takewhile(predicate, seq) --> seq[0], seq[1], until predicate fails
zip_longest(p, q, ...) --> (p[0], q[0]), (p[1], q[1]), ...
Combinatoric generators:
product(p, q, ... [repeat=1]) --> cartesian product
permutations(p[, r])
combinations(p, r)
combinations_with_replacement(p, r)
d$d#
d$d#
Dict subclass for counting hashable items.  Sometimes called a bag
    or multiset.  Elements are stored as dictionary keys and their counts
    are stored as dictionary values.
    >>> c = Counter('abcdeabcdabcaba')  # count elements from a string
    >>> c.most_common(3)                # three most common elements
    [('a', 5), ('b', 4), ('c', 3)]
    >>> sorted(c)                       # list all unique elements
    ['a', 'b', 'c', 'd', 'e']
    >>> ''.join(sorted(c.elements()))   # list elements with repetitions
    'aaaaabbbbcccdde'
    >>> sum(c.values())                 # total of all counts
    15
    >>> c['a']                          # count of letter 'a'
    5
    >>> for elem in 'shazam':           # update counts from an iterable
    ...     c[elem] += 1                # by adding 1 to each element's count
    >>> c['a']                          # now there are seven 'a'
    7
    >>> del c['b']                      # remove all 'b'
    >>> c['b']                          # now there are zero 'b'
    0
    >>> d = Counter('simsalabim')       # make another counter
    >>> c.update(d)                     # add in the second counter
    >>> c['a']                          # now there are nine 'a'
    9
    >>> c.clear()                       # empty the counter
    >>> c
    Counter()
    Note:  If a count is set to zero or reduced to zero, it will remain
    in the counter until the entry is deleted or the counter is cleared:
    >>> c = Counter('aaabbc')
    >>> c['b'] -= 2                     # reduce the count of 'b' by two
    >>> c.most_common()                 # 'b' is still in, but its count is zero
    [('a', 3), ('c', 1), ('b', 0)]
    
Create a new, empty Counter object.  And if given, count elements
        from an input iterable.  Or, initialize the count from another mapping
        of elements to their counts.
        >>> c = Counter()                           # a new, empty counter
        >>> c = Counter('gallahad')                 # a new counter from an iterable
        >>> c = Counter({'a': 4, 'b': 2})           # a new counter from a mapping
        >>> c = Counter(a=4, b=2)                   # a new counter from keyword args
        
Iterator over elements repeating each as many times as its count.
        >>> c = Counter('ABCABC')
        >>> sorted(c.elements())
        ['A', 'A', 'B', 'B', 'C', 'C']
        Knuth's example for prime factors of 1836:  2**2 * 3**3 * 17**1
        >>> import math
        >>> prime_factors = Counter({2: 2, 3: 3, 17: 1})
        >>> math.prod(prime_factors.elements())
        1836
        Note, if an element's count has been set to zero or is a negative
        number, elements() will ignore it.
        
lt-in co
 dict ob
linkr?
r*!$
ple.<loc
product(*iterables, repeat=1) --> product object
Cartesian product of input iterables.  Equivalent to nested for-loops.
For example, product(A, B) returns the same as:  ((x,y) for x in A for y in B).
The leftmost iterators are in the outermost for-loop, so the output tuples
cycle in a manner similar to an odometer (with the rightmost element changing
on every iteration).
To compute the product of an iterable with itself, specify the number
of repetitions with the optional repeat keyword argument. For example,
product(A, repeat=4) means the same as product(A, A, A, A).
product('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)
product((0,1), (0,1), (0,1)) --> (0,0,0) (0,0,1) (0,1,0) (0,1,1) (1,0,0) ...
 Element
 # make 
> c = Co
 ignore 
te(d)   1
d countezip_longest(iter1 [,iter2 [...]], [fillvalue=None]) --> zip_longest object
Return a zip_longest object whose .__next__() method returns a tuple where
the i-th element comes from the i-th iterable argument.  The .__next__()
method continues until the longest iterable in the argument sequence
is exhausted and then it raises StopIteration.  When the shorter iterables
are exhausted, the fillvalue is substituted in their place.  The fillvalue
defaults to None or can be specified by a keyword argument.
0x$Nx
?L2	
OS=L
Update a wrapper function to look like the wrapped function
       wrapper is the function to be updated
       wrapped is the original function
       assigned is a tuple naming the attributes assigned directly
       from the wrapped function to the wrapper function (defaults to
       functools.WRAPPER_ASSIGNMENTS)
       updated is a tuple naming the attributes of the wrapper that
       are updated with the corresponding attribute from the wrapped
       function (defaults to functools.WRAPPER_UPDATES)
    
y	pY
A context manager that copies and restores the warnings filter upon
    exiting the context.
    The 'record' argument specifies whether warnings should be captured by a
    custom implementation of warnings.showwarning() and be appended to a list
    returned by the context manager. Otherwise None is returned by the context
    manager. The objects appended to the list are arguments whose attributes
    mirror the arguments to showwarning().
    The 'module' argument is to specify an alternative module to the module
    named 'warnings' and imported under that name. This argument is only useful
    when testing the warnings module itself.
    If the 'action' argument is not None, the remaining arguments are passed
    to warnings.simplefilter() as if it were called immediately on entering the
    context.
    
}	|	
}	|	D
Z	d	
Z!d&
d'l#m$Z$m%Z%m&Z&m
m'Z'
e%Z(e&Z)d(Z*
e*sA
d)e/d,d
d.e/d
d.e0d
d.e1d
d.e2d
Z$d)Z(i
a,d*
ate', fo
@W@ 
XV@ 
Dict subclass for counting hashable items.  Sometimes called a bag
    or multiset.  Elements are stored as dictionary keys and their counts
    are stored as dictionary values.
    >>> c = Counter('abcdeabcdabcaba')  # count elements from a string
    >>> c.most_common(3)                # three most common elements
    [('a', 5), ('b', 4), ('c', 3)]
    >>> sorted(c)                       # list all unique elements
    ['a', 'b', 'c', 'd', 'e']
    >>> ''.join(sorted(c.elements()))   # list elements with repetitions
    'aaaaabbbbcccdde'
    >>> sum(c.values())                 # total of all counts
    15
    >>> c['a']                          # count of letter 'a'
    5
    >>> for elem in 'shazam':           # update counts from an iterable
    ...     c[elem] += 1                # by adding 1 to each element's count
    >>> c['a']                          # now there are seven 'a'
    7
    >>> del c['b']                      # remove all 'b'
    >>> c['b']                          # now there are zero 'b'
    0
    >>> d = Counter('simsalabim')       # make another counter
    >>> c.update(d)                     # add in the second counter
    >>> c['a']                          # now there are nine 'a'
    9
    >>> c.clear()                       # empty the counter
    >>> c
    Counter()
    Note:  If a count is set to zero or reduced to zero, it will remain
    in the counter until the entry is deleted or the counter is cleared:
    >>> c = Counter('aaabbc')
    >>> c['b'] -= 2                     # reduce the count of 'b' by two
    >>> c.most_common()                 # 'b' is still in, but its count is zero
    [('a', 3), ('c', 1), ('b', 0)]
    
isprin
.rsplit
Route attribute access on a class to __getattr__.
    This is a descriptor, used to define attributes that act differently when
    accessed through an instance and through a class.  Instance access remains
    normal, but access to an attribute through a class will be routed to the
    class's __getattr__ method; this is done by raising AttributeError.
    This allows one to have properties active on an instance, and have virtual
    attributes on the class with the same name.  (Enum used this between Python
    versions 3.4 - 3.9 .)
    Subclass from this to use a different method of accessing virtual attributes
    and still be treated properly by the inspect module. (Enum uses this since
    Python 3.10 .)
    
I%B-
	|	D
Least-recently-used cache decorator.
    If *maxsize* is set to None, the LRU features are disabled and the cache
    can grow without bound.
    If *typed* is True, arguments of different types will be cached separately.
    For example, f(3.0) and f(3) will be treated as distinct calls with
    distinct results.
    Arguments to the cached function must be hashable.
    View the cache statistics named tuple (hits, misses, maxsize, currsize)
    with f.cache_info().  Clear the cache and statistics with f.cache_clear().
    Access the underlying function with f.__wrapped__.
    See:  https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)
    
Computes the method resolution order using extended C3 linearization.
    If no *abcs* are given, the algorithm works exactly like the built-in C3
    linearization used for method resolution.
    If given, *abcs* is a list of abstract base classes that should be inserted
    into the resulting MRO. Unrelated ABCs are ignored and don't end up in the
    result. The algorithm inserts ABCs where their functionality is introduced,
    i.e. issubclass(cls, abc) returns True for the class itself but returns
    False for all its direct base classes. Implicit ABCs for a given class
    (either registered or inferred from the presence of a special method like
    __len__) are inserted directly after the last ABC explicitly listed in the
    MRO of said class. If two implicit ABCs end up next to each other in the
    resulting MRO, their ordering depends on the order of types in *abcs*.
    
Z([(n
e8e9
e9e!z
rapp
rqt	
metaclas
most der
z"E1
    
__code__
 *se
ngle MRO
thm.`
d frP
ro.h`
Inconsist`
d)e/d,
 simple 
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
too many fields (max 5): r=
invalid lineno )
split
lenr`
_getaction
_getcategoryrP
escaperO
OverflowErrorr
)	rh
partsr/
         r
allrB
startswithr`
invalid module name: z
unknown warning category: z
invalid warning category: )	rN
builtins
rpartition
__import__
ImportErrorr`
getattr
AttributeErrorrM
klassrD
cats
      r
	importlib
_bootstrapr^
_is_internal_filenamer
prefixr
	<genexpr>z'_is_filename_to_skip.<locals>.<genexpr>
obalsr
adnan
 G(F=
     a
_module
_entered
_filter)
       r
catch_warnings.__init__
record=Truer
z	module=%r
join)
names
   r
__repr__z
catch_warnings.__repr__
Cannot enter %r twiceT)
_filtersr[
_showwarningr
logs
	__enter__z
catch_warnings.__enter__
Nz%Cannot exit %r without entering first)	r
exc_infos
__exit__z
catch_warnings.__exit__
)	r&
z@{name!r} is deprecated and slated for removal in Python {remove})
_versionc
Warn that *name* is deprecated or should be removed.
    RuntimeError is raised if *remove* specifies a major/minor tuple older than
    the current Python version or the same version but past the alpha.
    The *message* argument is formatted with *name* and *remove* as a Python
    version (e.g. "3.11").
    r
alphaz% was slated for removal after Python z
 alpha)
DeprecationWarning)
remove_formattedr
      r
_deprecatedr
coroutine 'z
' was never awaited
reversed
	cr_originr(
funcnamer
coror'
    
extractz*_warn_unawaited_coroutine.<locals>.extract
z-Coroutine created at (most recent call last)
	tracebackrI
format_list
listr
rstripr
RuntimeWarning)
	msg_linesr
`    @r
_warn_unawaited_coroutiner
_defaultaction
_onceregistryr
gettotalrefcount
__main__)
NNNN)3rc
__all__r
objectr
_DEPRECATED_MSG
version_infor
	_warningsrW
_warnings_defaultsr|
warnoptions
hasattrr
PendingDeprecationWarning
ImportWarning
ResourceWarningr^
<module>r
Z	d	
Z!d&
d'l#m$Z$m%Z%m&Z&m
m'Z'
e%Z(e&Z)d(Z*
e*sA
d)e/d,d
d.e/d
d.e0d
d.e1d
d.e2d
Z$d)Z(i
a,d*
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
PyModule_GetState
_Py_Dealloc
_PyLong_FileDescriptor_Converter
PyEval_SaveThread
ioctl
PyEval_RestoreThread
PyTuple_New
PyLong_FromLong
PyTuple_SetItem
PyErr_Occurred
PyErr_SetFromErrno
__stack_chk_fail
_PyArg_CheckPositional
_PyLong_AsInt
tcflow
_Py_NoneStruct
tcflush
tcdrain
tcsendbreak
PyList_Size
tcgetattr
PyLong_AsLong
PyList_GetItem
PyBytes_Size
PyExc_TypeError
PyErr_SetString
PyErr_Format
cfsetispeed
cfsetospeed
tcsetattr
PyBytes_AsString
cfgetispeed
cfgetospeed
PyList_New
PyBytes_FromStringAndSize
PyList_SetItem
PyErr_NewException
PyModule_AddObject
PyModule_AddIntConstant
PySequence_Check
PySequence_Size
PySequence_GetItem
PyExc_OverflowError
PyInit_termios
PyModuleDef_Init
libpthread.so.0
libc.so.6
GLIBC_2.4
GLIBC_2.2.5
$ORIGIN/../..
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
ributes are changed: termios.TCSANOW to
change immediately, termios.TCSADRAIN to change after transmitting all
queued output, or termios.TCSAFLUSH to change after transmitting all
queued output and discarding all queued input.
tcgetattr($module, fd, /)
Get the tty attributes for file descriptor fd.
Returns a list [iflag, oflag, cflag, lflag, ispeed, ospeed, cc]
where cc is a list of the tty special characters (each a string of
length 1, except the items with indices VMIN and VTIME, which are
integers when these fields are defined).  The interpretation of the
flags and the speeds as well as the indexing in the cc array must be
done using the symbolic constants defined in this module.
;*3$"
cc) 11.2.0
stat
name
utf-8
open
first
     
output
errors
self
open
final
reset
state
      
getpass
     
import
enabled
getpass
name
open
getpass
bool
local
authenticate
password
bled
bool
password
nabled
return
bled
True
return
False
mods
open
wcwidth
rust
cffi
blinker
click
wheel
5c8Y
flask
idna
certifi
urllib3
jinja2
warn
stdlib
which
shim
core
self
string
serve
test.
      
method
module
   @
util
frame
    
serve
password
getpass
getpass
getpass
# Hidden input
getpass
authenticate
password
print
print
print
print
input
print
input
__name__
"__main__"
serve
ddev/ttyUTF-8
strict
getuser
termios
ECHO
passwd
          
X??Cv6
msvcrt
%s[}[f
putwch
getwch
    
print
    
line
N.ff
LOGNAME
'>rNf
USER
LNAME
user
strict
closing
J]T@
wraps
deque
An abstract base class for context managers.
self
    
    
Counter
func
inner
      
open
     
       
next
     
anext
     
athrow
helper
thing
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
genericpath
GenericAlias
__subclasses__
GenericAlias
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
surrogateescape
GenericAlias
GenericAlias
/home/adnaan/.local
.txt
utf_8_sig
geoJ
encodings.utf_8_sig
ensure_local_distutils
_patterns
dSETUPTO./LICENSE.txt
ILS'
_TrivialRe
t-info
encodings
StreamWriter.reset
StreamWriter.encode
StreamReader.reset
StreamReader.decode
utf-8-sig
do_override
kFS[
import_module
_distutils
distutils.core
clear_distutils
report_url
distutils.
thon-312
pkg_resources
jinja2-3.1.6.dist-info
setuptools
_distutils_hack
markupsafe
click-8.1.8.dist-info
cffi-1.17.1.dist-info
README.txt
itsdangerous
wheel-0.45.1.dist-info
requests
idna-3.10.dist-info
cryptography
__main__
_distutils_hack
add_shim
prettytable
flask-3.1.0.dist-info
pycparser
pip-25.0.dist-info
blinker-1.9.0.dist-info
werkzeug
urllib3-2.3.0.dist-info
charset_normalizer
distutils
SourceFileLoader
warn_distutils_present
./LICENSE
patterns
_TrivialRe.__init__
_TrivialRe.match
DistutilsMetaFinder
spec_for_{fullname}
method_name
setuptools._distutils
DistutilsLoader
is_cpython
importlib.abc
spec_for_distutils
pybuilddir.txt
spec_for_pip
frame_file_is_setup
walk_stack
setup.py
test.test_distutils
;#j3
 @2*
  o,
 @2*
rfPN
    Ensure that the local copy of distutils is preferred over stdlib.
    See https://github.com/pypa/setuptools/issues/417#issuecomment-392298401
    for more motivation.
    
Enters the supplied context manager.
        If successful, also pushes its __exit__ method as a callback and
        returns the result of the __enter__ method.
        
Enters the supplied async context manager.
        If successful, also pushes its __aexit__ method as a callback and
        returns the result of the __aenter__ method.
        
-pPo
Inplace intersection is the minimum of corresponding counts.
        >>> c = Counter('abbb')
        >>> c &= Counter('bcc')
        >>> c
        Counter({'b': 1})
        
Context manager for dynamic management of a stack of exit callbacks.
    For example:
        with ExitStack() as stack:
            files = [stack.enter_context(open(fname)) for fname in filenames]
            # All opened files will automatically be closed at the end of
            # the with statement, even if attempts to open files later
            # in the list raise an exception.
    
Returns the best matching implementation from *registry* for type *cls*.
    Where there is no registered implementation for a specific type, its method
    resolution order is used to find a more generic implementation.
    Note: if *registry* does not contain an implementation for the base
    *object* type, this function may return None.
    
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
IncrementalEncoder.__init__
-info
IncrementalEncoder.encode
ist-info
IncrementalEncoder.reset
IncrementalEncoder.getstate
IncrementalEncoder.setstate
IncrementalDecoder.__init__
IncrementalDecoder._buffer_decode
IncrementalDecoder.reset
IncrementalDecoder.getstate
IncrementalDecoder.setstate
==============================
SETUPTOOLS_USE_DISTUTILS
# Keep process running (e.g., a web server)
mmap.cpython-312-x86_64-linux-gnu.so
cmath.cpython-312-x86_64-linux-gnu.so
grp.cpython-312-x86_64-linux-gnu.so
	select.cpython-312-x86_64-linux-gnu.so
_lsprof.cpython-312-x86_64-linux-gnu.so
array.cpython-312-x86_64-linux-gnu.so
_pickle.cpython-312-x86_64-linux-gnu.so
_blake2.cpython-312-x86_64-linux-gnu.so
_ssl.cpython-312-x86_64-linux-gnu.so
;.Lx"
_random.cpython-312-x86_64-linux-gnu.so
math.cpython-312-x86_64-linux-gnu.so
_csv.cpython-312-x86_64-linux-gnu.so
_opcode.cpython-312-x86_64-linux-gnu.so
_ctypes.cpython-312-x86_64-linux-gnu.so
_curses.cpython-312-x86_64-linux-gnu.so
_uuid.cpython-312-x86_64-linux-gnu.so
_heapq.cpython-312-x86_64-linux-gnu.so
zlib.cpython-312-x86_64-linux-gnu.so
_sha3.cpython-312-x86_64-linux-gnu.so
_bz2.cpython-312-x86_64-linux-gnu.so
spwd.cpython-312-x86_64-linux-gnu.so
audioop.cpython-312-x86_64-linux-gnu.so
pyexpat.cpython-312-x86_64-linux-gnu.so
a;(\
_queue.cpython-312-x86_64-linux-gnu.so
_json.cpython-312-x86_64-linux-gnu.so
_md5.cpython-312-x86_64-linux-gnu.so
_socket.cpython-312-x86_64-linux-gnu.so
_sha2.cpython-312-x86_64-linux-gnu.so
syslog.cpython-312-x86_64-linux-gnu.so
Z5aT 
_bisect.cpython-312-x86_64-linux-gnu.so
_sha1.cpython-312-x86_64-linux-gnu.so
termios.cpython-312-x86_64-linux-gnu.so
_struct.cpython-312-x86_64-linux-gnu.so
_lzma.cpython-312-x86_64-linux-gnu.so
nis.cpython-312-x86_64-linux-gnu.so
fcntl.cpython-312-x86_64-linux-gnu.so
_crypt.cpython-312-x86_64-linux-gnu.so
MarkupSafe-3.0.2.dist-info
distutils-precedence.pth
certifi-2025.1.31.dist-info
itsdangerous-2.2.0.dist-info
iEWs!n
werkzeug-3.1.3.dist-info
H_"d
wcwidth-0.2.13.dist-info
cryptography-44.0.2.dist-info
.F?"d
pycparser-2.22.dist-info
setuptools-75.8.0-py3.12.egg-info
prettytable-3.15.1.dist-info
charset_normalizer-3.4.1.dist-info
requests-2.32.3.dist-info
setuptools._distutils.log
_TrivialRe.match.<locals>.<genexpr>
DistutilsMetaFinder.find_spec
DistutilsMetaFinder.spec_for_distutils
DistutilsMetaFinder.is_cpython
*foM
pip_imported_during_build
DistutilsMetaFinder.spec_for_pip
DistutilsMetaFinder.frame_file_is_setup
spec_for_sensitive_tests
spec_for_test.test_distutils
-gnu.so
Can not control echo on the terminal.
Warning: Password input may be echoed.
AbstractAsyncContextManager
AbstractContextManager.__enter__
AbstractContextManager.__exit__
AbstractContextManager.__subclasshook__
AbstractAsyncContextManager.__aenter__
AbstractAsyncContextManager.__aexit__
ContextDecorator._recreate_cm
ContextDecorator.__call__
AsyncContextDecorator._recreate_cm
AsyncContextDecorator.__call__
_GeneratorContextManagerBase
_GeneratorContextManagerBase.__init__
_GeneratorContextManager
Helper for @contextmanager decorator.
_GeneratorContextManager.__enter__
generator didn't stop after throw()
_GeneratorContextManager.__exit__
_AsyncGeneratorContextManager
generator didn't stop after athrow()
_AsyncGeneratorContextManager.__aexit__
contextmanager.<locals>.helper
asynccontextmanager.<locals>.helper
_OrderedDictKeysView.__reversed__
t__.py
_OrderedDictItemsView.__reversed__
_RedirectStream.__init__
_RedirectStream.__enter__
_RedirectStream.__exit__
Define the builtin 'help'.
    This is a wrapper around pydoc.help that provides a helpful message
    when 'help' is typed at the Python interactive prompt.
    Calling help() at the Python prompt starts an interactive help session.
    Calling help(thing) prints help for the python object 'thing'.
    
Registers a callback with the standard __exit__ method signature.
        Can suppress exceptions the same way __exit__ method can.
        Also accepts any object with an __exit__ method (registering a call
        to the method instead of the object itself).
        
Context manager to suppress specified exceptions
    After the exception is suppressed, execution proceeds with the next
    statement following the with statement.
         with suppress(FileNotFoundError):
             os.remove(somefile)
         # Execution still resumes here if the file was already removed
    
Context to automatically close something at the end of a block.
    Code like this:
        with closing(<module>.open(<arguments>)) as f:
            <block>
    is equivalent to this:
        f = <module>.open(<arguments>)
        try:
            <block>
        finally:
            f.close()
    
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/site-packages/_distutils_hack/__pycache__/__init__.cpython-312.pyc
dhome/ad
        Suppress supplying distutils for CPython (build and tests).
        Ref #2965 and #3007.
        
        Ensure stdlib distutils when running under pip.
        See pypa/pip#8761 for rationale.
        
        Ensure stdlib distutils when running select tests under CPython.
        python/cpython#91169
        
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
filterfalse(function, iterable, /)
Return those items of iterable for which function(item) is false.
If function is None, return the items that are false.
repeat(object [,times]) -> create an iterator which returns the object
for the specified number of times.  If not specified, returns the object
endlessly.
Return an iterator of overlapping pairs taken from the input iterator.
    s -> (s0,s1), (s1,s2), (s2, s3), ...
deque([iterable[, maxlen]]) --> deque object
A list-like sequence optimized for data accesses near its endpoints.
dhome/adhttps://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
DistutilsMetaFinder.spec_for_distutils.<locals>.DistutilsLoader.create_module
DistutilsMetaFinder.spec_for_distutils.<locals>.DistutilsLoader.exec_module
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/contextlib.cpython-312.pyc
        Detect if pip is being imported in a build script. Ref #2355.
        
        Return True if the indicated frame suggests a setup.py file.
        
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/collections/__init__.py
A base class or mixin that enables context managers to work as decorators.
A base class or mixin that enables async context managers to work as decorators.
accumulate(iterable, func=None, *, initial=None)
Return series of accumulated sums (or other binary function results).
Helper to correctly register coroutine function to __aexit__
        method.
Non thread-safe context manager to change the current working directory.
New ChainMap or subclass with a new copy of maps[0] and refs to maps[1:]
cycle(iterable, /)
Return elements from the iterable until it is exhausted. Then repeat the sequence indefinitely.
Remove and return an item pair from maps[0]. Raise KeyError is maps[0] is empty.
Remove *key* from maps[0] and return its value. Raise KeyError if *key* not in maps[0].
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/keyword.cpython-312.pyc
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/operator.cpython-312.pyc
2.pyc
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/reprlib.cpython-312.pyc
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/functools.cpython-312.pyc
deque([iterable[, maxlen]]) --> deque object
A list-like sequence optimized for data accesses near its endpoints.
n-312.pyc
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/types.cpython-312.pyc
Return a > b.  Computed by @total_ordering from (not a < b) and (a != b).
Return a >= b.  Computed by @total_ordering from (not a <= b) or (a == b).
Define names for built-in types that aren't directly accessible as a builtin.
Return a < b.  Computed by @total_ordering from (not a > b) and (a != b).
Return a <= b.  Computed by @total_ordering from (not a >= b) or (a == b).
partial(func, *args, **keywords) - new function with partial application
    of the given arguments and keywords.
Return a new CacheInfo object replacing specified fields with new values
. Use either `@register(some_class)` or plain `@register` on an annotated function.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/warnings.cpython-312.pyc
2.pyc
itertools.dropwhile
itertools.filterfalse
itertools.groupby
itertools._grouper
itertools.islice
itertools.pairwise
itertools.permutations
itertools.product
itertools.repeat
itertools.starmap
itertools.takewhile
itertools._tee_dataobject
itertools.zip_longest
collections.defaultdict
operator.attrgetter
operator.itemgetter
operator.methodcaller
collections.deque
@$6?
collections._deque_iterator
collections._tuplegetter
@$6?
@$6?
functools.partial
functools._lru_cache_wrapper
functools.KeyWrapper
functools._lru_list_elem
@$6?
spec_for_usercustomize
5c'M
spec_for_sitecustomize
sensitive_tests
bQTOf
spec_for_
DISTUTILS_FINDER
insert_shim
shim.__enter__
_remove_shim
shim.__exit__
remove_shim
_create_exit_wrapper
suppress.__enter__
_BaseExitStack
_showwarnmsg_impl
suppress.__exit__
authenticate
suppress.__init__
_exceptions
DCkf
namedtuple
spec_for_collections
filterwarnings
new_target
_old_targets
_new_target
_RedirectStream
formatwarning
on-312
aclosing.__aexit__
aclosing.__aenter__
aclosing.__init__
showwarning
closing.__exit__
closing.__enter__
closing.__init__
OrderedDict
spec_for_warnings
tcsendbreak
generator didn't stop
generator didn't yield
AsyncContextDecorator
ChainMap
_recreate_cm
it>f
aclosing
suppress
redirect_stderr
redirect_stdout
ContextDecorator
AsyncExitStack
"Enter password for session: "
"Session active."
Session active.
AbstractContextManager
nullcontext
asynccontextmanager
Af}&
MethodType
spec_for_contextlib
:d^&
incrementaldecoder
resetwarnings
contextmanager
Password: 
deError
win_getpass
rrupt
^z<>J"
unix_getpass
tcsetattr_flags
_raw_input
tcsetattr
TCSAFLUSH
tcgetattr
fallback_getpass
enter_context
+I]Ek
ExitStack
contextlib
TCSASOFT
vulnerable.py
dump.1186560
GetPassWarning
-312
spec_for_getpass
/dev/tty
__main__
UserDict
callback
_exit_wrapper
_create_cb_wrapper
_exit_callbacks
_BaseExitStack.__init__
new_stack
_BaseExitStack.pop_all
_push_cm_exit
_push_exit_callback
4O<Zf
_cb_type
exit_method
_BaseExitStack.push
_BaseExitStack.callback
ExitStack.__enter__
exc_context
frame_exc
_fix_exception_context
received_exc
suppressed_exc
pending_raise
f'm'C
new_exc_details
fixed_ctx
ExitStack.__exit__
ExitStack.close
UserList
UserString
_push_async_cm_exit
enter_async_context
-6<f
push_async_exit
push_async_callback
AsyncExitStack.aclose
cb_suppress
defaultdict
enter_result
nullcontext.__init__
iskeyword
nullcontext.__enter__
nullcontext.__exit__
nullcontext.__aenter__
nullcontext.__aexit__
_old_cwd
chdir.__init__
chdir.__enter__
chdir.__exit__
_formatwarnmsg_impl
collections
functools
itemgetter
recursive_repr
_deque_iterator
_F!B
_OrderedDictKeysView
accumulate
_OrderedDictItemsView
_OrderedDictValuesView
_OrderedDict__hardroot
_OrderedDict__root
_OrderedDict__map
Context manager for temporarily redirecting stdout to another file.
        # How to send help() to stderr
        with redirect_stdout(sys.stderr):
            help(dir)
        # How to write help() to a file
        with open('help.txt', 'w') as f:
            with redirect_stdout(f):
                help(pow)
    
Context manager to suppress specified exceptions
    After the exception is suppressed, execution proceeds with the next
    statement following the with statement.
         with suppress(FileNotFoundError):
             os.remove(somefile)
         # Execution still resumes here if the file was already removed
    
Warn that *name* is deprecated or should be removed.
    RuntimeError is raised if *remove* specifies a major/minor tuple older than
    the current Python version or the same version but past the alpha.
    The *message* argument is formatted with *name* and *remove* as a Python
    version (e.g. "3.11").
    
groupby(iterable, key=None)
make an iterator that returns consecutive keys and groups from the iterable
  iterable
    Elements to divide into groups according to the key function.
  key
    A function for computing the group category for each element.
    If the key function is not specified or is None, the element itself
    is used for grouping.
make an iterator that returns consecutive keys and groups from the iterable
  iterable
    Elements to divide into groups according to the key function.
  key
    A function for computing the group category for each element.
    If the key function is not specified or is None, the element itself
    is used for grouping.
Return a callable object that fetches the given attribute(s) from its operand.
After f = attrgetter('name'), the call f(r) returns r.name.
After g = attrgetter('name', 'date'), the call g(r) returns (r.name, r.date).
After h = attrgetter('name.first', 'name.last'), the call h(r) returns
(r.name.first, r.name.last).
AbstractAsyncContextManager.__subclasshook__
ContextDecorator.__call__.<locals>.inner
Return a recreated instance of self.
        
AsyncContextDecorator.__call__.<locals>.inner
_GeneratorContextManagerBase._recreate_cm
Helper for @asynccontextmanager decorator.
_AsyncGeneratorContextManager.__aenter__
_warn_unawaited_coroutine.<locals>.extract
A base class for ExitStack and AsyncExitStack.
' object does not support the context manager protocol
ExitStack.__exit__.<locals>._fix_exception_context
AsyncExitStack._create_async_exit_wrapper
m od.
skip_file_prefixes must be a tuple of strs.
Coroutine created at (most recent call last)
Exception used by option processing helpers.
Type names and field names must be strings
Type names and field names must be valid identifiers: 
Type names and field names cannot be a keyword: 
Field names cannot start with an underscore: 
Got more default values than field names
 object replacing specified fields with new values
Return a nicely formatted representation string
teedataobject(iterable, values, next, /)
Data container common to multiple tee objects.
Return self as a plain tuple.  Used by copy and pickle.
The count of elements not in the Counter is zero.
recursive_repr.<locals>.decorating_function
eger
ChainMap.__contains__.<locals>.<genexpr>
A base class or mixin that enables async context managers to work as decorators.
Repr.indent cannot be negative int (was 
nteger
must define at least one ordering operation: < > <= >=
Class decorator that fills in missing ordering methods
nexpr>
s.py
Repr.indent must be a str, int or None, not 
Hook to write a warning to a file; replace if you like.
partialmethod.__repr__.<locals>.<genexpr>
partialmethod._make_unbound_method.<locals>._method
Function to format a warning the standard way.
singledispatch.<locals>._is_valid_dispatch_type
singledispatch.<locals>.register.<locals>.<lambda>
Invalid first argument to `register()`. 
Invalid first argument to `register()`: 
 requires at least 1 positional argument
dtion ofObject allocated at (most recent call last):
singledispatchmethod.__get__.<locals>._method
setattr
exctype
excinst
exctb
    
text
  %s
H.uef
starmap
      
rest
cm_exit
``` 
pop_all
    
exit
push
_enter
      
result
     
    
is_sync
(jwf
new_exc
old_exc
          @
``` 
      
    
     
    
open
           @
repeat
excinfo
path
getcwd
self
>gUf
updated
wrapped
open
_Link
O<Ef
prev
reduce
gcyh?
_proxy
f    
Link
         
f     
escape
curr
name
item
    
       
action
_sys
sizeof
f   
once
         
getline
marker
d           %s
slots
      
A base class for ExitStack and AsyncExitStack.
      
value
name
_len
_make
_map
_fields
_dict
_zip
_asdict
_tuple
super
	z_f
total
heapq
aa|vT
_chain
_repeat
      
count
      
__lt__
      
__gt__
      
__add__
       
__sub__
       
    
__and__
    
__pos__
    
    
    
     
     
maps
union
__len__
repr
kwargs
parents
    
child
data
hasattr
item
inst
    
     
__cast
slice
__mul__
append
insert
remove
sort
extend
__str__
float
complex
_OrderedDictValuesView.__reversed__
_BaseExitStack._create_exit_wrapper
_BaseExitStack._create_cb_wrapper
_BaseExitStack.enter_context
_BaseExitStack._push_cm_exit
_BaseExitStack._push_exit_callback
Immediately unwind the context stack.
_create_async_exit_wrapper
_create_async_cb_wrapper
AsyncExitStack._create_async_cb_wrapper
AsyncExitStack.enter_async_context
AsyncExitStack.push_async_exit
AsyncExitStack.push_async_callback
AsyncExitStack._push_async_cm_exit
AsyncExitStack.__aenter__
AsyncExitStack.__aexit__
unknown warning category: 
d[i]=y
too many fields (max 5): 
 od[y]
Invalid -W option ignored:
lineno must be an int >= 0
category must be a Warning subclass
category must be a class
for pickling
message must be a string
py of od
invalid warning category: 
Encountered duplicate field name: 
namedtuple.<locals>.<genexpr>
namedtuple.<locals>._make
 object from a sequence or iterable
Got unexpected field names: 
namedtuple.<locals>._replace
namedtuple.<locals>.__repr__
namedtuple.<locals>._asdict
namedtuple.<locals>.__getnewargs__
Counter.__eq__.<locals>.<genexpr>
Counter.__le__.<locals>.<genexpr>
Counter.__ge__.<locals>.<genexpr>
New ChainMap from maps[1:].
Key not found in the first mapping: 
No keys found in the first mapping.
Clear maps[0], leaving maps[1:] intact.
UserString.__getnewargs__
combinations_with_replacement
combinations_with_replacement
_OrderedDict__update
dict_setitem
dict_delitem
link_prev
V7"'
link_next
soft_link
_OrderedDict__marker
_recursive_repr
r7[]
_tuplegetter
_itemgetter
defaults
%mlf
namedtuple_
_tuple_new
lambda _cls, 
: _tuple_new(_cls, (
Create new instance of 
Expected 
 arguments, got 
num_fields
tuple_new
Make a new 
field_names
_replace
Return a new 
repr_fmt
_field_defaults
Alias for field number 
_iskeyword
typename
rror
name
field_defaults
arg_list
sWkf
class_namespace
 `                    @@@@@@@@
mapping_get
_count_elements
Counter.__init__
Counter.__missing__
Sum of the counts
Counter.total
nlargest
most_common
Counter.most_common
from_iterable
_starmap
elements
Counter.elements
accumulate
Counter.fromkeys
self_get
Counter.update
subtract
Counter.subtract
Return a shallow copy.
Counter.copy
Counter.__reduce__
Counter.__delitem__
Counter.__repr__
Counter.__eq__
Counter.__ne__
Counter.__le__
Counter.__lt__
Counter.__ge__
Counter.__gt__
newcount
Counter.__add__
Counter.__sub__
other_count
Counter.__or__
Counter.__and__
Counter.__pos__
Counter.__neg__
nonpositive
_keep_positive
Counter._keep_positive
Counter.__iadd__
Counter.__isub__
Counter.__ior__
Counter.__iand__
ChainMap.__init__
ChainMap.__missing__
ChainMap.__getitem__
ChainMap.get
ChainMap.__len__
ChainMap.__iter__
ChainMap.__contains__
ChainMap.__bool__
ChainMap.__repr__
ChainMap.fromkeys
ChainMap.copy
new_child
ChainMap.new_child
ChainMap.parents
ChainMap.__setitem__
ChainMap.__delitem__
ChainMap.popitem
ChainMap.pop
ChainMap.clear
ChainMap.__ior__
ChainMap.__or__
ChainMap.__ror__
UserDict.__init__
UserDict.__len__
UserDict.__getitem__
UserDict.__setitem__
spec_for_itertools
UserDict.__delitem__
UserDict.__iter__
itertools
New ChainMap with a new map followed by all previous maps.
        If no map is provided, an empty dict is used.
        Keyword arguments update the map or new empty dict.
        
rn-pc
UserDict.__contains__
itertools
bute__
UserDict.get
UserDict.__repr__
UserDict.__or__
UserDict.__ror__
UserDict.__ior__
UserDict.__copy__
UserDict.copy
UserDict.fromkeys
'Pof
initlist
UserList.__init__
UserList.__repr__
_UserList__cast
UserList.__lt__
UserList.__le__
UserList.__eq__
UserList.__gt__
UserList.__ge__
UserList.__cast
UserList.__contains__
UserList.__len__
UserList.__getitem__
UserList.__setitem__
itertools
titem__
UserList.__delitem__
UserList.__add__
UserList.__radd__
UserList.__iadd__
UserList.__mul__
UserList.__imul__
UserList.__copy__
UserList.append
UserList.insert
UserList.pop
UserList.remove
UserList.clear
UserList.copy
UserList.count
UserList.index
UserList.reverse
UserList.sort
UserList.extend
UserString.__init__
UserString.__str__
UserString.__repr__
UserString.__int__
UserString.__float__
UserString.__complex__
UserString.__hash__
UserString.__eq__
UserString.__lt__
UserString.__le__
UserString.__gt__
UserString.__ge__
UserString.__contains__
UserString.__len__
UserString.__getitem__
UserString.__add__
UserString.__radd__
UserString.__mul__
UserString.__mod__
UserString.__rmod__
UserString.capitalize
UserString.casefold
UserString.center
UserString.count
UserString.removeprefix
UserString.removesuffix
UserString.encode
UserString.endswith
UserString.expandtabs
UserString.find
UserString.format
UserString.format_map
UserString.index
UserString.isalpha
UserString.isalnum
UserString.isascii
UserString.isdecimal
UserString.isdigit
UserString.isidentifier
UserString.islower
UserString.isnumeric
UserString.isprintable
UserString.isspace
UserString.istitle
UserString.isupper
UserString.join
UserString.ljust
UserString.lower
UserString.lstrip
UserString.partition
UserString.replace
UserString.rfind
UserString.rindex
UserString.rjust
UserString.rpartition
UserString.rstrip
UserString.split
UserString.rsplit
UserString.splitlines
UserString.startswith
UserString.strip
UserString.swapcase
UserString.title
UserString.translate
UserString.upper
UserString.zfill
maketrans
itertools
operator
-y*f
_collections
combinations
itertools
KgC+a~
combinations
compress
itertools
ute__
hash
string
char
__mod__
width
    
prefix
suffix
utf-8
errors
    
tabsize
    
find
format
    
isalpha
isalnum
isascii
isdigit
islower
isspace
istitle
isupper
ljust
lower
chars
    
    
rfind
    
rindex
rjust
rstrip
rsplit
    
strip
title
upper
zfill
keyword
reprlib
name
name
name
batched
(Mnf
batched
chain
count
itertools.combinations_with_replacement
count
cycle
cycle
groupby
I[R:
groupby
islice
islice
product
product
repeat
starmap
_tee
_tee
$zXf
kwlist
open
assert
async
await
break
class
OS=L
elif
0x$Nf
else
except
finally
from
global
import
pass
raise
?L2	
while
with
yield
case
countOf
concat
open
and_
delitem
getitem
iadd
iand
iconcat
ilshift
imatmul
imod
imul
indexOf
invert
ipow
irshift
is_not
isub
ixor
lshift
matmul
not_
rshift
setitem
truediv
truth
result
wrapper
Repr
getattr
      
      
name
array
name
maxlist
2zf 
maxset
c z*?
maxdict
indent
maxlong
_abs
repr1
              
repr_
_lookup
        
odule
parts
      
sorted
pieces
      
error
aRepr
_join
QP'f 
left
name
right
maxiter
trail
deque
             
z	popleft
rotate
maxlen
collections._deque_reverse_iterator
copy
    
header
set()
count
roots
opname
deque([
d   
opfunc
W8Nf  
keyrepr
hint
[f    
valrepr
           
_attrs
_call
names
getter
__ge__
getters
attrs
__gt__
Helper for @contextmanager decorator.
__le__
_items
      
item
other
_args
_kwargs
Helper for @asynccontextmanager decorator.
partial
generic_func.dispatch(cls) -> <function implementation>
        Runs the dispatch algorithm to return the best available implementation
        for the given *cls* registered on *generic_func*.
        
itertools
ute__
itertools
itertools
dropwhile
itertools
dropwhile
filterfalse
itertools
ute__
filterfalse
itertools
_grouper
itertools
ute__
_grouper
itertools
pairwise
itertools
bute__
pairwise
permutations
itertools
permutations
itertools
itertools
nt__
itertools
ute__
takewhile
itertools
takewhile
_tee(iterable, /)
Iterator wrapped to make it copyable.
itertools
_tee_dataobject
itertools
ute__
_tee_dataobject
zip_longest
itertools
zip_longest
spec_for_keyword
issoftkeyword
continue
softkwlist
nonlocal
collections
floordiv
attrgetter
thon-312
contains
ifloordiv
itruediv
length_hint
methodcaller
spec_for_reprlib
repr_running
user_function
n-312.pyc
KJ	P	{g
decorating_function
 > b.
maxlevel
maxtuple
 is b.
maxarray
 is not b.
maxfrozenset
maxdeque
 + b.
maxstring
& b.
maxother
 // b.
Repr.__init__
dex__().
Repr.repr
repr_instance
Repr.repr1
Repr._join
newlevel
 | b.
_repr_iterable
Repr._repr_iterable
repr_tuple
> b.
Repr.repr_tuple
repr_list
/ b.
Repr.repr_list
array('%s')
array('%s', [
typecode
Repr.repr_array
repr_array
_possibly_sorted
Repr.repr_set
repr_set
frozenset()
= b.
frozenset({
repr_frozenset
Repr.repr_frozenset
repr_deque
= b.
Repr.repr_deque
repr_dict
-= b.
Repr.repr_dict
repr_str
 ^= b.
.nfmf
_operator
__concat__
__iconcat__
Repr.repr_str
Repr.repr_int
'ahYf
repr_int
_compare_digest
kq:R
spec_for__operator
attrgetter
__vectorcalloffset__
operator
itemgetter
operator
alloffset__
methodcaller
operator
ute__
<%s instance at %#x>
Repr.repr_instance
__subclasses__
spec_for__collections
]eo&
appendleft
extendleft
defaultdict
able.
Iterator wrapped to make it copyable.
-gnu.so
-gnu.so
ence
 not %s
A more or less complete user-defined wrapper around list objects.
ences.
repeat(object [,times]) -> create an iterator which returns the object
for the specified number of times.  If not specified, returns the object
endlessly.
High performance data structures.
- deque:        ordered collection accessible from endpoints only
- defaultdict:  dict subclass with a default value factory
Single-dispatch generic method descriptor.
    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    
Method descriptor with partial application of the given arguments
    and keywords.
    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    
 This class guarantees that hash() will be called no more than once
        per element.  This is important because the lru_cache() will hash
        the key multiple times on a cache miss.
    
 This class guarantees that hash() will be called no more than once
        per element.  This is important because the lru_cache() will hash
        the key multiple times on a cache miss.
    
Method descriptor with partial application of the given arguments
    and keywords.
    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    
itemgetter(item, /, *items)
Return a callable object that fetches the given item(s) from its operand.
After f = itemgetter(2), the call f(r) returns r[2].
After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])
mget
], r[3])
Return a callable object that fetches the given item(s) from its operand.
After f = itemgetter(2), the call f(r) returns r[2].
After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])
f_code
f_back
origin
tcdrain
oncekey
prefix
element
        
altkey
f    
_record
__not__
__inv__
3+Ca
_module
       
name
_filter
kwds
    
format
     
module
_method
      
result
rn-f
hits
misses
hash
typed
      `   
AicG
tcflow
``   
bool
bf   
alpha
_key
oldroot
oldkey
NEXT
PREV
t$af
RESULT
full
      
lock
 alpha
extract
    
coro
__len__
       
base
abcs
_c3_mro
       `   
bases
types
found
subcls
``          @
     
match
impl
Union
typing
argname
`      
weakref
   @@@@@@@@@
method
kwargs
``` 
 and 
name
      
name
open
tcflush
partial
Exception used by option processing helpers.
`    @
rstrip
termios
origin
meta
       
shift
       
base
     
winner
     
     
value
__set__
fdoc
    
result
getter
setter
rest
close
gi_code
next
func
`    @
name
CacheInfo(hits, misses, maxsize, currsize)
_cls
b@r&_
     
error
~lfr
B110
*d*Sf
B134
B150
B200
B300
B600
B1200
B1800
B2400
B4800
B9600
B19200
B38400
B57600
B115200
B230400
B460800
B500000
kkoYS
B576000
B921600
CBAUDEX
TCSANOW
TCOOFF
TCOON
TCIOFF
m_Vf
TCION
@xdH@
IGNBRK
BRKINT
IGNPAR
PARMRK
INPCK
ISTRIP
qOOf
INLCR
IGNCR
)ett
ICRNL
IUCLC
IXON
IXANY
IXOFF
IMAXBEL
OPOST
OLCUC
ONLCR
OCRNL
ONOCR
ONLRET
OFILL
OFDEL
NLDLY
CRDLY
TABDLY
C	1f
BSDLY
VTDLY
FFDLY
TAB0
TAB1
TAB2
TAB3
XTABS
CSIZE
CSTOPB
CREAD
PARENB
PARODD
HUPCL
CLOCAL
CIBAUD
CRTSCTS
J+mf
ISIG
	Qx#f
ICANON
XCASE
ECHOE
ECHOK
ECHONL
ECHOCTL
ECHOPRT
ECHOKE
zGPE
FLUSHO
NOFLSH
TOSTOP
PENDIN
IEXTEN
VINTR
VQUIT
VERASE
VKILL
VEOF
VTIME
K{:Kn>
VMIN
VSWTC
VSWTCH
VSTART
VSTOP
VSUSP
VEOL
VWERASE
VLNEXT
VEOL2
CBAUD
CDSUSP
CEOF
CEOL
CEOT
CERASE
CFLUSH
CINTR
CKILL
CLNEXT
CQUIT
CRPRNT
CSTART
CSTOP
CSUSP
CWERASE
EXTA
nu.so
A base class or mixin that enables context managers to work as decorators.
Shared functionality for @contextmanager and @asynccontextmanager.
Context manager for temporarily redirecting stderr to another file.
{!r} is not callable or a descriptor
partialmethod._make_unbound_method
partialmethod.__isabstractmethod__
_make_key.<locals>.<genexpr>
__mro_entries__ must return a tuple
_make_key.<locals>.<genexpr>
lru_cache.<locals>.<lambda>
lru_cache.<locals>.decorating_function
Non thread-safe context manager to change the current working directory.
_clear
_c3_mro.<locals>.<genexpr>
_compose_mro.<locals>.is_related
_compose_mro.<locals>.is_strict_base
(	D'
Ambiguous dispatch: {} or {}
singledispatch.<locals>.dispatch
singledispatch.<locals>._is_union_type
 is not a class or union type.
 not all arguments are classes.
singledispatch.<locals>.register
singledispatch.<locals>.wrapper
 is not callable or a descriptor
singledispatchmethod.__init__
singledispatchmethod.register
singledispatchmethod.__get__
Python part of the warnings subsystem.
cached_property.__init__
cached_property.__set_name__
No '__dict__' attribute on 
The '__dict__' attribute on 
Calculate the most derived metaclass.
Expected an instance of type, not 
DynamicClassAttribute.__init__
DynamicClassAttribute.__get__
DynamicClassAttribute.__set__
DynamicClassAttribute.__delete__
DynamicClassAttribute.getter
DynamicClassAttribute.setter
DynamicClassAttribute.deleter
_GeneratorWrapper__wrapped
Fj{$Wf
_GeneratorWrapper__isgen
_GeneratorWrapper.__init__
_GeneratorWrapper.gi_code
_GeneratorWrapper.gi_frame
_GeneratorWrapper.gi_running
_GeneratorWrapper.gi_yieldfrom
_GeneratorWrapper.__next__
_GeneratorWrapper.__iter__
types.coroutine() expects a callable
coroutine.<locals>.wrapped
ClassMethodDescriptorType
Tools that operate on functions.
default_factory
collections
_deque_iterator
collections
_deque_reverse_iterator
collections
_deque_reverse_iterator
_tuplegetter
collections
WRAPPER_ASSIGNMENTS
update_wrapper
lru_cache
WRAPPER_UPDATES
total_ordering
cmp_to_key
partialmethod
singledispatch
singledispatchmethod
cached_property
assigned
op_result
nted
_gt_from_lt
;#o@zy1f
_le_from_lt
_ge_from_lt
_ge_from_le
_lt_from_le
_gt_from_le
_lt_from_gt
_ge_from_gt
q5ouf
_le_from_gt
_le_from_ge
_gt_from_ge
_lt_from_ge
r1QiQ
_convert
GenericAlias
ocals>.K
GenericAlias
+7+f
_initial_missing
function
keywords
GenericAlias
An abstract base class for asynchronous context managers.
qualname
GenericAlias
partialmethod.__init__
partialmethod.__repr__
cls_or_self
_partialmethod
hod__
_make_unbound_method
new_func
partialmethod.__get__
_unwrap_partial
CacheInfo
currsize
_HashedSeq
hashvalue
_HashedSeq.__init__
_HashedSeq.__hash__
kwd_mark
fasttypes
_make_key
_lru_cache_wrapper
_CacheInfo
cache_parameters
cache_get
_function
make_key
sentinel
mjQf
oldresult
cache_len
cache_info
cache_clear
Inconsistent hierarchy
sequences
#}CX
_c3_merge
x>8-Xa
boundary
explicit_bases
abstract_bases
other_bases
explicit_c3_mros
abstract_c3_mros
other_c3_mros
is_related
is_strict_base
type_set
ses__
_compose_mro
_find_impl
current_token
cache_token
dispatch_cache
dispatch
get_origin
UnionType
_is_union_type
get_args
_is_valid_dispatch_type
q~^xf
get_type_hints
Invalid annotation for 
 is not a class.
singledispatch function
WeakKeyDictionary
MappingProxyType
_clear_cache
&S[P
dispatcher
attrname
 instance to cache 
 property.
_NOT_FOUND
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/functools.py
3.so
functools.py - Tools for working with functions and callable objects
Return a <= b.  Computed by @total_ordering from (a < b) or (a == b).
Return a >= b.  Computed by @total_ordering from (not a < b).
Return a < b.  Computed by @total_ordering from (a <= b) and (a != b).
Return a > b.  Computed by @total_ordering from (not a <= b).
Return a >= b.  Computed by @total_ordering from (a > b) or (a == b).
Return a <= b.  Computed by @total_ordering from (not a > b).
Return a > b.  Computed by @total_ordering from (a >= b) and (a != b).
Return a < b.  Computed by @total_ordering from (not a >= b).
Create a class object dynamically using the appropriate metaclass.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/types.py
3.so
Resolve MRO entries dynamically as specified by PEP 560.
Issue a warning, or maybe ignore it or raise an exception.
Find the next frame that doesn't involve Python or user internals.
Expected first argument to be an integer, a callable, or None
lru_cache.<locals>.decorating_function.<locals>.<lambda>
Simple lightweight unbounded cache.  Sometimes called "memoize".
singledispatch.<locals>._is_valid_dispatch_type.<locals>.<genexpr>
Cannot assign the same cached_property to two different names (
Cannot use cached_property instance without calling __set_name__ on it.
Signal whether the frame is an internal CPython implementation detail.
Create new instance of CacheInfo(hits, misses, maxsize, currsize)
ons__'
{name!r} is deprecated and slated for removal in Python {remove}
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
Calculates the method resolution order for a given class *cls*.
    Includes relevant abstract base classes (with their respective bases) from
    the *types* iterable. Uses a modified C3 linearization algorithm.
    
singledispatchmethod.__isabstractmethod__
 instance does not support item assignment for caching 
(hits=%r, misses=%r, maxsize=%r, currsize=%r)
Make a new CacheInfo object from a sequence or iterable
CacheInfo(hits, misses, maxsize, currsize)
Convert regular generator function to a coroutine.
cached_property.__get__
6<B2
5<C1
bJmG1
_functools
spec_for_types
_cell_factory
__orig_bases__
resolve_bases
prepare_class
exec_body
resolved_bases
new_class
new_bases
es__
new_base
_calculate_meta
base_meta
get_original_bases
^-Nf
DynamicClassAttribute
overwrite_doc
thod__
unreadable attribute
ownerclass
can't set attribute
can't delete attribute
_GeneratorWrapper
GeneratorType
_GeneratorWrapper.send
_GeneratorWrapper.throw
_GeneratorWrapper.close
C3%f
CoroutineType
CodeType
LambdaType
SimpleNamespace
CellType
AsyncGeneratorType
BuiltinFunctionType
BuiltinMethodType
WrapperDescriptorType
MethodWrapperType
MethodDescriptorType
TracebackType
FrameType
GetSetDescriptorType
S_z=f
MemberDescriptorType
NoneType
NotImplementedType
spec_for__functools
_lru_cache_wrapper
functools
__deepcopy__
functools
KeyWrapper
wrapper
functools
_lru_list_elem
functools
GenericAlias
GenericAlias
namedtuple_CacheInfo
CacheInfo.__new__
CacheInfo._make
CacheInfo._replace
CacheInfo.__repr__
CacheInfo._asdict
GenericAlias
GenericAlias
_formatwarnmsg
  File "
", lineno 
linecache
is_tracing
get_object_traceback
7kd?v
suggest_tracemalloc
_showwarning_orig
_formatwarning_orig
invalid action: 
module must be a string
_add_filter
"	A.
utated
_OptionError
_setoption
_processoptions
invalid lineno 
_getaction
_getcategory
invalid module name: 
_is_internal_filename
_is_filename_to_skip
_is_internal_frame
_next_external_frame
tcsetwinsize
tcgetwinsize
_filters_version
getlines
tion
spec_for_termios
(\3f
_category_name
WarningMessage.__init__
{message : 
, category : 
, filename : 
, lineno : 
, line : 
WarningMessage.__str__
_WARNING_DETAILS
_entered
catch_warnings.__init__
record=True
module=%r
catch_warnings.__repr__
Cannot enter %r twice
_filters
_showwarning
catch_warnings.__exit__
_version
remove_formatted
coroutine '
' was never awaited
format_list
msg_lines
ning
gettotalrefcount
_DEPRECATED_MSG
_warnings_defaults
==============================
partial(func, *args, **keywords) - new function with partial application
    of the given arguments and keywords.
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
Single-dispatch generic method descriptor.
    Supports wrapping existing descriptors and handles non-descriptor
    callables as instance methods.
    
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
Alias for field number 0
aAlias for field number 1
CacheInfo.__getnewargs__
Alias for field number 2
Alias for field number 3
_is_filename_to_skip.<locals>.<genexpr>
-gnu.so
catch_warnings.__enter__
Cannot exit %r without entering first
 was slated for removal after Python 
(e/o
B1000000
B1152000
B1500000
B2000000
B2500000
B3000000
B3500000
B4000000
TCSADRAIN
TCIFLUSH
TCOFLUSH
TCIOFLUSH
VREPRINT
VDISCARD
FIOASYNC
FIONCLEX
FIONREAD
IOCSIZE_MASK
IOCSIZE_SHIFT
TIOCCONS
TIOCEXCL
TIOCGETD
TIOCGICOUNT
TIOCGLCKTRMIOS
TIOCGPGRP
i3/\f
TIOCGSERIAL
28rZ9f
TIOCGSOFTCAR
TIOCGWINSZ
TIOCLINUX
TIOCMBIC
aOcf
TIOCMBIS
TIOCMGET
zo~\
TIOCMIWAIT
TIOCMSET
TIOCM_CAR
TIOCM_CD
TIOCM_CTS
TIOCM_DSR
TIOCM_DTR
9{D%
TIOCM_LE
TIOCM_RI
TIOCM_RNG
TIOCM_RTS
TIOCM_SR
TIOCM_ST
TIOCNOTTY
TIOCNXCL
TIOCOUTQ
TIOCPKT_DATA
TIOCPKT_DOSTOP
TIOCPKT_FLUSHREAD
TIOCPKT_FLUSHWRITE
TIOCPKT_NOSTOP
TIOCPKT_START
TIOCPKT_STOP
TIOCSCTTY
TIOCSERCONFIG
TIOCSERGETLSR
A<ba
TIOCSERGETMULTI
TIOCSERGSTRUCT
TIOCSERGWILD
TIOCSERSETMULTI
TIOCSERSWILD
TIOCSER_TEMT
TIOCSETD
TIOCSLCKTRMIOS
TIOCSPGRP
TIOCSSERIAL
TIOCSSOFTCAR
TIOCSWINSZ
Enter password for session: 
r:;f
EXTB
FIOCLEX
FIONBIO
NCCS
N_MOUSE
N_PPP
N_SLIP
N_STRIP
N_TTY
TCFLSH
TCGETA
TCGETS
TCSBRK
TCSBRKP
TCSETA
TCSETAF
TCSETAW
TCSETS
TCSETSF
TCSETSW
TCXONC
zjIf
TIOCINQ
TIOCPKT
TIOCSTI
adnan
adnan
__subclasses__
__basicsize__
+!`@
__itemsize__
__flags__
__weakrefoffset__
__base__
__text_signature__
ag_running
ag_await
ag_frame
ag_suspended
__alloc__
fer__
capitalize
expandtabs
maketrans
removesuffix
swapcase
maketrans
__self__
cell_contents
__objclass__
__func__
__wrapped__
co_lines
co_positions
_varname_from_oparg
co_lnotab
_co_code_adaptive
conjugate
old_value
cr_origin
uOR^
cr_await
cr_running
cr_frame
cr_suspended
fromkeys
__floor__
__ceil__
is_integer
ratio
__getformat__
eA./i
f_trace_lines
3Mze
f_locals
f_lineno
f_globals
f_builtins
f_trace_opcodes
difference
issubset
issuperset
g12e
symmetric_difference
__closure__
__globals__
__defaults__
__kwdefaults__
gi_yieldfrom
gi_running
gi_frame
gi_suspended
ag_code
center
fromhex
isalpha
isascii
isdigit
islower
3*=f
isspace
istitle
[hWM
isupper
ljust
rindex
A"fg
rjust
title
zfill
/7O+je
cr_code
f_back
f_trace
f_lasti
f_code
union
gi_code
tobytes
tolist
cast
nbytes
ndim
strides
getter
deleter
symbols
nested
indices
Generic
typing
TypeVar
typing
typing
typing
typing
typing
max_exp
min_exp
epsilon
radix
rounds
max_exp
min_exp
epsilon
radix
rounds
derive
errno
reason
err_msg
err_msg
object
MISSING
default
CPython
_git
linux
width
modulus
cutoff
width
modulus
imag
cutoff
atexit
posix
_signal
_codecs
errno
_sre
_thread
time
_typing
_abc
_locale
_stat
marshal
_imp
_ast
_string
_abc
X!?[
_ast
_bisect
_blake2
_bz2
_codecs
_crypt
_csv
_ctypes
_curses
_dbm
P5{d
_gdbm
hBD`tyd
_heapq
_imp
_json
_locale
_lsprof
`M1cfJ|.d
_lzma
_md5
_msi
_opcode
_pickle
_py_abc
_pyio
_pylong
s[yd
_queue
_random
_sha1
_sha2
_sha3
_signal
_socket
_sre
_ssl
_stat
_string
_struct
_thread
_typing
_uuid
#l>a\
_winapi
"f,J*
_wmi
aifc
Base class for warnings about constructs that will change semantically
in the future.
Base class for warnings about features which will be deprecated
in the future.
3.12.9 | packaged by Anaconda, Inc. | (main, Feb  6 2025, 18:56:27) [GCC 11.2.0]
sys.flags
Flags provided through command line arguments or environment vars.
sys.thread_info
A named tuple holding information about the thread implementation.
The base class of the class hierarchy.
When called, it accepts no arguments and returns a new featureless
instance that has no instance attributes and cannot be given any.
map(func, *iterables) --> map object
Make an iterator that computes the function using arguments from
each of the iterables.  Stops when the shortest iterable is exhausted.
Internal error in the Python interpreter.
Please report this to the Python maintainer, along with the traceback,
the Python version, and the hardware/OS platform and version.
X!?[
z$U#q
StringIO(initial_value='', newline='\n')
Text I/O implementation using an in-memory buffer.
The initial_value argument sets the value of object.  The newline
argument is like the one of TextIOWrapper's constructor.
Base class for text I/O.
This class provides a character and line based interface to stream
I/O. There is no readinto method because Python's character strings
are immutable.
waitid_result: Result from waitid.
This object may be accessed either as a tuple of
  (si_pid, si_uid, si_signo, si_status, si_code),
or via the attributes si_pid, si_uid, and so on.
See os.waitid for more information.
Text I/O implementation using an in-memory buffer.
The initial_value argument sets the value of object.  The newline
argument is like the one of TextIOWrapper's constructor.
[A%	
Zp\.
odqM
n1>I"]
n1>I"]
n1>I"]
n1>I"]
typing.TypeVarTuple
typing.ParamSpec
typing.ParamSpecArgs
typing.ParamSpecKwargs
Thread-local dummy
_thread._localdummy
Thread-local data
_thread._ExceptHookArgs
@$6?
_io.IncrementalNewlineDecoder
_io._BytesIOBuffer
_io._BufferedIOBase
Base class for raw binary I/O.
_io.BufferedWriter
_io.BufferedReader
_io.BufferedRWPair
_io.BufferedRandom
_io.TextIOWrapper
posix.waitid_result
os.statvfs_result
posix.sched_param
os.terminal_size
posix.ScandirIterator
posix.times_result
posix.uname_result
@$6?
Base class for raw binary I/O.
time.struct_time
signal.struct_siginfo
itertools.combinations
itertools.batched
itertools.accumulate
itertools.compress
Capsule objects let you wrap a C "void *" pointer in a Python
object.  They're a way of passing data through the Python interpreter
without creating your own custom type.
Capsules are used for communication between extension modules.
They provide a way for an extension module to export a C interface
to other extension modules, so that extension modules can use the
Python import mechanism to link to one another.
range(stop) -> range object
range(start, stop[, step]) -> range object
Return an object that produces a sequence of integers from start (inclusive)
to stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.
start defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.
These are exactly the valid indices for a list of 4 elements.
When step is given, it specifies the increment (or decrement).
str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str
Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.
 as 
tails.
Codec used when reading a file in universal newlines mode.
It wraps another incremental decoder, translating \r\n and \r into \n.
It also records the types of newlines encountered.  When used with
translate=False, it ensures that the newline sequence is returned in
one piece. When used with decoder=None, it expects unicode strings as
decode input and translates newlines without first invoking an external
decoder.
The time value as returned by gmtime(), localtime(), and strptime(), and
 accepted by asctime(), mktime() and strftime().  May be considered as a
 sequence of 9 integers.
 Note that several fields' values are not the same as those defined by
 the C language standard for struct tm.  For example, the value of the
 field tm_year is the actual year, not year - 1900.  See individual
 fields' descriptions for details.
Async context manager for safely finalizing an asynchronously cleaned-up
    resource such as an async generator, calling its ``aclose()`` method.
    Code like this:
        async with aclosing(<module>.fetch(<arguments>)) as agen:
            <block>
    is equivalent to this:
        agen = <module>.fetch(<arguments>)
        try:
            <block>
        finally:
            await agen.aclose()
    
batched(iterable, n)
Batch data into tuples of length n. The last batch may be shorter than n.
Loops over the input iterable and accumulates data into tuples
up to size n.  The input is consumed lazily, just enough to
fill a batch.  The result is yielded as soon as a batch is full
or when the input iterable is exhausted.
    >>> for batch in batched('ABCDEFG', 3):
    ...     print(batch)
    ...
    ('A', 'B', 'C')
    ('D', 'E', 'F')
    ('G',)
islice(iterable, stop) --> islice object
islice(iterable, start, stop[, step]) --> islice object
Return an iterator whose next() method returns selected values from an
iterable.  If start is specified, will skip all preceding elements;
otherwise, start defaults to zero.  Step defaults to one.  If
specified as another value, step determines how many values are
skipped between successive calls.  Works like a slice() on a list
but returns an iterator.
Create a cached callable that wraps another function.
user_function:      the function being cached
maxsize:  0         for no caching
          None      for unlimited cache size
          n         for a bounded cache
typed:    False     cache f(3) and f(3.0) as identical calls
          True      cache f(3) and f(3.0) as distinct calls
cache_info_type:    namedtuple class with the fields:
                        hits misses currsize maxsize
Insert a simple entry into the list of warnings filters (at the front).
    A simple filter matches all modules and messages.
    'action' -- one of "error", "ignore", "always", "default", "module",
                or "once"
    'category' -- a class that the warning must be a subclass of
    'lineno' -- an integer line number, 0 matches all warnings
    'append' -- if true, append to the list of filters
    
The kwargs for a ParamSpec object.
Given a ParamSpec object P, P.kwargs is an instance of ParamSpecKwargs.
ParamSpecKwargs objects have a reference back to their ParamSpec::
    >>> P = ParamSpec("P")
    >>> P.kwargs.__origin__ is P
    True
This type is meant for runtime introspection and has no special meaning
to static type checkers.
bytes(iterable_of_ints) -> bytes
bytes(string, encoding[, errors]) -> bytes
bytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer
bytes(int) -> bytes object of size given by the parameter initialized with null bytes
bytes() -> empty bytes object
Construct an immutable array of bytes from:
  - an iterable yielding integers in range(256)
  - a text string encoded using the specified encoding
  - any object implementing the buffer API.
  - an integer
super() -> same as super(__class__, <first argument>)
super(type) -> unbound super object
super(type, obj) -> bound super object; requires isinstance(obj, type)
super(type, type2) -> bound super object; requires issubclass(type2, type)
Typical use to call a cooperative superclass method:
class C(B):
    def meth(self, arg):
        super().meth(arg)
This works for class methods too:
class C(B):
    @classmethod
    def cmeth(cls, arg):
        super().cmeth(arg)
Base class for buffered IO objects.
The main difference with RawIOBase is that the read() method
supports omitting the size argument, and does not have a default
implementation that defers to readinto().
In addition, read(), readinto() and write() may raise
BlockingIOError if the underlying raw stream is in non-blocking
mode and not ready; unlike their raw counterparts, they will never
return None.
A typical implementation should not inherit from a RawIOBase
implementation, but wrap one.
A lock object is a synchronization primitive.  To create a lock,
call threading.Lock().  Methods are:
acquire() -- lock the lock, possibly blocking until it can be obtained
release() -- unlock of the lock
locked() -- test whether the lock is currently locked
A lock is not owned by the thread that locked it; another thread may
unlock it.  A thread attempting to lock a lock that it has already locked
will block until another thread unlocks it.  Deadlocks may ensue.
zipimporter(archivepath) -> zipimporter object
    Create a new zipimporter instance. 'archivepath' must be a path to
    a zipfile, or to a specific path inside a zipfile. For example, it can be
    '/tmp/myimport.zip', or '/tmp/myimport.zip/mydirectory', if mydirectory is a
    valid directory inside the archive.
    'ZipImportError is raised if 'archivepath' doesn't point to a valid Zip
    archive.
    The 'archive' attribute of zipimporter objects contains the name of the
    zipfile targeted.
    
Base class for buffered IO objects.
The main difference with RawIOBase is that the read() method
supports omitting the size argument, and does not have a default
implementation that defers to readinto().
In addition, read(), readinto() and write() may raise
BlockingIOError if the underlying raw stream is in non-blocking
mode and not ready; unlike their raw counterparts, they will never
return None.
A typical implementation should not inherit from a RawIOBase
implementation, but wrap one.
n1>I"]
;#j3
 0i,
Async context manager for dynamic management of a stack of exit
    callbacks.
    For example:
        async with AsyncExitStack() as stack:
            connections = [await stack.enter_async_context(get_connection())
                for i in range(5)]
            # All opened connections will automatically be released at the
            # end of the async with statement, even if attempts to open a
            # connection later in the list raise an exception.
    
Like dict.update() but add counts instead of replacing them.
        Source can be an iterable, a dictionary, or another Counter instance.
        >>> c = Counter('which')
        >>> c.update('witch')           # add elements from another iterable
        >>> d = Counter('watch')
        >>> c.update(d)                 # add elements from another counter
        >>> c['h']                      # four 'h' in which, witch, and watch
        4
        
zip_longest(iter1 [,iter2 [...]], [fillvalue=None]) --> zip_longest object
Return a zip_longest object whose .__next__() method returns a tuple where
the i-th element comes from the i-th iterable argument.  The .__next__()
method continues until the longest iterable in the argument sequence
is exhausted and then it raises StopIteration.  When the shorter iterables
are exhausted, the fillvalue is substituted in their place.  The fillvalue
defaults to None or can be specified by a keyword argument.
Insert an entry into the list of warnings filters (at the front).
    'action' -- one of "error", "ignore", "always", "default", "module",
                or "once"
    'message' -- a regex that the warning message must match
    'category' -- a class that the warning must be a subclass of
    'module' -- a regex that the module name must match
    'lineno' -- an integer line number, 0 matches all warnings
    'append' -- if true, append to the list of filters
    
rn-pc
Create a code object.  Not for the faint of heart.
Wrapper for potentially out-of-band buffers
A wrapper object implementing __await__ for coroutines.
Represent a PEP 604 union type
E.g. for int | str
Dictionary that remembers insertion order
A combination of multiple unrelated exceptions.
Common base class for all non-exit exceptions.
Import can't find module, or can't find name in module.
Weak ref proxy used after referent went away.
Signal the end from iterator.__anext__().
Signal the end from iterator.__next__().
Inappropriate argument value (of correct type).
Base class for warnings about deprecated features.
Base class for warnings about encodings.
Base class for warnings about resource usage.
Base class for warnings about dubious runtime behavior.
Base class for warnings about dubious syntax.
Base class for warnings generated by user code.
Method or function hasn't been implemented yet.
Local name referenced but not bound to a value.
sys.version_info
Version information as a named tuple.
A simple _ModuleLock equivalent for Python builds without
    multi-threading support.
/home/adnaan/miniconda3/envs/cysa/lib/python312.zip
/usr/local/share:/usr/share:/var/lib/snapd/desktop
._pth
Base class of common code needed by both SourceLoader and
    SourcelessFileLoader.
312.zip
/home/adnaan/miniconda3/envs/cysa/lib/python3.12
/home/adnaan/miniconda3/envs/cysa/bin/python
ndowsApps
/home/adnaan/miniconda3/envs/cysa/bin/python
p/bin
/home/adnaan/miniconda3/envs/cysa/lib/python3.12
SEP'
BytesIO(initial_bytes=b'')
Buffered I/O implementation using an in-memory bytes buffer.
_sysconfigdata__linux_x86_64-linux-gnu.py.orig
t/bin
_sysconfigdata_x86_64_conda_cos6_linux_gnu.py
_sysconfigdata__linux_x86_64-linux-gnu.py
v1.0
_sysconfigdata_x86_64_conda_linux_gnu.py
t/WindowsApps
/	I<
Loader for extension modules.
    The constructor is designed to work with FileFinder.
    
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/io.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/abc.py
Module contains faster C implementation of abc.ABCMeta
Helper class that provides a standard way to create an ABC using
    inheritance.
    
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/os.py
/home/adnaan/miniconda3/envs/cysa/lib/python312.zip
/home/adnaan/miniconda3/envs/cysa/lib/python3.12
/home/adnaan/.local/lib/python3.12/site-packages
xxlimited_35.cpython-312-x86_64-linux-gnu.so
dynload
_codecs_kr.cpython-312-x86_64-linux-gnu.so
_curses_panel.cpython-312-x86_64-linux-gnu.so
_hashlib.cpython-312-x86_64-linux-gnu.so
_elementtree.cpython-312-x86_64-linux-gnu.so
^b;Y
_testclinic.cpython-312-x86_64-linux-gnu.so
_decimal.cpython-312-x86_64-linux-gnu.so
_testimportmultiple.cpython-312-x86_64-linux-gnu.so
_multiprocessing.cpython-312-x86_64-linux-gnu.so
_codecs_iso2022.cpython-312-x86_64-linux-gnu.so
_codecs_hk.cpython-312-x86_64-linux-gnu.so
_posixsubprocess.cpython-312-x86_64-linux-gnu.so
_codecs_tw.cpython-312-x86_64-linux-gnu.so
_codecs_jp.cpython-312-x86_64-linux-gnu.so
_multibytecodec.cpython-312-x86_64-linux-gnu.so
_zoneinfo.cpython-312-x86_64-linux-gnu.so
_asyncio.cpython-312-x86_64-linux-gnu.so
_xxtestfuzz.cpython-312-x86_64-linux-gnu.so
_contextvars.cpython-312-x86_64-linux-gnu.so
readline.cpython-312-x86_64-linux-gnu.so
resource.cpython-312-x86_64-linux-gnu.so
xxsubtype.cpython-312-x86_64-linux-gnu.so
_testmultiphase.cpython-312-x86_64-linux-gnu.so
xxlimited.cpython-312-x86_64-linux-gnu.so
_posixshmem.cpython-312-x86_64-linux-gnu.so
_testinternalcapi.cpython-312-x86_64-linux-gnu.so
_testcapi.cpython-312-x86_64-linux-gnu.so
_sqlite3.cpython-312-x86_64-linux-gnu.so
_ctypes_test.cpython-312-x86_64-linux-gnu.so
_statistics.cpython-312-x86_64-linux-gnu.so
_tkinter.cpython-312-x86_64-linux-gnu.so
ossaudiodev.cpython-312-x86_64-linux-gnu.so
_codecs_cn.cpython-312-x86_64-linux-gnu.so
_testbuffer.cpython-312-x86_64-linux-gnu.so
# @d
unicodedata.cpython-312-x86_64-linux-gnu.so
_xxinterpchannels.cpython-312-x86_64-linux-gnu.so
_datetime.cpython-312-x86_64-linux-gnu.so
{]{d
binascii.cpython-312-x86_64-linux-gnu.so
S/-d
_xxsubinterpreters.cpython-312-x86_64-linux-gnu.so
_testsinglephase.cpython-312-x86_64-linux-gnu.so
_cffi_backend.cpython-312-x86_64-linux-gnu.so
packages
DistutilsMetaFinder.find_spec.<locals>.<lambda>
DistutilsMetaFinder.spec_for_pip.<locals>.<lambda>
DistutilsMetaFinder.pip_imported_during_build
DistutilsMetaFinder.spec_for_sensitive_tests
ib.py
Utilities for with-statement contexts.  See PEP 343.
An abstract base class for context managers.
Return `self` upon entering the runtime context.
Create a new cell object.
  contents
    the contents of the cell. If not specified, the cell will be empty,
    and 
 further attempts to access its cell_contents attribute will
    raise a ValueError.
uname_result: Result from os.uname().
This object may be accessed either as a tuple of
  (sysname, nodename, release, version, machine),
or via the attributes sysname, nodename, release, version, and machine.
See os.uname for more information.
BufferedWriter(raw, buffer_size=DEFAULT_BUFFER_SIZE)
A buffer for a writeable sequential RawIO object.
The constructor creates a BufferedWriter for the given writeable raw
stream. If the buffer_size is not given, it defaults to
DEFAULT_BUFFER_SIZE.
 @[.
A buffered interface to random access streams.
The constructor creates a reader and writer for a seekable stream,
raw, given in the first argument. If the buffer_size is omitted it
defaults to DEFAULT_BUFFER_SIZE.
A decorator indicating abstract properties.
    Deprecated, use 'property' with 'abstractmethod' instead:
        class C(ABC):
            @property
            @abstractmethod
            def my_abstract_property(self):
                ...
    
 Represent `Callable[argtypes, resulttype]`.
    This sets ``__args__`` to a tuple containing the flattened ``argtypes``
    followed by ``resulttype``.
    Example: ``Callable[[int, str], float]`` sets ``__args__`` to
    ``(int, str, float)``.
    
Return a count object whose .__next__() method returns consecutive values.
Equivalent to:
    def count(firstval=0, step=1):
        x = firstval
        while 1:
            yield x
            x += step
Create a complex number from a string or numbers.
If a string is given, parse it as a complex number.
If a single number is given, convert it to a complex number.
If the 'real' or 'imag' arguments are given, create a complex number
with the specified real and imaginary components.
The args for a ParamSpec object.
Given a ParamSpec object P, P.args is an instance of ParamSpecArgs.
ParamSpecArgs objects have a reference back to their ParamSpec::
    >>> P = ParamSpec("P")
    >>> P.args.__origin__ is P
    True
This type is meant for runtime introspection and has no special meaning
to static type checkers.
 Python 'utf-8-sig' Codec
This work similar to UTF-8 with the following changes:
* On encoding/writing a UTF-8 encoded BOM will be prepended/written as the
  first three bytes.
* On decoding/reading if the first three bytes are a UTF-8 encoded BOM, these
  bytes will be skipped.
statvfs_result: Result from statvfs or fstatvfs.
This object may be accessed either as a tuple of
  (bsize, frsize, blocks, bfree, bavail, files, ffree, favail, flag, namemax),
or via the attributes f_bsize, f_frsize, f_blocks, f_bfree, and so on.
See os.statvfs for more information.
Registers a coroutine function with the standard __aexit__ method
        signature.
        Can suppress exceptions the same way __aexit__ method can.
        Also accepts any object with an __aexit__ method (registering a call
        to the method instead of the object itself).
        
Context manager that does no additional processing.
    Used as a stand-in for a normal context manager, when a particular
    block of code is only sometimes used with a normal context manager:
    cm = optional_cm if condition else nullcontext()
    with cm:
        # Perform operation, using optional_cm if condition is True
    
Context manager for temporarily redirecting stdout to another file.
        # How to send help() to stderr
        with redirect_stdout(sys.stderr):
            help(dir)
        # How to write help() to a file
        with open('help.txt', 'w') as f:
            with redirect_stdout(f):
                help(pow)
    
dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, v in iterable:
        d[k] = v
dict(**kwargs) -> new dictionary initialized with the name=value pairs
    in the keyword argument list.  For example:  dict(one=1, two=2)
A buffered reader and writer object together.
A buffered reader object and buffered writer object put together to
form a sequential IO object that can read and write. This is typically
used with a socket or two-way pipe.
reader and writer are RawIOBase objects that are readable and
writeable respectively. If the buffer_size is omitted it defaults to
DEFAULT_BUFFER_SIZE.
Async context manager for safely finalizing an asynchronously cleaned-up
    resource such as an async generator, calling its ``aclose()`` method.
    Code like this:
        async with aclosing(<module>.fetch(<arguments>)) as agen:
            <block>
    is equivalent to this:
        agen = <module>.fetch(<arguments>)
        try:
            <block>
        finally:
            await agen.aclose()
    
Single-dispatch generic function decorator.
    Transforms a function into a generic function, which can have different
    behaviours depending upon the type of its first argument. The decorated
    function acts as the default implementation, and additional
    implementations can be registered using the register() attribute of the
    generic function.
    
Return an enumerate object.
  iterable
    an object supporting iteration
The enumerate object yields pairs containing a count (from start, which
defaults to zero) and a value yielded by the iterable argument.
enumerate is useful for obtaining an indexed list:
    (0, seq[0]), (1, seq[1]), (2, seq[2]), ...
The kwargs for a ParamSpec object.
Given a ParamSpec object P, P.kwargs is an instance of ParamSpecKwargs.
ParamSpecKwargs objects have a reference back to their ParamSpec::
    >>> P = ParamSpec("P")
    >>> P.kwargs.__origin__ is P
    True
This type is meant for runtime introspection and has no special meaning
to static type checkers.
Copyright (c) 2001-2023 Python Software Foundation.
All Rights Reserved.
Copyright (c) 2000 BeOpen.com.
All Rights Reserved.
Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.
Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.
A set is a finite, iterable container.
    This class provides concrete generic implementations of all
    methods except for __contains__, __iter__ and __len__.
    To override the comparisons (presumably for speed, as the
    semantics are fixed), redefine __le__ and __ge__,
    then the other operations will automatically follow suit.
    
Return a recreated instance of self.
        Allows an otherwise one-shot context manager like
        _GeneratorContextManager to support use as
        a decorator via implicit recreation.
        This is a private interface just for _GeneratorContextManager.
        See issue #11647 for details.
        
Context to automatically close something at the end of a block.
    Code like this:
        with closing(<module>.open(<arguments>)) as f:
            <block>
    is equivalent to this:
        f = <module>.open(<arguments>)
        try:
            <block>
        finally:
            f.close()
    
 'da
attrgetter(attr, /, *attrs)
Return a callable object that fetches the given attribute(s) from its operand.
After f = attrgetter('name'), the call f(r) returns r.name.
After g = attrgetter('name', 'date'), the call g(r) returns (r.name, r.date).
After h = attrgetter('name.first', 'name.last'), the call h(r) returns
(r.name.first, r.name.last).
filter(function or None, iterable) --> filter object
Return an iterator yielding those items of iterable for which function(item)
is true. If function is None, return the items that are true.
    An IncrementalEncoder encodes an input in multiple steps. The input can
    be passed piece by piece to the encode() method. The IncrementalEncoder
    remembers the state of the encoding process between calls to encode().
    
A buffer for a writeable sequential RawIO object.
The constructor creates a BufferedWriter for the given writeable raw
stream. If the buffer_size is not given, it defaults to
DEFAULT_BUFFER_SIZE.
    An IncrementalDecoder decodes an input in multiple steps. The input can
    be passed piece by piece to the decode() method. The IncrementalDecoder
    remembers the state of the decoding process between calls to decode().
    
struct_siginfo: Result from sigwaitinfo or sigtimedwait.
This object may be accessed either as a tuple of
(si_signo, si_code, si_errno, si_pid, si_uid, si_status, si_band),
or via the attributes si_signo, si_code, and so on.
A MutableMapping is a generic container for associating
    key/value pairs.
    This class provides concrete generic implementations of all
    methods except for __getitem__, __setitem__, __delitem__,
    __iter__, and __len__.
    
Get the username from the environment or password database.
    First try various environment variables, then the password
    database.  This works on Windows as long as USERNAME is set.
    
Inplace add from another counter, keeping only positive counts.
        >>> c = Counter('abbb')
        >>> c += Counter('bcc')
        >>> c
        Counter({'b': 4, 'c': 2, 'a': 1})
        
Inplace subtract counter, but keep only results with positive counts.
        >>> c = Counter('abbbc')
        >>> c -= Counter('bccd')
        >>> c
        Counter({'b': 2, 'a': 1})
        
Inplace union is the maximum of value from either counter.
        >>> c = Counter('abbb')
        >>> c |= Counter('bcc')
        >>> c
        Counter({'b': 3, 'c': 2, 'a': 1})
        
chain(*iterables) --> chain object
Return a chain object whose .__next__() method returns elements from the
first iterable until it is exhausted, then elements from the next
iterable, until all of the iterables are exhausted.
count(start=0, step=1)
Return a count object whose .__next__() method returns consecutive values.
Equivalent to:
    def count(firstval=0, step=1):
        x = firstval
        while 1:
            yield x
            x += step
Convert a string or number to a floating-point number, if possible.
Create a new memoryview object which references the given object.
Return a reverse iterator over the values of the given sequence.
A interpreter ID identifies a interpreter and may be used as an int.
A simple attribute-based namespace.
SimpleNamespace(**kwargs)
Second argument to a division or modulo operation was zero.
Base class for warnings about probable mistakes in module imports
UnraisableHookArgs
Type used to pass arguments to sys.unraisablehook.
(Extremely) low-level import machinery bits as used by importlib.
ExceptHookArgs
Type used to pass arguments to threading.excepthook.
/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/node
Buffered I/O implementation using an in-memory bytes buffer.
libnvvp
Create a new buffered reader using the given readable raw IO object.
Base file loader class which implements the loader protocol methods that
    require file system usage.
/home/adnaan/workspace/intro_to_cyber_safety/Memory_Dump/vulnerable.py
/run/user/1000/vscode-ipc-a2e93dae-175b-42ff-a3f4-e1be61f2f27a.sock
 object.
A tuple of (columns, lines) for holding terminal window size
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/zipimport.py
2.1/bin
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings
7/libnvvp
dhome/ad/home/adnaan/miniconda3/envs/cysa/lib/python3.12/codecs.py
it__.so
dhome/ad/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/__init__.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/aliases.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/utf_8.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/site.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/_collections_abc.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/stat.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/posixpath.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/genericpath.py
interactive prompt objects for printing the license text, a list of
    contributors and the copyright notice.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/_sitebuiltins.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload
dhome/ad/home/adnaan/miniconda3/envs/cysa/lib/python3.12/../LICENSE.txt
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/site-packages
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/utf_8_sig.py
    Allow selection of distutils by environment variable.
    
	/home/adnaan/miniconda3/envs/cysa/lib/python3.12/../LICENSE
hack.pyc
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/LICENSE.txt
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/LICENSE
DistutilsMetaFinder.spec_for_distutils.<locals>.DistutilsLoader
dhome/ad/home/adnaan/workspace/intro_to_cyber_safety/Memory_Dump
le.py
/home/adnaan/workspace/intro_to_cyber_safety/Memory_Dump/vulnerable.py
DistutilsMetaFinder.pip_imported_during_build.<locals>.<genexpr>
DistutilsMetaFinder.spec_for_sensitive_tests.<locals>.<lambda>
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/getpass.py
3.so
Prompt for password with echo off, using Windows getwch().
pass.py
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/contextlib.py
3.so
Raise any exception triggered within the runtime context.
b.so
tlib.py
#/home/adnaan/miniconda3/envs/cysa/lib/python3.12/warnings.py
3.so
An abstract base class for asynchronous context managers.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/collections
ections.py
#: Enable tracemalloc to get the object allocation traceback
ings.py
Shared functionality for @contextmanager and @asynccontextmanager.
Context manager for temporarily redirecting stderr to another file.
_BaseExitStack._create_cb_wrapper.<locals>._exit_wrapper
Preserve the context stack by transferring it to a new instance.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/keyword.py
3.so
Helper to correctly register callbacks to __exit__ methods.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/termios.pyc
ios.py
AsyncExitStack._create_async_cb_wrapper.<locals>._exit_wrapper
' object does not support the asynchronous context manager protocol
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/termios.py
3.so
AsyncExitStack.__aexit__.<locals>._fix_exception_context
Clear the list of warning filters, so that no filters are active.
warnings.showwarning() must be set to a function or method
Return a new dict which maps field names to their values.
Return series of accumulated sums (or other binary function results).
Counter.fromkeys() is undefined.  Use Counter(iterable) instead.
Like dict.__delitem__() but does not raise KeyError for missing values.
True if all counts agree. Missing counts are treated as zero.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/operator.py
3.so
True if any counts disagree. Missing counts are treated as zero.
True if all counts in self are a subset of those in other.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/reprlib.py
3.so
True if all counts in self are a proper subset of those in other.
True if all counts in self are a superset of those in other.
True if all counts in self are a proper superset of those in other.
Adds an empty counter, effectively stripping negative and zero counts
Internal method to strip elements with a negative or zero count
Create a ChainMap with a single dict created from the iterable.
Redo the builtin repr() (representation) but with limits on most sizes.
A more or less complete user-defined wrapper around list objects.
Decorator to make a repr function return fillvalue for a recursive call
recursive_repr.<locals>.decorating_function.<locals>.wrapper
frozenset() -> empty frozenset object
frozenset(iterable) -> frozenset object
Build an immutable unordered collection of unique elements.
Built-in mutable sequence.
If no argument is given, the constructor creates a new empty list.
The argument must be an iterable if specified.
This module provides primitive operations to write multi-threaded programs.
The 'threading' module provides a more convenient interface.
Base class for text I/O.
This class provides a character and line based interface to stream
I/O. There is no readinto method because Python's character strings
are immutable.
]633;A
\](cysa) (base) \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ \[
]633;B
Base class for text I/O.
This class provides a character and line based interface to stream
I/O. There is no readinto method because Python's character strings
are immutable.
Initialize an ordered dictionary.  The signature is the same as
        regular dictionaries.  Keyword argument order is preserved.
        
"A)H&
1'H&
:)H#
&6I 
Return successive r-length permutations of elements in the iterable.
permutations(range(3), 2) --> (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)
Initialize a ChainMap by setting *maps* to the given mappings.
        If no mappings are provided, a single empty dictionary is used.
        
type object 'types.GenericAlias' has no attribute '__annotations__'
bit_length
bit_count
numerator
denominator
toreadonly
ffer__
_from_flags
itemsize
suboffsets
c_contiguous
f_contiguous
contiguous
varnames
d*7e
children
intersection_update
__thisclass__
__self_class__
isdecimal
isnumeric
isidentifier
isprintable
format_map
maketrans
PH\%
__unpacked__
__callback__
k]qe
__value__
Create a module object.
The name must be a string; the optional doc argument can have any type.
TracebackType(tb_next, tb_frame, tb_lasti, tb_lineno)
Create a new traceback object.
Base class for warnings about Unicode related problems, mostly
related to conversion problems.
hash_info
A named tuple providing parameters used for computing
hashes. The attributes are read only.
Meta path import for frozen modules.
    All methods are either class or static methods to avoid the need to
    instantiate the class.
    
/home/adnaan/.vscode-server/extensions/ms-python.debugpy-2025.4.1-linux-x64/bundled/libs/debugpy
/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/extensions/git/dist/askpass.sh
/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/extensions/git/dist/askpass-main.js
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/__pycache__/__init__.cpython-312.pyc
Currently has only one field: sched_priority
  sched_priority
    A scheduling parameter.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/__pycache__/aliases.cpython-312.pyc
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/__pycache__/utf_8.cpython-312.pyc
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/encodings/__pycache__/utf_8_sig.cpython-312.pyc
All the operations on a read-only sequence.
    Concrete subclasses must override __new__ or __init__,
    __getitem__, and __len__.
    
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/collections/__pycache__/__init__.cpython-312.pyc
pairwise(iterable, /)
Return an iterator of overlapping pairs taken from the input iterator.
    s -> (s0,s1), (s1,s2), (s2, s3), ...
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/site-packages/_distutils_hack/__init__.py
3.so
Return elements from the iterable until it is exhausted. Then repeat the sequence indefinitely.
takewhile(predicate, iterable, /)
Return successive entries from an iterable as long as the predicate evaluates to true for each entry.
Registers an arbitrary callback and arguments.
        Cannot suppress exceptions.
        
u.so
Registers an arbitrary coroutine function and arguments.
        Cannot suppress exceptions.
        
Return successive entries from an iterable as long as the predicate evaluates to true for each entry.
teedataobject(iterable, values, next, /)
Data container common to multiple tee objects.
rrsize))
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
set() -> new empty set object
set(iterable) -> new set object
Build an unordered collection of unique elements.
slice(stop)
slice(start, stop[, step])
Create a slice object.  This is used for extended slicing (e.g. a[0:10:2]).
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
asyncgen_hooks
A named tuple providing information about asynchronous
generators hooks.  The attributes are read only.
_warnings provides basic warning filtering support.
It is a helper module to speed up interpreter start-up.
Meta path import for built-in modules.
    All methods are either class or static methods to avoid the need to
    instantiate the class.
    
Built-in immutable sequence.
If no argument is given, the constructor returns an empty tuple.
If iterable is specified the tuple is initialized from iterable's items.
If the argument is a tuple, the return value is the same object.
statvfs_result: Result from statvfs or fstatvfs.
This object may be accessed either as a tuple of
  (bsize, frsize, blocks, bfree, bavail, files, ffree, favail, flag, namemax),
or via the attributes f_bsize, f_frsize, f_blocks, f_bfree, and so on.
See os.statvfs for more information.
uname_result: Result from os.uname().
This object may be accessed either as a tuple of
  (sysname, nodename, release, version, machine),
or via the attributes sysname, nodename, release, version, and machine.
See os.uname for more information.
Reliance on distutils from stdlib is deprecated. Users must rely on setuptools to provide the distutils module. Avoid importing distutils or import setuptools first, and avoid setting SETUPTOOLS_USE_DISTUTILS=stdlib. Register concerns at 
Specify whether to record warnings and if an alternative module
        should be used other than sys.modules['warnings'].
        For compatibility with Python 3.0, please consider all arguments to be
        keyword-only.
        
combinations_with_replacement(iterable, r)
Return successive r-length combinations of elements in the iterable allowing individual elements to have successive repeats.
combinations_with_replacement('ABC', 2) --> ('A','A'), ('A','B'), ('A','C'), ('B','B'), ('B','C'), ('C','C')
List the n most common elements and their counts from the most
        common to the least.  If n is None, then list all element counts.
        >>> Counter('abracadabra').most_common(3)
        [('a', 5), ('b', 2), ('r', 2)]
        
Return successive r-length combinations of elements in the iterable allowing individual elements to have successive repeats.
combinations_with_replacement('ABC', 2) --> ('A','A'), ('A','B'), ('A','C'), ('B','B'), ('B','C'), ('C','C')
bool(x) -> bool
Returns True when the argument x is true, False otherwise.
The builtins True and False are the only two instances of the class bool.
The class bool is a subclass of the class int, and cannot be subclassed.
sys.float_info
A named tuple holding information about the float type. It contains low level
information about the precision and internal representation. Please study
your system's :file:`float.h` for more information.
times_result: Result from os.times().
This object may be accessed either as a tuple of
  (user, system, children_user, children_system, elapsed),
or via the attributes user, system, children_user, children_system,
and elapsed.
See os.times for more information.
BufferedRandom(raw, buffer_size=DEFAULT_BUFFER_SIZE)
A buffered interface to random access streams.
The constructor creates a reader and writer for a seekable stream,
raw, given in the first argument. If the buffer_size is omitted it
defaults to DEFAULT_BUFFER_SIZE.
waitid_result: Result from waitid.
This object may be accessed either as a tuple of
  (si_pid, si_uid, si_signo, si_status, si_code),
or via the attributes si_pid, si_uid, and so on.
See os.waitid for more information.
 StreamReaderWriter instances allow wrapping streams which
        work in both read and write modes.
        The design is such that one can use the factory functions
        returned by the codec.lookup() function to construct the
        instance.
    
A decorator indicating abstract classmethods.
    Deprecated, use 'classmethod' with 'abstractmethod' instead:
        class C(ABC):
            @classmethod
            @abstractmethod
            def my_abstract_classmethod(cls, ...):
                ...
    
struct_siginfo: Result from sigwaitinfo or sigtimedwait.
This object may be accessed either as a tuple of
(si_signo, si_code, si_errno, si_pid, si_uid, si_status, si_band),
or via the attributes si_signo, si_code, and so on.
A decorator indicating abstract staticmethods.
    Deprecated, use 'staticmethod' with 'abstractmethod' instead:
        class C(ABC):
            @staticmethod
            @abstractmethod
            def my_abstract_staticmethod(...):
                ...
    
#	D$
chain(*iterables) --> chain object
Return a chain object whose .__next__() method returns elements from the
first iterable until it is exhausted, then elements from the next
iterable, until all of the iterables are exhausted.
Afte
methodcaller(name, /, *args, **kwargs)
Return a callable object that calls the given method on its operand.
After f = methodcaller('name'), the call f(r) returns r.name().
After g = methodcaller('name', 'date', foo=1), the call g(r) returns
r.name('date', foo=1).
oo=1).
Return a callable object that calls the given method on its operand.
After f = methodcaller('name'), the call f(r) returns r.name().
After g = methodcaller('name', 'date', foo=1), the call g(r) returns
r.name('date', foo=1).
move_to_end
__covariant__
__contravariant__
__infer_variance__
__bound__
{.RK
__constraints__
TypeVarTuple
ParamSpec
ParamSpecArgs
ParamSpecKwargs
bits_per_digit
sizeof_digit
default_max_str_digits
bits_per_digit
sizeof_digit
default_max_str_digits
;gaWFf
__match_args__
max_10_exp
min_10_exp
mant_dig
max_10_exp
ields
min_10_exp
mant_dig
add_note
eback
__suppress_context__
__traceback__
__context__
__cause__
n("(Ke
subgroup
etitem__
.L(P
exceptions
Assertion failed.
Attribute not found.
Buffer error.
Out of memory.
ZR.e
strerror
filename2
characters_written
Invalid syntax.
Child process error.
Connection error.
File already exists.
File not found.
Interrupted by signal.
Not enough permissions.
Process not found.
Timeout expired.
Improper indentation.
Mapping key not found.
Module not found.
Unicode related error.
Broken pipe.
Connection aborted.
Connection refused.
Connection reset.
Unicode decoding error.
Unicode encoding error.
typing.Generic
typing.TypeVar
_thread.lock
_thread.RLock
_thread._local
posix.DirEntry
os.stat_result
_io._IOBase
_io._TextIOBase
_io._RawIOBase
_io.BytesIO
_io.FileIO
_io.StringIO
_abc._abc_data
itertools.chain
itertools.count
itertools.cycle
itertools._tee
str_digits_check_threshold
str_digits_check_threshold
Common base class for all exceptions
Request that a generator exit.
Program interrupted by user.
Request to exit from the interpreter.
Base class for arithmetic errors.
Read beyond end of file.
Base class for lookup errors.
Name not found globally.
Base class for I/O related errors.
Unspecified run-time error.
Inappropriate argument type.
Base class for warning categories.
Floating-point operation failed.
Result too large to be represented.
The args for a ParamSpec object.
Given a ParamSpec object P, P.args is an instance of ParamSpecArgs.
ParamSpecArgs objects have a reference back to their ParamSpec::
    >>> P = ParamSpec("P")
    >>> P.args.__origin__ is P
    True
This type is meant for runtime introspection and has no special meaning
to static type checkers.
Context manager that does no additional processing.
    Used as a stand-in for a normal context manager, when a particular
    block of code is only sometimes used with a normal context manager:
    cm = optional_cm if condition else nullcontext()
    with cm:
        # Perform operation, using optional_cm if condition is True
    
Z	d	
    Return a callable object that fetches the given attribute(s) from its operand.
    After f = attrgetter('name'), the call f(r) returns r.name.
    After g = attrgetter('name', 'date'), the call g(r) returns (r.name, r.date).
    After h = attrgetter('name.first', 'name.last'), the call h(r) returns
    (r.name.first, r.name.last).
    
Operator interface.
This module exports a set of functions implemented in C corresponding
to the intrinsic operators of Python.  For example, operator.add(x, y)
is equivalent to the expression x+y.  The function names are those
used for special methods; variants without leading and trailing
'__' are also provided for convenience.
defaultdict(default_factory=None, /, [...]) --> dict with default factory
The default factory is called without arguments to produce
a new value when a key is not present, in __getitem__ only.
A defaultdict compares equal to a dict with the same items.
All remaining arguments are treated the same as if they were
passed to the dict constructor, including keyword arguments.
sys.int_info
A named tuple that holds information about Python's
internal representation of integers.  The attributes are read only.
Base class for warnings about bytes and buffer related problems, mostly
related to conversion from str or comparing to str.
A recursive lock implementation which is able to detect deadlocks
    (e.g. thread 1 trying to take locks A then B, and thread 2 trying to
    take locks B then A).
    
/home/adnaan/.vscode-server/extensions/ms-python.debugpy-2025.4.1-linux-x64/.noConfigDebugAdapterEndpoints/endpoint-bb967eb7dffe2fd0.txt
File-based finder.
    Interactions with the file system are cached for performance, being
    refreshed when the directory the finder is handling has been modified.
    
    This subclass of IncrementalDecoder can be used as the baseclass for an
    incremental decoder if the decoder must be able to handle incomplete
    byte sequences.
    
 Python 'utf-8' Codec
Written by Marc-Andre Lemburg (mal@lemburg.com).
(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.
All the operations on a read-write sequence.
    Concrete subclasses must provide __new__ or __init__,
    __getitem__, __setitem__, __delitem__, __len__, and insert().
    
combinations(iterable, r)
Return successive r-length combinations of elements in the iterable.
combinations(range(4), 3) --> (0,1,2), (0,1,3), (0,2,3), (1,2,3)
dropwhile(predicate, iterable, /)
Drop items from the iterable while predicate(item) is true.
Afterwards, return every element until the iterable is exhausted.
, (1,2,3)
Add counts from two counters.
        >>> Counter('abbb') + Counter('bcc')
        Counter({'b': 4, 'c': 2, 'a': 1})
        
 Intersection is the minimum of corresponding counts.
        >>> Counter('abbb') & Counter('bcc')
        Counter({'b': 1})
        
Subtracts from an empty counter.  Strips positive and zero counts,
        and flips the sign on negative counts.
        
Return successive r-length combinations of elements in the iterable.
combinations(range(4), 3) --> (0,1,2), (0,1,3), (0,2,3), (1,2,3)
permutations(iterable, r=None)
Return successive r-length permutations of elements in the iterable.
permutations(range(3), 2) --> (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)
Drop items from the iterable while predicate(item) is true.
Afterwards, return every element until the iterable is exhausted.
Return those items of iterable for which function(item) is false.
If function is None, return the items that are false.
starmap(function, iterable, /)
Return an iterator whose values are returned from the function evaluated with an argument tuple taken from the given sequence.
Return an iterator whose values are returned from the function evaluated with an argument tuple taken from the given sequence.
Merges MROs in *sequences* to a single MRO using the C3 algorithm.
    Adapted from https://docs.python.org/3/howto/mro.html.
    
generic_func.register(cls, func) -> func
        Registers a new implementation for the given *cls* on a *generic_func*.
        
generic_method.register(cls, func) -> func
        Registers a new implementation for the given *cls* on a *generic_method*.
        
metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases
Built-in functions, types, exceptions, and other objects.
This module provides direct access to all 'built-in'
identifiers of Python; for example, builtins.len is
the full name for the built-in function len().
This module is not normally accessed explicitly by most
applications, but can be useful in modules that provide
objects with the same name as a built-in value, but in
which the built-in of that name is also needed.
A lock object is a synchronization primitive.  To create a lock,
call threading.Lock().  Methods are:
acquire() -- lock the lock, possibly blocking until it can be obtained
release() -- unlock of the lock
locked() -- test whether the lock is currently locked
A lock is not owned by the thread that locked it; another thread may
unlock it.  A thread attempting to lock a lock that it has already locked
will block until another thread unlocks it.  Deadlocks may ensue.
Async context manager for dynamic management of a stack of exit
    callbacks.
    For example:
        async with AsyncExitStack() as stack:
            connections = [await stack.enter_async_context(get_connection())
                for i in range(5)]
            # All opened connections will automatically be released at the
            # end of the async with statement, even if attempts to open a
            # connection later in the list raise an exception.
    
r\t	
Batch data into tuples of length n. The last batch may be shorter than n.
Loops over the input iterable and accumulates data into tuples
up to size n.  The input is consumed lazily, just enough to
fill a batch.  The result is yielded as soon as a batch is full
or when the input iterable is exhausted.
    >>> for batch in batched('ABCDEFG', 3):
    ...     print(batch)
    ...
    ('A', 'B', 'C')
    ('D', 'E', 'F')
    ('G',)
I/O operation would block.
Operation doesn't work on directories.
Operation only works on directories.
Sequence index out of range.
Recursion limit exceeded.
Improper mixture of spaces and tabs.
Unicode translation error.
set_coroutine_origin_tracking_depth
get_coroutine_origin_tracking_depth
activate_stack_trampoline
deactivate_stack_trampoline
is_stack_trampoline_active
zWzd
_frozen_importlib_external
exc_type
_fields
exc_value
exc_traceback
addaudithook
breakpointhook
_clear_type_cache
_current_frames
_current_exceptions
getdefaultencoding
getdlopenflags
getallocatedblocks
getunicodeinternedsize
getrefcount
mencoding
getrecursionlimit
getsizeof
1)d!
_getframe
_getframemodulename
is_finalizing
setswitchinterval
0Fs'
getswitchinterval
setdlopenflags
setprofile
_setprofileallthreads
.X	Ge
getprofile
setrecursionlimit
settrace
_settraceallthreads
gettrace
call_tracing
l>1[
_debugmallocstats
set_asyncgen_hooks
get_asyncgen_hooks
get_int_max_str_digits
set_int_max_str_digits
weaof
__stderr__
__displayhook__
__excepthook__
__breakpointhook__
__unraisablehook__
hexversion
=JE<f
api_version
float_info
int_info
?Ft&e
algorithm
hash_bits
*<nO
seed_bits
algorithm
fields
hash_bits
seed_bits
siphash13
gs__
hash_info
maxunicode
faulthandler
_tracemalloc
itertools
_collections
_weakref
_functools
_operator
_symtable
_tokenize
builtins
_warnings
z$U#q
__future__
ule_names
_aix_support
_asyncio
_codecs_cn
_codecs_hk
_codecs_iso2022
_codecs_jp
_codecs_kr
_codecs_tw
-y*d
_collections
_collections_abc
_compat_pickle
_compression
_contextvars
_curses_panel
_datetime
_decimal
_elementtree
_frozen_importlib
bJmG1
_functools
_hashlib
_markupbase
_multibytecodec
_multiprocessing
.nfmd
_operator
_osx_support
_overlapped
_posixshmem
_posixsubprocess
_pydatetime
_pydecimal
_scproxy
_sitebuiltins
A>{d
_sqlite3
_statistics
_strptime
_symtable
_threading_local
_tkinter
_tokenize
_tracemalloc
_warnings
_weakref
_weakrefset
_zoneinfo
antigravity
argparse
binascii
builtins
}Q+UD
cProfile
calendar
collections
colorsys
compileall
concurrent
configparser
contextlib
contextvars
dataclasses
datetime
encodings
ensurepip
faulthandler
fileinput
fractions
functools
genericpath
graphlib
#7Ox
importlib
ipaddress
itertools
linecache
mimetypes
Y*pd
modulefinder
multiprocessing
nturl2path
operator
optparse
ossaudiodev
pickletools
platform
plistlib
posixpath
py_compile
pydoc_data
readline
1RC-
resource
rlcompleter
selectors
mqF;
socketserver
sre_compile
sre_constants
sre_parse
statistics
stringprep
subprocess
symtable
sysconfig
tabnanny
telnetlib
tempfile
textwrap
threading
tokenize
traceback
tracemalloc
turtledemo
unicodedata
unittest
warnings
webbrowser
winsound
c-rQd
zipimport
zoneinfo
6Nw.>f
stdlib_module_names
abiflags
Ly]e
releaselevel
releaselevel
cpython-312
x86_64-linux-gnu
_multiarch
interactive
g1/""Rf
bytes_warning
hash_randomization
dev_mode
utf8_mode
warn_default_encoding
safe_path
int_max_str_digits
interactive
elds
optimize
dont_write_bytecode
no_user_site
ignore_environment
bytes_warning
hash_randomization
isolated
dev_mode
utf8_mode
warn_default_encoding
safe_path
int_max_str_digits
float_repr_style
array
asyncio
atexit
audioop
base64
bisect
cgitb
chunk
cmath
code
codecs
codeop
copy
~byd
copyreg
crypt
J><d
ctypes
~8H 
curses
decimal
difflib
doctest
email
enum
errno
fcntl
filecmp
fnmatch
n5I<aI
ftplib
pMV[
getopt
getpass
H:9D
gettext
glob
gzip
hashlib
heapq
hmac
html
http
idlelib
.3.M
imaplib
imghdr
inspect
json
keyword
lib2to3
locale
logging
lzma
mailbox
8ES?
mailcap
marshal
math
mmap
msilib
X??Cv6
msvcrt
mN*[`	
netrc
nntplib
ntpath
numbers
opcode
pathlib
pickle
pipes
pkgutil
><vd
poplib
posix
S]hd
pprint
profile
pstats
,Didc
pyclbr
pydoc
pyexpat
queue
quopri
random
xd>_
reprlib
runpy
sched
}XGMU
secrets
select
shelve
shlex
shutil
signal
q]/(
site
smtplib
sndhdr
socket
spwd
sqlite3
stat
string
struct
sunau
syslog
tarfile
termios
this
time
timeit
tkinter
token
tomllib
trace
turtle
types
typing
urllib
=]@d
uuid
venv
wave
weakref
winreg
wsgiref
xdrlib
xmlrpc
zipapp
zipfile
zlib
little
R)Fwg
major
minor
micro
k5(He
serial
major
minor
micro
serial
final
cpython
version
debug
inspect
quiet
debug
inspect
no_site
verbose
quiet
short
name
lock
version
pthread
H8do
DISABLE
MISSING
events
CALL
LINE
,xLe
JUMP
BRANCH
RAISE
RERAISE
C_RAISE
divmod
eval
aiter
anext
round
None
complex
filter
float
slice
Warning
IOError
Context manager for the import lock.
_imp
_imp
default
name
name
_count
lock
locked
_thread
RLock
_thread
_thread
_local
_thread
_local
thread
_thread
thread
name
name
name
name
SgPU
proxy
fchmod
ttyname
name
config
python
python
[A%	d
test
dump
name
name
name
os_name
DELIM
VPATH
isxfile
library
had_equ
pth_dir
PREFIX
EnumKey
name
name
load
_IOBase
detach
semaphore
NPTL 2.35
thread_info
firstiter
9j.)
finalizer
firstiter
finalizer
sys.monitoring
use_tool_id
free_tool_id
get_tool
7n$e
register_callback
get_events
set_events
get_local_events
set_local_events
restart_events
_all_events
PY_START
;H7e
PY_RESUME
PY_RETURN
PY_YIELD
INSTRUCTION
STOP_ITERATION
EXCEPTION_HANDLED
PY_UNWIND
PY_THROW
C_RETURN
NO_EVENTS
DEBUGGER_ID
COVERAGE_ID
PROFILER_ID
OPTIMIZER_ID
monitoring
builtins
su]Fe
breakpoint
ss__
IdcE
issubclass
__debug__
BaseException
BaseExceptionGroup
KeyboardInterrupt
ArithmeticError
AssertionError
BufferError
MemoryError
NameError
\XBf
ReferenceError
SyntaxError
tion
FloatingPointError
OverflowError
ZeroDivisionError
EncodingWarning
FutureWarning
ResourceWarning
SyntaxWarning
UnicodeWarning
UserWarning
ChildProcessError
ConnectionError
InterruptedError
IsADirectoryError
ProcessLookupError
TimeoutError
IndentationError
RecursionError
rror
UnboundLocalError
UnicodeError
BrokenPipeError
ConnectionAbortedError
EeR y
ConnectionRefusedError
ConnectionResetError
TabError
UnicodeEncodeError
UnicodeTranslateError
builtins
ExceptionGroup
ExceptionGroup
EnvironmentError
A context manager responsible to updating ``_blocking_on``.
No module named {!r}
importlib._bootstrap
lock_held
suffixes
init_frozen
_frozen_module_names
normalize_encoding
start_new_thread
start_new
daemon_threads_allowed
allocate
lock
jNbT
exit_thread
interrupt_main
get_native_id
stack_size
_set_sentinel
_excepthook
_is_main_interpreter
locked_lock
_at_fork_reinit
LockType
^vEhRe
_is_owned
_acquire_restore
_release_save
_recursion_count
_localdummy
Thread-local dummy
_ExceptHookArgs
Thread-local data
exc_type
_fields
exc_value
exc_traceback
_ExceptHookArgs
TIMEOUT_MAX
<interpreter trampoline>
PendingDeprecationWarning
_override_frozen_modules_for_tests
s_check
ExceptHookArgs
Type used to pass arguments to threading.excepthook.
Weak-reference support module.
/home/adnaan/miniconda3/envs/cysa
/home/adnaan/miniconda3/envs/cysa
/home/adnaan/miniconda3/envs/cysa
 file
ENV_CONDA_PY_ALLOW_REG_PATHS
6/work
a/bin
a/bin
/home/adnaan/miniconda3/envs/cysa
Memory_Dump/vulnerable.py
 One Agent
Memory_Dump/vulnerable.py
_install_external_importers
.cpython-312-x86_64-linux-gnu.so
importlib._bootstrap_external
.cpython-312-x86_64-linux-gnu.so
gent
IncrementalNewlineDecoder
gent
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/importlib/_bootstrap_external.py
e-cli
BufferedReader(raw, buffer_size=DEFAULT_BUFFER_SIZE)
Create a new buffered reader using the given readable raw IO object.
sched_param(sched_priority)
Currently has only one field: sched_priority
  sched_priority
    A scheduling parameter.
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/__pycache__/getpass.cpython-312.pyc
nce.pth
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/site-packages/_distutils_hack
stat_result: Result from stat, fstat, or lstat.
This object may be accessed either as a tuple of
  (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime)
or via the attributes st_mode, st_ino, st_dev, st_nlink, st_uid, and so on.
Posix/windows: If your platform supports st_blksize, st_blocks, st_rdev,
or st_flags, they are available as attributes only.
See os.stat for more information.
 Normalize an encoding name.
        Normalization works as follows: all non-alphanumeric
        characters except the dot used for Python package names are
        collapsed and replaced with a single underscore, e.g. '  -;#'
        becomes '_'. Leading and trailing underscores are removed.
        Note that encoding names should be ASCII only.
    
A mutable set is a finite, iterable container.
    This class provides concrete generic implementations of all
    methods except for __contains__, __iter__, __len__,
    add(), and discard().
    To override the comparisons (presumably for speed, as the
    semantics are fixed), all you have to do is redefine __le__ and
    then the other operations will automatically follow suit.
    
warn_explicit
_filters_mutated
_onceregistry
_defaultaction
getweakrefcount
getweakrefs
_weakref
ReferenceType
ProxyType
CallableProxyType
_config_init
u#YJ
use_environment
install_signal_handlers
use_hash_seed
hash_seed
faulthandler
tracemalloc
$Jjj
perf_profiling
import_time
code_debug_ranges
show_ref_count
dump_refs
malloc_stats
filesystem_encoding
sched_setparam
filesystem_errors
program_name
parse_argv
xoptions
pythonpath_env
module_search_paths_set
module_search_paths
stdlib_dir
base_executable
base_prefix
base_exec_prefix
site_import
optimization_level
parser_debug
write_bytecode
user_site_directory
configure_c_stdio
tIrO
buffered_stdio
stdio_encoding
x!iI
sched_rr_get_interval
stdio_errors
skip_source_first_line
run_command
run_filename
_install_importlib
check_hash_pycs_mode
pathconfig_warnings
_init_main
g+2f
orig_argv
use_frozen_modules
_is_python_build
riL4e
sched_getscheduler
sched_getparam
ocal
ocal
posix_spawnp
Ret&
posix_spawn
joinpath
.abi3.so
Jpw2f
landmarks
$6Jf
search_up
library_dir
.abi3.so
platstdlib_dir
PLATLIBDIR
BUILDDIR_TXT
BUILD_LANDMARK
VERSION_MAJOR
DEFAULT_PROGRAM_NAME
VERSION_MINOR
STDLIB_SUBDIR
STDLIB_LANDMARKS
PLATSTDLIB_LANDMARK
BUILDSTDLIB_LANDMARKS
VENV_LANDMARK
ZIP_LANDMARK
PYDEBUGEXT
PYWINVER
WINREG_KEY
ENV_PYTHONPATH
pythonpath
pythonpath_was_set
real_executable_dir
O(gf
program_name_was_set
EXE_SUFFIX
iQhf
hassuffix
py_setpath
real_executable
ENV_PATH
executable_dir
ENV_PYTHONEXECUTABLE
ENV___PYVENV_LAUNCHER__
,Nr\
WITH_NEXT_FRAMEWORK
home_was_set
ENV_PYTHONHOME
venv_prefix
venv_prefix2
pyvenvcfg
base_exe
Error
candidate
build_prefix
build_stdlib_prefix
Q	e3
had_delim
EXEC_PREFIX
OpenKeyEx
_MACHINE
CloseKey
PYTHONPATH
sched_get_priority_min
register_at_fork
S<=RG
sched_get_priority_max
setpriority
312.zip
leo&
getpriority
UnsupportedOperation
_BytesIOBuffer
S\?J
_BytesIOBuffer
_checkClosed
_checkSeekable
_checkReadable
_checkWritable
system32
_TextIOBase
_BufferedIOBase
_RawIOBase
Base
 w_(e
getbuffer
getvalue
BufferedWriter
BufferedReader
BufferedRWPair
BufferedRandom
StringIO
TextIOWrapper
reconfigure
sched_yield
sched_setscheduler
_CHUNK_SIZE
sched_setaffinity
sched_getaffinity
login_tty
getgrouplist
getgroups
getlogin
setreuid
IncrementalNewlineDecoder(decoder, translate, errors='strict')
Codec used when reading a file in universal newlines mode.
It wraps another incremental decoder, translating \r\n and \r into \n.
It also records the types of newlines encountered.  When used with
translate=False, it ensures that the newline sequence is returned in
one piece. When used with decoder=None, it expects unicode strings as
decode input and translates newlines without first invoking an external
decoder.
 A ChainMap groups multiple dicts (or other mappings) together
    to create a single, updateable view.
    The underlying mappings are stored in a list.  That list is public and can
    be accessed or updated using the *maps* attribute.  There is no other
    state.
    Lookups search the underlying mappings successively until a key is found.
    In contrast, writes, updates, and deletions only operate on the first
    mapping.
    
ator.
islice(iterable, stop) --> islice object
islice(iterable, start, stop[, step]) --> islice object
Return an iterator whose next() method returns selected values from an
iterable.  If start is specified, will skip all preceding elements;
otherwise, start defaults to zero.  Step defaults to one.  If
specified as another value, step determines how many values are
skipped between successive calls.  Works like a slice() on a list
but returns an iterator.
    
Create a cached callable that wraps another function.
user_function:      the function being cached
maxsize:  0         for no caching
          None      for unlimited cache size
          n         for a bounded cache
typed:    False     cache f(3) and f(3.0) as identical calls
          True      cache f(3) and f(3.0) as distinct calls
cache_info_type:    namedtuple class with the fields:
                        hits misses currsize maxsize
This module provides an interface to the Posix calls for tty I/O control.
For a complete description of these calls, see the Posix or Unix manual
pages. It is only available for those Unix versions that support Posix
termios style tty I/O control.
All functions in this module take a file descriptor fd as their first
argument. This can be an integer file descriptor, such as returned by
sys.stdin.fileno(), or a file object, such as sys.stdin itself.
Base class for raw binary I/O.
BytesIO
FileIO
fchown
o5j.+~
chroot
ctermid
nice
splice
system
umask
uname
openpty
forkpty
getpid
getpgrp
getppid
kill
killpg
setuid
seteuid
setgid
setegid
getpgid
setpgrp
wait3
wait4
waitid
getsid
setpgid
dup2
lockf
lseek
readv
pread
preadv
writev
pwrite
pwritev
z%Mcb[
pipe
pipe2
makedev
fchdir
fsync
sync
confstr
@ol_4/e
sysconf
abort
urandom
eventfd
setns
unshare
~lSHELL
/bin/bash
COLORTERM
truecolor
1.98.2
s'CONDA_EXE
WSL_DISTRO_NAME
Ubuntu
NAME
adnaanvictus
F;]jQ'PWD
N.fLOGNAME
adnaan
CONDA_ROOT
CONDA_PREFIX
}nVoHOME
/home/adnaan
LANG
C.UTF-8
^!yWSL_INTEROP
t#LS_COLORS
]WAYLAND_DISPLAY
wayland-0
(cysa) 
dGIT_ASKPASS
6^3LESSCLOSE
TERM
xterm-256color
LESSOPEN
'>rNUSER
adnaan
CONDA_SHLVL
DISPLAY
SHLVL
XDG_RUNTIME_DIR
/run/user/1000/
cysa
WSLENV
XDG_DATA_DIRS
PATH
tHOSTTYPE
x86_64
CONDA_PREFIX_1
]WCONDA_PREFIX_2
PULSE_SERVER
\@TERM_PROGRAM
vscode
F_OK
R_OK
W_OK
X_OK
TMP_MAX
WNOHANG
"$Kf
O_RDWR
O_DSYNC
O_RSYNC
O_SYNC
3]sf
O_TRUNC
O_PATH
	?Pkf
O_FSYNC
O_ASYNC
EX_OK
/w ;<
P_PID
P_PGID
P_ALL
WEXITED
WNOWAIT
F_LOCK
F_TLOCK
D0^Ex&
F_ULOCK
F_TEST
-s8y)
CS_PATH
SC_PII
SC_POLL
si_pid
9F^e
si_uid
si_code
posix
si_pid
si_uid
si_code
st_uid
st_gid
st_rdev
st_mode
st_ino
st_dev
st_uid
st_gid
st_size
f_bsize
f_bfree
f_files
f_ffree
q?UH
f_flag
f_fsid
f_bsize
f_bfree
f_files
f_ffree
f_flag
posix
columns
columns
lines
posix
is_file
inode
posix
user
elapsed
posix
user
system
elapsed
sysname
machine
posix
sysname
release
version
machine
st_mode
Loader which handles sourceless file imports.
name
name
_signal
name
name
time_ns
gmtime
asctime
ctime
tzset
altzone
AEST
AEDT
tm_year
tm_mon
tm_mday
tm_hour
tm_min
tm_sec
tm_wday
tm_yday
f?-\e
tm_zone
time
tm_year
tm_mon
tm_mday
tm_hour
tm_min
tm_sec
tm_wday
tm_yday
<stdin>
open
test
enum.py
wave.py
csv.py
pdb.py
=mbM
aifc.py
uu.py
lib2to3
gzip.py
zipfile
xmlrpc
bdb.py
bz2.py
glob.py
copy.py
xd>_
md]4d
pty.py
)8M%
ast.py
os.py
stat.py
dis.py
~8H 
curses
D9lK
uuid.py
email
urllib
site.py
json
io.py
asyncio
idlelib
code.py
http
tkinter
cgi.py
ssl.py
this.py
_3;d
abc.py
lzma.py
ctypes
sqlite3
logging
html
tomllib
venv
tty.py
cmd.py
wsgiref
hmac.py
aliases
    
punct
_cache
codecs
modname
          
GetACP
BufferedRWPair(reader, writer, buffer_size=DEFAULT_BUFFER_SIZE, /)
A buffered reader and writer object together.
A buffered reader object and buffered writer object put together to
form a sequential IO object that can read and write. This is typically
used with a socket or two-way pipe.
reader and writer are RawIOBase objects that are readable and
writeable respectively. If the buffer_size is omitted it defaults to
DEFAULT_BUFFER_SIZE.
atim
stat_result: Result from stat, fstat, or lstat.
This object may be accessed either as a tuple of
  (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime)
or via the attributes st_mode, st_ino, st_dev, st_nlink, st_uid, and so on.
Posix/windows: If your platform supports st_blksize, st_blocks, st_rdev,
or st_flags, they are available as attributes only.
See os.stat for more information.
Context manager for dynamic management of a stack of exit callbacks.
    For example:
        with ExitStack() as stack:
            files = [stack.enter_context(open(fname)) for fname in filenames]
            # All opened files will automatically be closed at the end of
            # the with statement, even if attempts to open files later
            # in the list raise an exception.
    
 A ChainMap groups multiple dicts (or other mappings) together
    to create a single, updateable view.
    The underlying mappings are stored in a list.  That list is public and can
    be accessed or updated using the *maps* attribute.  There is no other
    state.
    Lookups search the underlying mappings successively until a key is found.
    In contrast, writes, updates, and deletions only operate on the first
    mapping.
    
Decorator factory to apply update_wrapper() to a wrapper function
       Returns a decorator that invokes update_wrapper() with the decorated
       function as the wrapper argument and the arguments to wraps() as the
       remaining arguments. Default arguments are as for update_wrapper().
       This is a convenience function to simplify applying partial() to
       update_wrapper().
    
Make a cache key from optionally typed positional and keyword arguments
    The key is constructed in a way that is flat as possible rather than
    as a nested structure that would take more memory.
    If there is only a single argument and its data type is known to cache
    its hash value, then that argument is returned without a wrapper.  This
    saves space and improves lookup speed.
    
VSCODE_DEBUGPY_ADAPTER_ENDPOINTS
/home/adnaan/miniconda3/bin/conda
/home/adnaan/workspace/intro_to_cyber_safety
/home/adnaan/miniconda3/envs/cysa
/run/user/1000/vscode-git-2e15e62554.sock
/home/adnaan/miniconda3/bin/python
/home/adnaan/miniconda3/envs/cysa
/home/adnaan/miniconda3/envs/cysa/bin/python
CS_GNU_LIBPTHREAD_VERSION
CS_XBS5_ILP32_OFF32_CFLAGS
CS_XBS5_ILP32_OFF32_LDFLAGS
CS_XBS5_ILP32_OFF32_LIBS
CS_XBS5_ILP32_OFF32_LINTFLAGS
CS_XBS5_ILP32_OFFBIG_CFLAGS
CS_XBS5_ILP32_OFFBIG_LDFLAGS
CS_XBS5_ILP32_OFFBIG_LIBS
CS_XBS5_ILP32_OFFBIG_LINTFLAGS
CS_XBS5_LP64_OFF64_CFLAGS
CS_XBS5_LP64_OFF64_LDFLAGS
PxDf
CS_XBS5_LP64_OFF64_LINTFLAGS
CS_XBS5_LPBIG_OFFBIG_CFLAGS
CS_XBS5_LPBIG_OFFBIG_LDFLAGS
~^G2
CS_XBS5_LPBIG_OFFBIG_LIBS
CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
SC_SHARED_MEMORY_OBJECTS
SC_THREAD_ATTR_STACKADDR
SC_THREAD_ATTR_STACKSIZE
SC_THREAD_DESTRUCTOR_ITERATIONS
SC_THREAD_PRIORITY_SCHEDULING
SC_THREAD_PROCESS_SHARED
SC_THREAD_SAFE_FUNCTIONS
SC_XOPEN_REALTIME_THREADS
setregid
setgroups
initgroups
tcgetpgrp
tcsetpgrp
closerange
device_encoding
sendfile
ftruncate
posix_fallocate
posix_fadvise
fdatasync
iq)%z&
WCOREDUMP
WIFCONTINUED
WIFSIGNALED
WIFEXITED
WEXITSTATUS
WTERMSIG
WSTOPSIG
fpathconf
getloadavg
setresuid
setresgid
getresuid
getresgid
t/Ee
getxattr
setxattr
removexattr
listxattr
get_terminal_size
cpu_count
get_inheritable
set_inheritable
get_blocking
set_blocking
getrandom
eventfd_read
eventfd_write
9]f'.
<zWSL2_GUI_APPS_ENABLED
exitcode
TERM_PROGRAM_VERSION
PYDEVD_DISABLE_FILE_VALIDATION
/home/adnaan/miniconda3
BUNDLED_DEBUGPY_PATH
VSCODE_GIT_ASKPASS_NODE
/run/WSL/509101_interop
CONDA_PROMPT_MODIFIER
6cVSCODE_GIT_ASKPASS_EXTRA_ARGS
/usr/bin/lesspipe %s %s
| /usr/bin/lesspipe %s
VSCODE_GIT_IPC_HANDLE
CONDA_PYTHON_EXE
"CONDA_DEFAULT_ENV
VSCODE_WSL_EXT_LOCATION/up
VSCODE_GIT_ASKPASS_MAIN
IDBUS_SESSION_BUS_ADDRESS
unix:path=/run/user/1000/bus
/home/adnaan/miniconda3
unix:/mnt/wslg/PulseServer
VSCODE_IPC_HOOK_CLI
NGROUPS_MAX
TkX=W
WCONTINUED
WUNTRACED
O_NDELAY
O_APPEND
O_NOCTTY
98x3
O_LARGEFILE
O_TMPFILE
PRIO_PROCESS
PRIO_PGRP
PRIO_USER
O_CLOEXEC
O_ACCMODE
SEEK_HOLE
SEEK_DATA
O_DIRECT
O_DIRECTORY
iSGRf
O_NOFOLLOW
>~Y0f
O_NOATIME
EX_USAGE
EX_DATAERR
EX_NOINPUT
EX_NOUSER
EX_NOHOST
EX_UNAVAILABLE
EX_SOFTWARE
EX_OSERR
M:vf
EX_OSFILE
EX_CANTCREAT
EX_IOERR
EX_TEMPFAIL
EX_PROTOCOL
EX_NOPERM
EX_CONFIG
k^,f
ST_RDONLY
ST_NOSUID
ST_NODEV
ST_NOEXEC
ST_SYNCHRONOUS
e[	M
ST_MANDLOCK
ST_WRITE
ST_APPEND
ST_NOATIME
ST_NODIRATIME
ST_RELATIME
POSIX_FADV_NORMAL
POSIX_FADV_SEQUENTIAL
POSIX_FADV_RANDOM
s;nYf
POSIX_FADV_NOREUSE
POSIX_FADV_WILLNEED
POSIX_FADV_DONTNEED
?$n/w
WSTOPPED
CLD_EXITED
CLD_KILLED
CLD_DUMPED
CLD_TRAPPED
CLD_STOPPED
CLD_CONTINUED
SPLICE_F_MOVE
SPLICE_F_NONBLOCK
SPLICE_F_MORE
WURF
POSIX_SPAWN_OPEN
POSIX_SPAWN_CLOSE
POSIX_SPAWN_DUP2
SCHED_OTHER
SCHED_FIFO
SCHED_RR
SCHED_BATCH
SCHED_IDLE
SCHED_RESET_ON_FORK
CLONE_FS
CLONE_FILES
CLONE_NEWNS
CLONE_NEWUTS
CLONE_NEWIPC
CLONE_NEWUSER
CLONE_NEWPID
CLONE_NEWNET
CLONE_SYSVSEM
I_?! 
CLONE_THREAD
CLONE_SIGHAND
CLONE_VM
XATTR_CREATE
XATTR_REPLACE
XATTR_SIZE_MAX
RTLD_LAZY
RTLD_NOW
RTLD_GLOBAL
RTLD_LOCAL
RTLD_NODELETE
RTLD_NOLOAD
RTLD_DEEPBIND
GRND_RANDOM
gb.ds^
GRND_NONBLOCK
Uu[\y
EFD_CLOEXEC
EFD_NONBLOCK
EFD_SEMAPHORE
PC_ALLOC_SIZE_MIN
PC_ASYNC_IO
PC_CHOWN_RESTRICTED
PC_FILESIZEBITS
PC_LINK_MAX
PC_MAX_CANON
PC_MAX_INPUT
PC_NAME_MAX
PC_NO_TRUNC
PC_PATH_MAX
PC_PIPE_BUF
PC_PRIO_IO
PC_REC_INCR_XFER_SIZE
PC_REC_MAX_XFER_SIZE
QXO`f
PC_REC_MIN_XFER_SIZE
PC_REC_XFER_ALIGN
PC_SOCK_MAXBUF
PC_SYMLINK_MAX
PC_SYNC_IO
PC_VDISABLE
pathconf_names
CS_GNU_LIBC_VERSION
CS_LFS64_CFLAGS
CS_LFS64_LDFLAGS
CS_LFS64_LIBS
CS_LFS64_LINTFLAGS
CS_LFS_CFLAGS
CS_LFS_LDFLAGS
CS_LFS_LIBS
CS_LFS_LINTFLAGS
CS_XBS5_LP64_OFF64_LIBS
confstr_names
SC_2_CHAR_TERM
'2qf
SC_2_C_BIND
SC_2_C_DEV
SC_2_C_VERSION
SC_2_FORT_DEV
SC_2_FORT_RUN
SC_2_LOCALEDEF
SC_2_SW_DEV
SC_2_UPE
SC_2_VERSION
SC_AIO_LISTIO_MAX
SC_AIO_MAX
4u.f
SC_AIO_PRIO_DELTA_MAX
SC_ARG_MAX
SC_ASYNCHRONOUS_IO
SC_ATEXIT_MAX
SC_AVPHYS_PAGES
SC_BC_BASE_MAX
SC_BC_DIM_MAX
SC_BC_SCALE_MAX
SC_BC_STRING_MAX
SC_CHARCLASS_NAME_MAX
SC_CHAR_BIT
SC_CHAR_MAX
SC_CHAR_MIN
SC_CHILD_MAX
SC_CLK_TCK
SC_COLL_WEIGHTS_MAX
SC_DELAYTIMER_MAX
U'&f
SC_EQUIV_CLASS_MAX
SC_EXPR_NEST_MAX
SC_FSYNC
SC_GETGR_R_SIZE_MAX
SC_GETPW_R_SIZE_MAX
SC_INT_MAX
SC_INT_MIN
SC_IOV_MAX
SC_JOB_CONTROL
	pk7S1f
SC_LINE_MAX
SC_LOGIN_NAME_MAX
SC_LONG_BIT
SC_MAPPED_FILES
%ICf
SC_MB_LEN_MAX
SC_MEMLOCK
SC_MEMLOCK_RANGE
SC_MEMORY_PROTECTION
SC_MESSAGE_PASSING
SC_MQ_OPEN_MAX
SC_MQ_PRIO_MAX
SC_NGROUPS_MAX
SC_NL_ARGMAX
SC_NL_LANGMAX
SC_NL_MSGMAX
SC_NL_NMAX
SC_NL_SETMAX
SC_NL_TEXTMAX
SC_NPROCESSORS_CONF
SC_NPROCESSORS_ONLN
SC_NZERO
SC_OPEN_MAX
SC_PAGESIZE
SC_PAGE_SIZE
SC_PASS_MAX
SC_PHYS_PAGES
This module provides access to operating system functionality that is
standardized by the C Standard and the POSIX standard (a thinly
disguised Unix interface).  Refer to the library manual and
corresponding Unix manual entries for more information on calls.
Represents a namespace package's path.  It uses the module name
    to find its parent module, and from there it looks up the parent's
    __path__.  When this changes, the module's own path is recomputed,
    using path_finder.  For top-level modules, the parent module's path
    is sys.path.
rmation.
times_result: Result from os.times().
This object may be accessed either as a tuple of
  (user, system, children_user, children_system, elapsed),
or via the attributes user, system, children_user, children_system,
and elapsed.
See os.times for more information.
SC_PII_INTERNET
SC_PII_INTERNET_DGRAM
SC_PII_INTERNET_STREAM
SC_PII_OSI
SC_PII_OSI_CLTS
SC_PII_OSI_COTS
SC_PII_OSI_M
SC_PII_SOCKET
SC_PII_XTI
SC_PRIORITIZED_IO
SC_PRIORITY_SCHEDULING
.t@Zf
SC_REALTIME_SIGNALS
L4W@
SC_RE_DUP_MAX
SC_RTSIG_MAX
SC_SAVED_IDS
SC_SCHAR_MAX
SC_SCHAR_MIN
SC_SELECT
SC_SEMAPHORES
SC_SEM_NSEMS_MAX
SC_SEM_VALUE_MAX
Q/=_B9f
SC_SHRT_MAX
3}~f
SC_SHRT_MIN
SC_SIGQUEUE_MAX
SC_SSIZE_MAX
SC_STREAM_MAX
,8UI
SC_SYNCHRONIZED_IO
z^hz
SC_THREADS
SC_THREAD_KEYS_MAX
SC_THREAD_PRIO_INHERIT
SC_THREAD_PRIO_PROTECT
SC_THREAD_STACK_MIN
SC_THREAD_THREADS_MAX
SC_TIMERS
SC_TIMER_MAX
SC_TTY_NAME_MAX
SC_TZNAME_MAX
SC_T_IOV_MAX
SC_UCHAR_MAX
SC_UINT_MAX
SC_UIO_MAXIOV
SC_ULONG_MAX
SC_USHRT_MAX
SC_VERSION
SC_WORD_BIT
QgsDo
SC_XBS5_ILP32_OFF32
>K5f
SC_XBS5_ILP32_OFFBIG
SC_XBS5_LP64_OFF64
SC_XBS5_LPBIG_OFFBIG
SC_XOPEN_CRYPT
SC_XOPEN_ENH_I18N
SC_XOPEN_LEGACY
SC_XOPEN_REALTIME
SC_XOPEN_SHM
nG\f
SC_XOPEN_UNIX
SC_XOPEN_VERSION
SC_XOPEN_XCU_VERSION
SC_XOPEN_XPG2
SC_XOPEN_XPG3
SC_XOPEN_XPG4
sysconf_names
waitid_result
si_signo
si_status
si_signo
_fields
si_status
waitid_result
stat_result
st_nlink
st_atime_ns
st_mtime_ns
st_ctime_ns
st_blksize
st_blocks
st_nlink
_fields
statvfs_result
f_frsize
f_blocks
f_bavail
f_favail
f_namemax
f_frsize
_fields
f_blocks
f_bavail
f_favail
f_namemax
statvfs_result
sched_param
sched_priority
sched_param
A tuple of (columns, lines) for holding terminal window size
terminal_size
terminal_size
ScandirIterator
DirEntry
DirEntry
times_result
children_user
children_system
children_user
children_system
times_result
uname_result
nodename
nodename
_fields
uname_result
struct_rusage
HAVE_EVENTFD
HAVE_FACCESSAT
HAVE_FCHDIR
HAVE_FCHMOD
HAVE_FCHMODAT
HAVE_FPATHCONF
HAVE_FCHOWN
HAVE_FCHOWNAT
HAVE_FEXECVE
HAVE_FDOPENDIR
HAVE_FSTATAT
HAVE_FSTATVFS
HAVE_FTRUNCATE
HAVE_FUTIMENS
HAVE_FUTIMES
HAVE_FUTIMESAT
HAVE_LINKAT
HAVE_LCHOWN
HAVE_LSTAT
HAVE_LUTIMES
HAVE_MKDIRAT
HAVE_MKFIFOAT
HAVE_MKNODAT
HAVE_OPENAT
HAVE_READLINKAT
HAVE_RENAMEAT
HAVE_SYMLINKAT
HAVE_UNLINKAT
HAVE_UTIMENSAT
Meta path finder for modules declared in the Windows registry.
Concrete implementation of SourceLoader using the file system.
CLOCK_PROCESS_CPUTIME_ID
Ddhome/adconfig-3.12-x86_64-linux-gnu
a/lib
incompatible codecs in module "
*Fuue
raw_unicode_escape_encode
raw_unicode_escape_decode
nu.so
-gnu.so
IncrementalEncoder.encode
Meta path finder for sys.path and package __path__ attributes.
c-rQd
zipimport
zipimporter
surrogatepass
encodings
scape
zipimport
clock_gettime
clock_gettime_ns
clock_settime
clock_settime_ns
clock_getres
pthread_getcpuclockid
localtime
strptime
monotonic
monotonic_ns
process_time
process_time_ns
thread_time
thread_time_ns
perf_counter
perf_counter_ns
get_clock_info
timezone
daylight
CLOCK_REALTIME
CLOCK_MONOTONIC
CLOCK_MONOTONIC_RAW
CLOCK_THREAD_CPUTIME_ID
CLOCK_BOOTTIME
K!"^
CLOCK_TAI
_STRUCT_TM_ITEMS
struct_time
tm_isdst
tm_gmtoff
tm_isdst
_fields
struct_time
/__init__.pyc
/__init__.py
encodings.utf_8
--unknown--
crypt.py
poplib.py
pstats.py
__pycache__
dataclasses.py
numbers.py
optparse.py
zipapp.py
random.py
doctest.py
linecache.py
hashlib.py
pkgutil.py
multiprocessing
_sitebuiltins.py
locale.py
subprocess.py
turtledemo
timeit.py
statistics.py
_compression.py
mimetypes.py
pyclbr.py
genericpath.py
mailcap.py
(U:/
chunk.py
CCmd
socketserver.py
shlex.py
_pydatetime.py
operator.py
queue.py
pydoc_data
_threading_local.py
y>e0
telnetlib.py
sre_compile.py
webbrowser.py
sysconfig.py
signal.py
filecmp.py
_collections_abc.py
weakref.py
e7cCd
_py_abc.py
rlcompleter.py
zoneinfo
opcode.py
tabnanny.py
L_hd
selectors.py
2j/-
getopt.py
cProfile.py
xJS1
turtle.py
sunau.py
reprlib.py
pipes.py
codeop.py
encodings
sre_parse.py
_compat_pickle.py
typing.py
difflib.py
D9gzJ
textwrap.py
unittest
_osx_support.py
#7Ox
importlib
__future__.py
modulefinder.py
struct.py
_pylong.py
inspect.py
shelve.py
_aix_support.py
pydoc.py
nntplib.py
smtplib.py
pickle.py
datetime.py
base64.py
netrc.py
x&Id
contextvars.py
{Q'D
ipaddress.py
quopri.py
posixpath.py
shutil.py
stringprep.py
ntpath.py
warnings.py
pathlib.py
_strptime.py
tarfile.py
graphlib.py
traceback.py
fnmatch.py
pickletools.py
pSmx-
imghdr.py
_markupbase.py
argparse.py
contextlib.py
concurrent
profile.py
bisect.py
codecs.py
__phello__
colorsys.py
tokenize.py
_pyio.py
trace.py
site-packages
xdrlib.py
antigravity.py
symtable.py
6Ted
heapq.py
gettext.py
fractions.py
pprint.py
getpass.py
ensurepip
token.py
decimal.py
C,.=
functools.py
!Q.wfd
keyword.py
sndhdr.py
tempfile.py
sched.py
collections
'Z"d
sre_constants.py
mailbox.py
calendar.py
__hello__.py
_weakrefset.py
types.py
py_compile.py
secrets.py
0D.(A
plistlib.py
tracemalloc.py
fileinput.py
imaplib.py
threading.py
string.py
lib-dynload
_pydecimal.py
platform.py
socket.py
nturl2path.py
LICENSE.txt
configparser.py
copyreg.py
runpy.py
compileall.py
ftplib.py
cgitb.py
zipimport.py
The time value as returned by gmtime(), localtime(), and strptime(), and
 accepted by asctime(), mktime() and strftime().  May be considered as a
 sequence of 9 integers.
 Note that several fields' values are not the same as those defined by
 the C language standard for struct tm.  For example, the value of the
 field tm_year is the actual year, not year - 1900.  See individual
 fields' descriptions for details.
Distutils was imported before Setuptools, but importing Setuptools also replaces the `distutils` module in `sys.modules`. This may lead to undesirable behaviors or errors. To avoid these issues, avoid using distutils directly, ensure that setuptools is installed in the traditional way (e.g. not an editable install), and/or make sure that setuptools is always imported before distutils.
Utilities to get a password and/or the current user name.
getpass(prompt[, stream]) - Prompt for a password, with echo turned off.
getuser() - Get the user name from the environment or password database.
GetPassWarning - This UserWarning is issued when getpass() cannot prevent
                 echoing of the password contents while reading.
On Windows, the msvcrt module will be used.
Call the __prepare__ method of the appropriate metaclass.
    Returns (metaclass, namespace, kwds) as a 3-tuple
    *metaclass* is the appropriate metaclass
    *namespace* is the prepared class namespace
    *kwds* is an updated copy of the passed in kwds argument with any
    'metaclass' entry removed. If no kwds argument is passed in, this will
    be an empty dict.
    
Keywords (from "Grammar/python.gram")
This file is automatically generated; please don't muck it up!
To update the symbols in this file, 'cd' to the top directory of
the python source tree and run:
    PYTHONPATH=Tools/peg_generator python3 -m pegen.keywordgen         Grammar/python.gram         Grammar/Tokens         Lib/keyword.py
Alternatively, you can run 'make regen-keyword'.
defaultdict(default_factory=None, /, [...]) --> dict with default factory
The default factory is called without arguments to produce
a new value when a key is not present, in __getitem__ only.
A defaultdict compares equal to a dict with the same items.
All remaining arguments are treated the same as if they were
passed to the dict constructor, including keyword arguments.
[~Mf
CodecRegistryError
encodings.
module "
) failed to register
_unknown
_aliases
_import_tail
getregentry
getaliases
norm_encoding
aliased_encoding
modnames
codecaliases
search_function
encodings.mbcs
ansi_code_page
_alias_mbcs
encodings
encodings.aliases
Codec details when looking up the codec registry
unregister
Wet&
escape_encode
escape_decode
utf_8_encode
utf_8_decode
utf_7_encode
utf_7_decode
utf_16_encode
utf_16_le_encode
utf_16_be_encode
Wq9]
utf_16_decode
utf_16_le_decode
utf_16_be_decode
utf_16_ex_decode
JayyXp
utf_32_encode
KAehc
utf_32_le_encode
utf_32_be_encode
0M>Fe
utf_32_decode
utf_32_le_decode
utf_32_be_decode
utf_32_ex_decode
unicode_escape_encode
unicode_escape_decode
latin_1_encode
latin_1_decode
ascii_encode
&lve
ascii_decode
B`Q0
charmap_encode
charmap_decode
charmap_build
readbuffer_encode
surrogateescape
encodings
kz1048.py
cp875.py
cp861.py
iso8859_10.py
odqM
tis_620.py
charmap.py
utf_32.py
cp863.py
__pycache__
iso8859_15.py
undefined.py
gb18030.py
euc_jp.py
mac_greek.py
\'Wd
base64_codec.py
iso8859_2.py
utf_16_le.py
iso2022_jp_3.py
mac_latin2.py
punycode.py
iso8859_13.py
cp852.py
koi8_r.py
hp_roman8.py
ascii.py
cp865.py
sD)M
cp864.py
rot_13.py
latin_1.py
cp1258.py
7U,Q
euc_jis_2004.py
gb2312.py
johab.py
mac_romanian.py
cp737.py
cp1125.py
iso2022_jp_1.py
cp1253.py
mac_roman.py
RURk
utf_7.py
iso8859_4.py
shift_jis_2004.py
cp860.py
bz2_codec.py
cp856.py
cp1256.py
iso8859_6.py
utf_8_sig.py
iso8859_7.py
aliases.py
big5hkscs.py
cp950.py
iso8859_1.py
zlib_codec.py
iso8859_8.py
cp1251.py
cp1250.py
iso8859_9.py
mac_iceland.py
s*Sd
euc_jisx0213.py
quopri_codec.py
cp949.py
shift_jisx0213.py
iso2022_kr.py
iso2022_jp.py
%)V8
cp437.py
mac_arabic.py
unicode_escape.py
cp1006.py
cp874.py
hex_codec.py
cp862.py
iso8859_16.py
iso8859_14.py
mac_croatian.py
cp1026.py
utf_16_be.py
utf_32_le.py
NvYD
cp500.py
koi8_u.py
iso8859_3.py
cp857.py
mac_farsi.py
__init__.py
cp273.py
euc_kr.py
iso2022_jp_2004.py
iso2022_jp_2.py
cp775.py
ptcp154.py
palmos.py
w))d
cp1140.py
utf_8.py
cp866.py
shift_jis.py
utf_32_be.py
:9Xd
mac_turkish.py
cp720.py
cp850.py
uu_codec.py
cp1254.py
mac_cyrillic.py
utf_16.py
cp037.py
cp869.py
cp855.py
raw_unicode_escape.py
6BkCd
cp932.py
iso8859_5.py
,C3I
cp858.py
cp424.py
iso2022_jp_ext.py
cp1257.py
koi8_t.py
cp1252.py
iso8859_11.py
cp1255.py
ansi_x3_4_1968
-312
ansi_x3.4_1968
iso_646.irv_1991
ansi_x3.4_1986
i!8f
iso646_us
iso_ir_6
k!=X
us_ascii
base64_codec
big5_hkscs
big5hkscs
bz2_codec
csibm037
ebcdic_cp_ca
ebcdic_cp_nl
ebcdic_cp_us
ebcdic_cp_wt
csibm1026
windows_1250
windows_1251
windows_1252
windows_1253
windows_1254
    This subclass of IncrementalEncoder can be used as the baseclass for an
    incremental encoder if the encoder must keep some of the output in a
    buffer between calls to encode().
    
A Mapping is a generic container for associating key/value
    pairs.
    This class provides concrete generic implementations of all
    methods except for __getitem__, __iter__, and __len__.
    
Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at 
 Subtract count, but keep only results with positive counts.
        >>> Counter('abbbc') - Counter('bccd')
        Counter({'b': 2, 'a': 1})
        
Union is the maximum of value in either of the input counters.
        >>> Counter('abbb') | Counter('bcc')
        Counter({'b': 3, 'c': 2, 'a': 1})
        
compress(data, selectors)
Return data elements corresponding to true selector elements.
Forms a shorter iterator from selected data elements using the selectors to
choose the data elements.
Return data elements corresponding to true selector elements.
Forms a shorter iterator from selected data elements using the selectors to
choose the data elements.
mbcs
final
name
codecs
name
dermios
name
errors
csascii
cp367
idna.py
hz.py
gbk.py
mbcs.py
big5.py
oem.py
ibm367
base64
base_64
F=K8'Yf
big5_tw
big5
csbig5
hkscs
cp037
ibm037
ibm039
1026
cp1026
ibm1026
1125
cp1125
ibm1125
cp866u
ruscii
1140
cp1140
ibm1140
1250
cp1250
1251
cp1251
1252
`&c`
cp1252
1253
cp1253
1254
cp1254
1255
cp1255
1256
cp1256
1257
cp1257
1258
q3Cs
cp1258
cp273
ibm273
cp424
ibm424
T^pM
cp437
S[,J{f
ibm437
cp500
ibm500
cp775
%$bGf
ibm775
cp850
ibm850
%.L!
cp852
ibm852
cp855
ibm855
cp857
ibm857
cp858
ibm858
cp860
ibm860
cp861
cp_is
ibm861
cp862
ibm862
cp863
ibm863
378l
cp864
ibm864
cp865
ibm865
cp866
ibm866
cp869
cp_gr
ibm869
$9e8V
q}xf
cp932
ms932
mskanji
cp949
ay}@6
ms949
cp950
ms950
eucjp
euc_jp
ujis
u_jis
euckr
euc_kr
korean
ksc5601
w<`f
ksx1001
gb18030
chinese
gb2312
euc_cn
euccn
cp936
ms936
roman8
cp1051
ibm1051
hzgb
hz_gb
latin6
thai
&v(V
latin7
latin8
x4wf
latin9
latin10
latin2
latin3
latin4
arabic
greek
greek8
rQL2
hebrew
latin5
cp1361
johab
ms1361
M_s*
cskoi8r
koi8_r
kz_1048
kz1048
puTf
rk1048
8859
latin_1
kWrf
cp819
ibm819
iso8859
latin
ansi
dbcs
ptcp154
mi4V
pt154
AlY]f
cp154
quopri
*(*a
rot13
rot_13
sjis
JB2B?C
s_jis
tis620
tis_620
utf_16
utf16
utf_32
utf32
utf_7
^A2f
utf7
utf_8
utf8
Q*nf
cp65001
=]@f
name
utf-8
alarm
signal
pause
Hgke
sigwait
signal
NSIG
SIGHUP
SIGINT
)N2R
SIGQUIT
SIGILL
SIGTRAP
SIGIOT
SIGABRT
SIGFPE
SIGKILL
SIGBUS
SIGSEGV
SIGSYS
SIGPIPE
JA'DN~f
SIGALRM
SIGTERM
SIGUSR1
SIGUSR2
SIGCLD
]buf
SIGCHLD
M^>P
SIGPWR
SIGIO
SIGURG
SIGPOLL
SIGSTOP
SIGTSTP
Ljdf
SIGCONT
SIGTTIN
SIGTTOU
SIGPROF
SIGXCPU
SIGXFSZ
/URf
SIG_DFL
SIG_IGN
si_band
signal
si_code
si_pid
si_uid
si_band
q]/(
site
utf-8
name
name
Internal state held by ABC machinery.
_abc
utf-8
utf-8
python
site
utf-8
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
Represent a PEP 585 generic type
E.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
windows_1255
windows_1256
windows_1257
sf}.
windows_1258
csibm273
csibm424
ebcdic_cp_he
cspc8codepage437
csibm500
ebcdic_cp_be
ebcdic_cp_ch
cspc775baltic
cspc850multilingual
cspcp852
csibm855
csibm857
csibm858
8Djf
csibm860
csibm861
cspc862latinhebrew
Gyq}
csibm863
csibm864
csibm865
csibm866
csibm869
0sn9
ms_kanji
jisx0213
euc_jis_2004
h"Uf
eucjis2004
euc_jis2004
eucjisx0213
euc_jisx0213
ks_c_5601
ks_c_5601_1987
ks_x_1001
gb18030_2000
csiso58gb231280
eucgb2312_cn
gb2312_1980
gb2312_80
iso_ir_58
hex_codec
hp_roman8
csHPRoman8
hz_gb_2312
csiso2022jp
iso2022_jp
iso2022jp
iso_2022_jp
iso2022jp_1
iso2022_jp_1
iso_2022_jp_1
iso2022jp_2
iso2022_jp_2
iso_2022_jp_2
Fk+q0
iso_2022_jp_2004
iso2022_jp_2004
iso2022jp_2004
iso2022jp_3
iso2022_jp_3
iso_2022_jp_3
iso2022jp_ext
iso2022_jp_ext
iso_2022_jp_ext
csiso2022kr
iso2022_kr
hV.!!
iso2022kr
iso_2022_kr
csisolatin6
iso8859_10
iso_8859_10
iso_8859_10_1992
iso_ir_157
iso8859_11
iso_8859_11
iso_8859_11_2001
iso_8859_13
iso8859_13
iso_8859_14
iso8859_14
iso_8859_14_1998
iso_celtic
iso_ir_199
iso_8859_15
iso8859_15
iso_8859_16
iso8859_16
iso_8859_16_2001
iso_ir_226
csisolatin2
iso8859_2
@L`x
iso_8859_2
iso_8859_2_1987
iYk,
\v}f
iso_ir_101
csisolatin3
iso8859_3
iso_8859_3
iso_8859_3_1988
iso_ir_109
csisolatin4
iso8859_4
iso_8859_4
iso_8859_4_1988
iso_ir_110
csisolatincyrillic
iso8859_5
cyrillic
iso_8859_5
iso_8859_5_1988
iso_ir_144
iso8859_6
asmo_708
csisolatinarabic
ecma_114
iso_8859_6
iso_8859_6_1987
iso_ir_127
csisolatingreek
iso8859_7
ecma_118
elot_928
iso_8859_7
iso_8859_7_1987
iso_ir_126
csisolatinhebrew
iso8859_8
iso_8859_8
iso_8859_8_1988
iso_ir_138
D],=f
csisolatin5
iso8859_9
iso_8859_9
iso_8859_9_1989
iso_ir_148
strk1048_2002
csisolatin1
iso8859_1
iso_8859_1
iso_8859_1_1987
[F>f
iso_ir_100
maccyrillic
mac_cyrillic
macgreek
mac_greek
maciceland
mac_iceland
maccentraleurope
mac_latin2
mac_centeuro
maclatin2
macintosh
mac_roman
macroman
macturkish
mac_turkish
csptcp154
|]%f
cyrillic_asian
quopri_codec
quoted_printable
quotedprintable
csshiftjis
shift_jis
2wh<
shiftjis
shiftjis2004
shift_jis_2004
27;\
sjis_2004
s_jis_2004
shiftjisx0213
shift_jisx0213
sjisx0213
s_jisx0213
tis_620_0
tis_620_2529_0
tis_620_2529_1
iso_ir_166
??}+
unicodebigunmarked
utf_16_be
MoIf
utf_16be
unicodelittleunmarked
!T$u
utf_16_le
utf_16le
utf_32be
utf_32_be
utf_32le
utf_32_le
unicode_1_1_utf_7
utf8_ucs2
utf8_ucs4
`U@z(uO
uu_codec
S>2-
zlib_codec
x_mac_japanese
x_mac_korean
x_mac_simp_chinese
x_mac_trad_chinese
setitimer
default_int_handler
getitimer
raise_signal
strsignal
getsignal
set_wakeup_fd
siginterrupt
pthread_kill
pthread_sigmask
sigpending
sigwaitinfo
sigtimedwait
valid_signals
itimer_error
SIG_BLOCK
SIG_UNBLOCK
SIG_SETMASK
SIGWINCH
SIGVTALRM
SIGRTMIN
SIGRTMAX
SIGSTKFLT
ITIMER_REAL
ITIMER_VIRTUAL
ITIMER_PROF
ItimerError
struct_siginfo
si_errno
si_signo
_fields
si_errno
si_status
struct_siginfo
incrementalencoder
_abc_data
asscheck
surrogateescape
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__subclasses__
__stdin__
<stdout>
surrogateescape
surrogateescape
__stdout__
<stderr>
backslashreplace
incrementalencoder
backslashreplace
posixpath
__main__
_bootstrap_external
_sitebuiltins
python3.12
_collections_abc
GenericAlias
GenericAlias
GenericAlias
GenericAlias
GenericAlias
GenericAlias
GenericAlias
GenericAlias
Internal state held by ABC machinery.
Enter password for session: 
a/lib
This unifies bytes and bytearray.
    XXX Should add all their methods.
    
Abstract base class for implementing the file system path protocol.
	Lh2
V<- N
$ ($
@h &
lA@1
*0" 
b"R$
h	Pt@
@T@r
WDH",b
 %;@
@@!B
gT DA 
RPU B
0T;8B
*v$&t
!@ d
],/>
.-7w
&#Wq^(
-j"%
O$sRAM
oKbYwfe
'l"6
# C]
n#K}
0*Ok
^LO#
VBZp
ez|e
n1j	
g^VI'
K.0 
JEK]Gy
,cr(  	
ZX0Q
&D+]
n]ZYY
R/N=
"p.c
GnbUt(
-|H|t
~iz~-
blB^
I+`^
q?t<
#~"+
Z;P]_
DuxJF
g]WF%
b w9
&!gi
?`[#U~
$|0`
8PKm0X1
Fj[G
N72h
v*3=
&~mO
9fII"
b`3f
[R@d
#QE7
r~%b/?fIo
%V6d
qM`qT
*"kD
Jbx-
|BfK
};>20[
lW>"Ym\
;K=G
\o]3aoT
&0!^
Vfcv
$ZJZ
Z1Nz
,Ky4
,4|L;
kmt"x
k~q&
Uym]
5: ,
4Btu
ry8!
zd*:
U($)~ 
G@H@
8#&W3
$Ahy
$V% 
V'LJ*
}L\t
4K2|&
sBPw
$s`[
XPho
0^mG
~s%:
ye;,
 j|a
wb~0
X=d=
f(k8
ryHVw
Az-<8
"[1=
fQE 
yv~{ v
/T'x
m%,/N
Fa8X7
,p+G+
%anz
~Yz8
"g>NX
"g>NY
E1]Wa6
~R3E
je-o"
[je-o
|EpN
rTpN
H~4J
WJ9H
>:,i*
.@:,iX
)K26v
|>Fx
.]<zS
;U+<"
Y1:2
r49S
*@o3r
__pthread_mutex_destroy
__write_nocancel
locs
__h_errno_location
lremovexattr
pthread_mutexattr_gettype
fputc_unlocked
__realpath_chk
obstack_alloc_failed_handler
_dl_find_object
getaliasbyname
setsid
__libc_dynarray_resize
delete_module
strfromf64x
pthread_kill
__libc_scratch_buffer_set_array_size
lrand48_r
dlinfo
_nss_files_setspent
_IO_wfile_jumps
cnd_broadcast
_IO_default_uflow
getprotobyname
xdr_keybuf
_nss_files_getnetent_r
preadv64v2
raise
__printf_chk
regcomp
h_nerr
key_encryptsession
getrpcport
scandir
mtx_unlock
pthread_getname_np
__ctype_tolower
clnt_sperror
ttyslot
mtrace
pthread_spin_lock
inet_addr
timer_settime
unlinkat
rewind
pthread_setaffinity_np
__pthread_rwlock_init
setutent
__pipe
__getlogin_r_chk
mcheck_check_all
pthread_attr_setstackaddr
sprofil
__merge_grp
key_decryptsession_pk
sem_timedwait
_sys_nerr
_thread_db_pthread_eventbuf
strtof32x
qecvt_r
_IO_default_xsgetn
__cmsg_nxthdr
iswcntrl
cfmakeraw
open_by_handle_at
dlerror
__readlink_chk
strfromf128
_IO_file_setbuf
strerror_l
wcrtomb
setregid
getaddrinfo_a
svc_exit
ntp_adjtime
endusershell
iswalnum
inet6_opt_find
gnu_dev_major
umount2
pthread_condattr_destroy
wcstof32x_l
_IO_switch_to_wget_mode
__libc_valloc
ustat
thrd_detach
__ctype_toupper
__iswblank_l
get_nprocs_conf
_IO_fsetpos64
__nptl_threads_events
_IO_marker_difference
__isoc99_fscanf
lockf
__select
fgetc
posix_spawn_file_actions_addfchdir_np
xdr_free
siggetmask
__nss_parse_line_result
malloc_stats
tmpnam_r
rexecoptions
__open_catalog
clntudp_create
nftw
__cxa_finalize
uselib
seed48_r
rmdir
mlockall
__argz_stringify
__pread64
getmsg
_IO_un_link
pipe2
__nss_files_data_setent
getsubopt
sem_open
__isoc99_vfscanf
__stpcpy_chk
strtof64
aio_return
__fpurge
gai_cancel
aio_read
__pthread_register_cancel_defer
__sigsetjmp
tzset
getmntent
_obstack_newchunk
xdr_sizeof
setlocale
mtx_destroy
setns
wcscspn
pthread_barrierattr_setpshared
__sigsuspend
ftruncate
pthread_attr_setaffinity_np
__libc_start_main
__getauxval
tr_break
__libc_scratch_buffer_grow
getdents64
_dl_deallocate_tls
pthread_condattr_setclock
__nss_database_get
aio_suspend
_IO_flush_all_linebuffered
__fsetlocking
__pread64_nocancel
_IO_remove_marker
posix_spawn_file_actions_addclosefrom_np
__sigaction
strcspn
__woverflow
__ctype_tolower_loc
__gconv_destroy_spec
__pwrite64
pthread_condattr_getclock
__isxdigit_l
__register_atfork
_IO_file_stat
__fgetws_unlocked_chk
posix_spawnattr_init
getutline_r
pthread_rwlock_timedwrlock
_IO_ungetc
strstr
imaxabs
stime
_dl_fatal_printf
xdr_bool
wcscat
_IO_sscanf
cnd_timedwait
__strtoul_l
re_match
__secure_getenv
getsecretkey
flistxattr
__nss_next2
__fxstatat
loc1
__fseeko64
wcscpy
cfsetispeed
muntrace
sigprocmask
__getgroups_chk
fts64_children
inet6_rth_add
aio_fsync64
_thread_db_sizeof_td_thr_events_t
cfsetspeed
_IO_unsave_wmarkers
mbrtoc16
fgetpwent_r
_thread_db_td_eventbuf_t_eventdata
atoll
__rpc_thread_svc_fdset
_dl_catch_exception
__wcsncasecmp_l
__ffs
recvmsg
_dl_catch_error
_thread_db___pthread_keys
isprint
atof
__vsnprintf
fopencookie
fmemopen
setfsent
pthread_mutex_clocklock
__res_nmkquery
tss_delete
_nss_files_getnetbyname_r
pthread_attr_setinheritsched
gsignal
sched_setaffinity
__strcpy_small
setcontext
getdtablesize
__obstack_printf_chk
__libc_init_first
versionsort64
gettid
wcsnrtombs
_IO_str_init_static
__gconv_get_cache
pthread_barrier_init
psiginfo
strtoull
pthread_cond_clockwait
__malloc_initialize_hook
pututxline
__pthread_unregister_cancel_restore
isastream
__libc_scratch_buffer_dupfree
fopen64
__malloc_hook
scalbnl
logout
_sys_errlist
gnu_dev_minor
_itoa_lower_digits
xdrrec_endofrecord
sem_wait
pthread_rwlockattr_getkind_np
__libc_realloc
putpwent
__ns_name_unpack
__pthread_key_create
xdr_des_block
_thread_db_dtv_slotinfo_list_len
__chk_fail
pthread_cond_broadcast
__res_context_mkquery
sethostname
tss_set
cnd_init
strxfrm
isalpha
__libc_allocate_rtsig
__wcstoul_l
__libc_secure_getenv
scalbnf
__confstr_chk
sigfillset
xdr_key_netstarg
pwritev64
iswxdigit
__ctype32_tolower
strfromf32
pthread_self
killpg
__libc_single_threaded
imaxdiv
_nss_files_setetherent
verrx
sighold
epoll_wait
__nss_configure_lookup
__ctype_b_loc
fanotify_init
strchr
inet6_rth_getaddr
xdr_authdes_cred
copysign
fflush_unlocked
iswdigit
daemon
strfromf
_IO_flush_all
siglongjmp
__cyg_profile_func_enter
xdr_char
_nss_files_gethostbyname2_r
wcstoq
strfromd
aio_error64
setpriority
_Fork
wcstoul
fputwc_unlocked
_nss_files_getprotoent_r
__wcscasecmp_l
__open_nocancel
pthread_getattr_np
__strtold_internal
__fork
__ttyname_r_chk
pthread_barrier_wait
towlower
umask
re_search_2
copy_file_range
__iswpunct_l
strptime_l
sigorset
getwchar_unlocked
sgetspent
__toupper_l
pthread_rwlock_clockrdlock
wcstoull
posix_spawn_file_actions_addclose
mtx_lock
xdr_pmap
_dl_mcount_wrapper_check
ecb_crypt
xdrrec_skiprecord
_thread_db_const_thread_area
wcstok
__shm_get_name
svc_getreq_poll
sigblock
strncmp
lldiv
_nss_files_parse_protoent
ldexp
pthread_attr_setguardsize
fileno_unlocked
__vasprintf_chk
__libc_ns_samename
getipv4sourcefilter
inet6_opt_next
__strpbrk_c2
posix_spawn_file_actions_destroy
logwtmp
strtof128
epoll_create1
mkostemp
__pthread_cleanup_routine
wcscasecmp
__gconv_get_modules_db
get_kernel_syms
iruserok_af
_IO_adjust_column
__isnanf128
sys_sigabbrev
htons
strtof128_l
freeaddrinfo
futimens
fputc
mprobe
inet6_rth_init
__res_state
strrchr
_nss_files_init
__stpcpy
__pthread_mutex_init
tss_get
getdirentries64
ntohs
setlinebuf
gnu_get_libc_version
localeconv
msync
eaccess
herror
svcunix_create
__libc_msgrcv
_thread_db_sizeof_pthread_key_struct
scalbn
thrd_current
_dl_mcount_wrapper
__fortify_fail
__strcasecmp_l
setresgid
semtimedop
_pthread_cleanup_pop
atol
__bzero
sendfile64
pthread_timedjoin_np
pthread_cond_init
strfroml
thrd_exit
__wunderflow
__libc_early_init
strnlen
pthread_equal
setttyent
aio_read64
envz_get
getpt
_IO_fdopen
strtof64_l
__strdup
gtty
fgetws_unlocked
_IO_file_xsputn
__libc_dn_skipname
svctcp_create
clock_settime
__tolower_l
pwritev64v2
__nss_passwd_lookup
wcstof32_l
strfmon
hcreate_r
jrand48_r
rresvport_af
hasmntopt
__strcspn_c2
__strcoll_l
fsetxattr
xdr_cryptkeyres
_IO_wdoallocbuf
execlp
getrpcent
aio_cancel
pthread_rwlock_clockwrlock
__key_gendes_LOCAL
aio_write
pthread_setname_np
svcerr_progvers
inet6_option_alloc
__open
__wcsncpy_chk
timer_delete
_nss_files_getservent_r
fgetgrent_r
setegid
__wcstol_internal
iswlower
strfromf64
__xmknodat
pthread_rwlockattr_init
re_syntax_options
addseverity
_thread_db_dtv_slotinfo_gen
alphasort
clock_nanosleep
isgraph
posix_spawnattr_setsigmask
_flushlbf
swapcontext
_mcleanup
lio_listio
__backtrace_symbols
__libc_mallinfo
__tdelete
pthread_cond_wait
aio_return64
_IO_ftell
frexpf
__sigaddset
__libc_pread
shmdt
__nptl_death_event
getutmp
__pthread_unwind_next
_obstack_begin_1
vtimes
fts64_read
__wcsrtombs_chk
__recv_chk
_IO_fwrite
__mq_open_2
__open_2
__isoc99_swscanf
pthread_barrierattr_destroy
key_setnet
rpc_createerr
xdr_union
getdate_r
strtold
frexpl
utmpname
__libc_alloc_buffer_copy_bytes
wmemcpy
umount
setfsgid
memrchr
__vsprintf_chk
__res_ninit
register_printf_function
__default_morecore
_nss_files_getpwuid_r
xdr_longlong_t
__sched_yield
glob64
memccpy
wcsnlen
mkostemps64
__sched_get_priority_max
_obstack
pthread_rwlock_timedrdlock
_sys_siglist
_dl_argv
_nss_files_sethostent
mkostemps
open_memstream
abort
wcstof128
modf
_IO_file_init
_nss_files_endsgent
getrandom
getegid
strtof64x_l
_IO_list_all
_IO_vfprintf
sem_trywait
argz_delete
pthread_attr_getinheritsched
_nss_files_setprotoent
futimes
__libc_alloc_buffer_copy_string
_nss_files_setrpcent
__dn_skipname
strtoll
seteuid
wordexp
__rpc_thread_svc_max_pollfd
stdout
fstatvfs64
_thread_db_pthread_report_events
xdrrec_create
wcschrnul
user2netname
__wcstof128_internal
__isinf
__nss_files_data_endent
svc_register
msgget
__xmknod
envz_add
inet6_rth_space
updwtmp
mq_timedreceive
wmempcpy
__isalnum_l
lcong48_r
argz_add_sep
__idna_from_dns_encoding
clnttcp_create
__ctype32_toupper
dlmopen
explicit_bzero
_thread_db_td_eventbuf_t_eventnum
getchar
_nss_files_getgrent_r
getspnam
opterr
__madvise
sem_unlink
wcslen
__sched_getscheduler
__fstat64
__strspn_c2
clnt_perror
xencrypt
_IO_file_finish
__pthread_getspecific
sem_getvalue
_nss_files_getspnam_r
pthread_exit
pthread_getcpuclockid
_IO_list_unlock
registerrpc
pthread_tryjoin_np
dngettext
__iswprint_l
_IO_fclose
sem_post
fts_set
__nptl_change_stack_perm
xdrrec_eof
getdomainname
__libc_fcntl64
dlopen
memfd_create
asctime_r
__getpagesize
__pthread_mutexattr_destroy
error_at_line
modify_ldt
mq_timedsend
fgetpwent
argp_help
sigrelse
authnone_create
strpbrk
posix_spawn_file_actions_adddup2
__freelocale
ether_hostton
__swprintf_chk
sigabbrev_np
_thread_db_sizeof_list_t
personality
inet6_opt_append
__asprintf
_thread_db_pthread_eventbuf_eventmask_event_bits
__isnan
_thread_db_pthread_key_struct_destr
xdr_reference
svc_getreq_common
posix_spawnattr_setflags
inet_ntoa
mcheck
posix_spawnattr_setsigdefault
__toascii_l
__res_context_hostalias
_IO_switch_to_main_wget_area
bcopy
__res_nopt
_thread_db_pthread_key_struct_seq
__nptl_create_event
__libc_ifunc_impl_list
__iswctype_l
_IO_file_overflow
_IO_iter_next
__open64_2
__lxstat
getdate_err
dladdr
__sched_cpufree
timer_create
__sigismember
thrd_create
nrand48
_IO_proc_open
toascii
wcsxfrm
__stpncpy
__sendmmsg
__wcpcpy_chk
initstate_r
__vsnprintf_chk
prlimit
wcsrtombs
_thread_db_rtld_global__dl_stack_user
__curbrk
pthread_mutex_setprioceiling
__gettimeofday
_IO_list_lock
gethostbyname2
__key_decryptsession_pk_LOCAL
pthread_atfork
_nss_files_gethostbyname4_r
__strpbrk_c3
endutent
getnameinfo
strtof32_l
pthread_barrier_destroy
closefrom
xdr_hyper
putgrent
__abort_msg
pthread_attr_getaffinity_np
__internal_endnetgrent
__resp
llistxattr
mtx_init
__libc_alloc_buffer_alloc_array
getusershell
clntunix_create
pthread_attr_setscope
xdr_unixcred
_IO_flockfile
getsockname
__mbsrtowcs_chk
uname
mq_setattr
llseek
_thread_db_link_map_l_tls_modid
sched_setparam
authdes_pk_create
loc2
__nanosleep
frexp
pthread_sigmask
_dl_allocate_tls_init
fcloseall
accept4
aio_cancel64
__endmntent
ptrace
pthread_mutex_consistent
verr
_IO_default_finish
xprt_unregister
usleep
pthread_mutexattr_getpshared
pthread_clockjoin_np
wcspbrk
isupper
srand
__memmove_chk
_nss_files_getgrgid_r
__recv
mkdirat
pclose
wcsrchr
fdatasync
_nss_dns_gethostbyname4_r
__pthread_unregister_cancel
setstate
argp_failure
program_invocation_name
_thread_db_rtld_global__dl_tls_dtv_slotinfo_list
unsetenv
if_indextoname
mq_unlink
__strspn_c3
dysize
vwprintf
__sched_get_priority_min
__wcstold_l
lcong48
netname2host
__explicit_bzero_chk
__fpu_control
__isoc99_vscanf
readahead
malloc_info
posix_spawnattr_getpgroup
xdrstdio_create
__ns_name_compress
close_range
xdr_int64_t
accept
rexec
__wcstoll_l
aio_fsync
setuid
__stack_chk_fail
__libc_current_sigrtmin
xdr_enum
__iscntrl_l
pthread_rwlockattr_setpshared
argz_append
wait3
execvpe
endutxent
thrd_join
_IO_free_wbackup_area
getcontext
mrand48
tcflow
__fwritable
asctime
__libc_system
getdirentries
sigreturn
_nss_files_getpwent_r
_nss_files_getaliasbyname_r
hsearch_r
argz_replace
__nss_group_lookup
__rpc_thread_createerr
_nss_files_setpwent
__overflow
svcudp_bufcreate
if_freenameindex
pthread_rwlockattr_setkind_np
host2netname
__gconv_transliterate
_thread_db_pthread_key_data_data
__fpending
mktime
mkdtemp
_IO_sungetc
bindtextdomain
_nss_files_parse_pwent
mtx_timedlock
__wcstoull_l
localtime
pkey_free
clnt_pcreateerror
qsort
_dl_signal_error
clntraw_create
forkpty
_pthread_cleanup_push_defer
_IO_feof
getgrnam
getppid
fgets_unlocked
cnd_wait
_nl_default_dirname
__res_nsearch
xdr_bytes
xdr_replymsg
pthread_mutexattr_setprioceiling
lstat
pthread_getaffinity_np
__strcat_chk
getpass
getfsspec
fnmatch
__mbsnrtowcs_chk
flock
getaliasent
__getrlimit
__uflow
__libc_res_queriesmatch
sgetsgent
__res_send
isspace
__strerror_r
symlink
_nss_files_setservent
__open64_nocancel
__strtok_r_1c
nl_langinfo
__rpc_thread_svc_pollfd
fstat
__libc_dynarray_resize_clear
pwritev2
isatty
__strncpy_chk
_thread_db_dtv_slotinfo_map
_nss_files_parse_sgent
re_exec
__vsyslog_chk
_IO_2_1_stderr_
strfry
__mbrlen
__libc_ns_makecanon
_nss_files_endnetent
argz_create
_IO_str_underflow
xdr_opaque
pthread_mutex_consistent_np
acct
strtouq
authunix_create
freopen64
_IO_iter_file
__sched_setscheduler
ether_ntohost
quotactl
__rcmd_errstr
getnetgrent
svcudp_create
__setpgid
fchownat
gai_suspend
call_once
fchflags
_nss_dns_getnetbyname_r
__res_nclose
faccessat
ftruncate64
mq_close
__isoc99_vwscanf
bcmp
__isascii_l
creat
__memcmpeq
__libc_unwind_link_get
pmap_getmaps
putmsg
getrlimit64
getfsent
_obstack_allocated_p
__tsearch
strtok
getchar_unlocked
pthread_attr_getstacksize
__fxstatat64
netname2user
pthread_cond_destroy
rewinddir
pmap_rmtcall
closedir
__pthread_mutexattr_init
fileno
__sched_cpualloc
mq_receive
pthread_spin_destroy
inet6_option_space
wcsncat
readlink
mtx_trylock
__wcstold_internal
__ctype_b
obstack_vprintf
__morecore
_IO_file_doallocate
mq_send
mrand48_r
pthread_yield
mq_notify
wctomb
putchar
pthread_mutexattr_setrobust
__strtoull_internal
__fxstat
getfsfile
__assert_perror_fail
__isalpha_l
timer_gettime
mallwatch
pthread_rwlockattr_getpshared
lio_listio64
nftw64
__isoc99_scanf
init_module
_dl_rtld_di_serinfo
fgetws
__nss_hosts_lookup
preadv
__ns_name_pack
__libc_rpc_getport
_nss_files_gethostent_r
strsep
_thread_db_rtld_global__dl_stack_used
putsgent
__ctype_init
__pread_chk
fts64_set
timerfd_settime
moncontrol
svcerr_noproc
drand48
_IO_wdefault_doallocate
__argz_count
__isoc99_vsscanf
_thread_db_pthread_specific
svc_getreqset
__isnanl
_IO_ftrylockfile
xdr_getcredres
remap_file_pages
_nss_files_getspent_r
pthread_setcanceltype
ffsl
lockf64
listen
pkey_mprotect
__strsep_g
lgetxattr
__isnanf
error_print_progname
sgetspent_r
getttynam
execvp
sync_file_range
vwarn
_authenticate
inotify_init1
strtoq
__libc_fatal
ftok
_dl_signal_exception
_thread_db___nptl_last_event
pthread_setconcurrency
_IO_file_read
_IO_fgetpos64
inet6_option_find
getnetbyaddr
pthread_key_delete
__lxstat64
__xstat64
ferror_unlocked
pthread_attr_init
_thread_db_pthread_tid
stderr
authdes_create
ether_line
xdr_float
shmget
__assert
tmpnam
__isoc99_fwscanf
a64l
getnetbyname
_IO_wdefault_finish
tmpfile64
ruserpass
openpty
fstatvfs
sigignore
pthread_cond_signal
__xpg_basename
__netlink_assert_response
mblen
getsourcefilter
qgcvt
getcwd
_IO_default_xsputn
_IO_setvbuf
obstack_exit_failure
pthread_mutex_getprioceiling
__file_is_unchanged
create_module
updwtmpx
__nss_hosts_lookup2
mkstemp
ttyname_r
freeifaddrs
__vfprintf_chk
scandirat64
clnt_perrno
xdr_authunix_parms
fgetwc
__socket
strerrordesc_np
_nss_files_setnetgrent
__res_nquery
authdes_getucred
__readlinkat_chk
__pthread_mutex_lock
timerfd_gettime
__printf_fp
__libc_mallopt
c16rtomb
_nss_files_endpwent
_IO_str_pbackfail
readdir64_r
__iswspace_l
__pthread_rwlock_trywrlock
__vfork
openat64
getlogin_r
xdr_uint16_t
freopen
lsearch
clearenv
clock_getcpuclockid
pthread_spin_init
strtof64x
re_max_failures
_IO_wsetb
_nss_dns_getnetbyaddr_r
wcstof128_l
login_tty
posix_spawn_file_actions_addopen
pthread_setattr_default_np
__memset_chk
pkey_get
__wcrtomb_chk
_IO_wmarker_delta
__libc_reallocarray
tmpfile
_dl_exception_create
__asprintf_chk
xdr_netobj
lfind
dlvsym
__sigdelset
pthread_cond_timedwait
gethostbyname
_IO_init_marker
__wcsnrtombs_chk
argz_extract
_IO_seekoff
key_secretkey_is_set
__libc_current_sigrtmax
_IO_file_attach
initstate
waitid
qecvt
posix_spawn_file_actions_addchdir_np
getitimer
__inet6_scopeid_pton
xdr_callmsg
pthread_mutexattr_getprioceiling
_thread_db_dtv_dtv
__openat64_2
fputws_unlocked
sethostid
__ns_name_skip
tss_create
_thread_db_sizeof_pthread_key_data_level2
pthread_condattr_setpshared
pthread_barrierattr_getpshared
fts_open
wcschr
_obstack_begin
symlinkat
sem_clockwait
tcsendbreak
vmsplice
pthread_attr_getscope
xdr_cryptkeyarg2
__internal_setnetgrent
__sysconf
__nss_passwd_lookup2
_IO_file_fopen
setusershell
__mktemp
_thread_db_pthread_key_data_level2_data
__wcstoul_internal
aio_write64
vsyslog
envz_entry
__key_encryptsession_pk_LOCAL
gai_error
_nss_files_getntohost_r
wcsstr
wcsdup
get_nprocs
getentropy
inet6_rth_segments
ulckpwdf
wcswcs
argz_create_sep
wcstombs
_thread_db_pthread_list
rcmd
__idna_to_dns_encoding
sigwaitinfo
__resolv_context_get
pthread_attr_getstack
pthread_mutexattr_setpshared
_nss_files_endservent
pthread_spin_unlock
mremap
_IO_wdefault_xsputn
xdr_authdes_verf
__pthread_rwlock_wrlock
__ptsname_r_chk
_thread_db_pthread_cancelhandling
_dl_audit_symbind_alt
__poll_chk
__signbitf
_IO_str_seekoff
__strncasecmp_l
aio_suspend64
envz_remove
setrlimit
__wcstombs_chk
__getdomainname_chk
pthread_attr_setschedparam
pthread_testcancel
strptime
setlogin
confstr
ioperm
epoll_ctl
__wcstoll_internal
__strtof128_internal
realpath
__pthread_register_cancel
__signbitl
_IO_wfile_overflow
capget
vasprintf
fwide
getutid
sched_getcpu
_nss_files_getaliasent_r
rindex
sendmsg
_nss_files_gethostbyname3_r
strtoumax
_nss_files_getgrnam_r
__wcscoll_l
tcgetpgrp
siginterrupt
__gmtime_r
pselect
epoll_create
strncasecmp
strcpy
chroot
callrpc
pthread_mutex_timedlock
__strtof_internal
xdr_rejected_reply
__backtrace_symbols_fd
argp_program_version
__strtoull_l
inet_lnaof
des_setparity
unshare
mq_open
__strtol_l
_thread_db_td_thr_events_t_event_bits
aio_error
srand48
__isupper_l
__memalign_hook
__pthread_rwlock_destroy
nrand48_r
obstack_printf
wcstof64
__sprintf_chk
_IO_gets
sigset
__res_context_query
shutdown
_IO_default_pbackfail
pthread_attr_setstack
_nss_files_getservbyname_r
__getpid
re_search
__mempcpy_small
ptsname
vwarnx
__monstartup
__wait
__wctype_l
svcauthdes_stats
gethostent
__uselocale
mbtowc
llabs
__sigtimedwait
__x86_get_cpuid_feature_leaf
gethostid
putwchar_unlocked
__fprintf_chk
ctermid
sstk
__gconv_get_alias_db
creat64
fchmodat
readdir_r
thrd_yield
_IO_fsetpos
wcsncpy
pkey_set
wcsftime
__close_nocancel
aio_init
_nss_files_setaliasent
_nss_dns_gethostbyname3_r
__sysv_signal
_nss_netgroup_parseline
step
hsearch
cnd_signal
__vswprintf_chk
srand48_r
gnu_get_libc_release
_IO_switch_to_wbackup_area
c32rtomb
__iswcntrl_l
_dl_find_dso_for_object
__signbit
_nss_files_getservbyport_r
futimesat
__freadable
mallinfo2
_IO_getc
fts64_close
_rpc_dtablesize
__nss_database_lookup
setsockopt
sendto
_nss_files_setsgent
__vfscanf
getwd
cfgetispeed
__ctype_toupper_loc
__libc_clntudp_bufcreate
__strcpy_chk
pthread_barrierattr_init
__fread_chk
key_gendes
__res_search
sgetsgent_r
__check_rhosts_file
svcerr_decode
__nss_disable_nscd
__clock_gettime
difftime
strcat
vswprintf
psignal
_IO_printf
inet_network
mkstemp64
key_setsecret
_obstack_free
lstat64
__strfmon_l
fstatat64
re_comp
wmemcmp
geteuid
__free_hook
_null_auth
_IO_fgets
__isgraph_l
getutxline
__libc_sigaction
rexec_af
__strxfrm_l
aligned_alloc
__libc_fork
tgkill
renameat
_nss_files_initgroups_dyn
__realloc_hook
pivot_root
__iswupper_l
fanotify_mark
advance
if_nametoindex
xdr_u_long
clnt_spcreateerror
pthread_attr_getguardsize
inet6_opt_finish
isascii
revoke
iconv_close
xdr_u_quad_t
fgetxattr
setresuid
posix_spawn_file_actions_init
getservbyname
__libc_stack_end
__res_init
optind
_IO_2_1_stdin_
timespec_getres
__fentry__
iswupper
__h_errno
__isoc99_wscanf
pthread_mutexattr_setkind_np
__strcasestr
__strndup
dlclose
xdr_netnamestr
__fgetws_chk
__strverscmp
_IO_file_open
__iswxdigit_l
__recvfrom_chk
wcstouq
_IO_file_sync
__call_tls_dtors
fstatat
_nss_files_endprotoent
__iswdigit_l
key_decryptsession
__getcwd_chk
__libc_scratch_buffer_grow_preserve
mkstemps
_thread_db_pthread_eventbuf_eventmask
__getdelim
program_invocation_short_name
inet6_option_append
_IO_switch_to_get_mode
pthread_detach
inotify_init
__ctype32_b
_nss_files_endgrent
__inet_aton_exact
fdetach
_nss_files_getprotobyname_r
pthread_mutexattr_setrobust_np
execl
group_member
__read
register_printf_modifier
bdflush
islower
vdprintf
tcsetattr
_thread_db_dtv_t_counter
fread_unlocked
__gets_chk
isblank
xdr_int16_t
svcunixfd_create
_IO_peekc_locked
posix_fallocate64
xdr_pmaplist
__file_change_detection_for_stat
__libc_free
__newlocale
__res_iclose
__mmap
_IO_do_write
__pread64_chk
_IO_proc_close
__strtoul_internal
pthread_kill_other_threads_np
wcstoumax
sched_rr_get_interval
ether_ntoa
key_encryptsession_pk
globfree64
__libc_dn_expand
_obstack_memory_used
inet6_option_init
sigdescr_np
__libc_freeres
argz_insert
__nss_hostname_digits_dots
setlogmask
__poll
_IO_file_jumps
thrd_sleep
xdr_opaque_auth
atoi
_thread_db_pthread_start_routine
_IO_wfile_xsputn
_thread_db_pthread_key_data_seq
_thread_db_sizeof_dtv_slotinfo_list
tcsetpgrp
clock_getres
wcwidth
get_myaddress
__iswgraph_l
lseek64
strftime
inet6_rth_reverse
getttyent
__wmemcpy_chk
_IO_sputbackwc
error_message_count
__libc_msgsnd
xdr_void
__libc_dynarray_at_failure
getdate
fputws
gmtime
utmpxname
strsignal
pthread_mutexattr_getprotocol
xdr_accepted_reply
optopt
_IO_iter_begin
iconv_open
cnd_destroy
rtime
_IO_getline_info
__wcstof_internal
pthread_setschedparam
__nss_files_fopen
timelocal
tcdrain
_dl_allocate_tls
__obstack_vprintf_chk
xdr_u_longlong_t
wcstol
posix_spawnattr_setschedparam
__fread_unlocked_chk
addmntent
__nss_readline
__wctrans_l
passwd2des
hstrerror
ssignal
regexec
__pthread_mutex_trylock
initgroups
_IO_wdefault_xsgetn
__freading
strspn
query_module
__vwprintf_chk
isxdigit
_nss_files_getrpcbyname_r
timer_getoverrun
setdomainname
pmap_unset
mbsrtowcs
__posix_getopt
iscntrl
__libc_res_hnok
pthread_create
__res_mailok
iswalpha
sigandset
semop
__dn_expand
__write
msgctl
mkostemp64
__close
putw
_IO_unsave_markers
_IO_least_wmarker
wcstof
getopt_long
posix_spawnattr_getschedparam
__iswalnum_l
wcstod
_IO_adjust_wcolumn
_nl_msg_cat_cntr
key_get_conv
wcstoimax
dcngettext
getlogin
posix_spawnp
rand_r
putpmsg
timerfd_create
__strtof_nan
setipv4sourcefilter
__isctype
ntohl
__fgets_unlocked_chk
syncfs
setsourcefilter
__daylight
fpathconf
__mempcpy_chk
shm_open
__openat_2
_thread_db_list_t_prev
wcstof64x_l
__isinff
fputwc
__fwprintf_chk
__res_querydomain
argz_add
__wcsftime_l
_nl_domain_bindings
svc_sendreply
vhangup
_thread_db_sizeof_td_eventbuf_t
_nss_files_getnetbyaddr_r
__memcpy_chk
alphasort64
pthread_attr_setsigmask_np
clock_adjtime
mkdir
bind_textdomain_codeset
pthread_sigqueue
__isinfl
getopt_long_only
_nss_files_parse_etherent
getwchar
wcscoll
cuserid
if_nameindex
fmtmsg
argp_program_bug_address
inet_netof
execle
mcheck_pedantic
__mprotect
_IO_doallocbuf
_nss_files_getpwnam_r
_IO_funlockfile
innetgr
_seterr_reply
__res_hnok
__mbstowcs_chk
printf_size
htonl
fstatfs
xdr_short
clnt_broadcast
_thread_db_pthread_schedpolicy
towupper
erand48
sigpending
getw
xdr_string
ether_aton_r
getpw
getutid_r
_IO_getline
cbc_crypt
mincore
_IO_iter_end
iopl
dladdr1
stty
pthread_getconcurrency
mmap64
xdr_long
sem_destroy
_nss_files_gethostbyaddr_r
getrusage
__mbrtowc
__adjtimex
__strtol_internal
wcpncpy
lrand48
sem_close
__wcsxfrm_l
setfsuid
__dprintf_chk
xdr_array
getservent
pthread_setschedprio
getloadavg
swapon
_dl_audit_preinit
_IO_sgetn
__statfs
tempnam
_IO_fprintf
__libc_dynarray_emplace_enlarge
openat
signalfd
bsd_signal
__fwriting
__ivaliduser
preadv64
__libc_alloca_cutoff
__snprintf_chk
_nss_files_endhostent
__isoc99_sscanf
svc_run
strtof32x_l
timegm
wcstof64_l
__wcstod_l
fgetspent
pwritev
wcstoll
grantpt
eventfd_read
re_compile_pattern
svc_unregister
_Exit
strcoll
_nss_files_parse_grent
__strsep_3c
wcscmp
__pthread_rwlock_unlock
__fbufsize
__stpncpy_chk
erand48_r
argp_error
__fdelt_warn
statx
xdr_u_short
__waitpid
ispunct
xdr_uint32_t
__towctrans
vlimit
socketpair
gethostbyaddr
endttyent
inet_nsap_ntoa
wmemmove
mlock2
sem_init
_thread_db_dtv_slotinfo_list_next
_nss_files_getnetgrent_r
posix_spawnattr_destroy
lchown
__pthread_mutexattr_settype
__wcscpy_chk
__libc_dlerror_result
bsearch
__resolv_context_get_override
dup3
wctob
sigaltstack
execv
getnetname
svcfd_create
__gethostname_chk
catclose
fgetwc_unlocked
versionsort
__fxstat64
ether_aton
__strsep_2c
_thread_db_pthread_dtvp
_nss_files_endetherent
malloc_usable_size
__strtod_internal
_pthread_cleanup_pop_restore
__read_nocancel
__sbrk
_IO_vfscanf
thrd_equal
__pthread_get_minstack
mbrtoc32
fattach
getservbyport
pututline
_IO_wfile_sync
_nss_files_endnetgrent
in6addr_loopback
stdin
munlockall
setgroups
__res_dnok
__ctype_get_mb_cur_max
xdr_uint64_t
utime
euidaccess
preadv2
mq_getattr
xdr_rmtcall_args
prlimit64
__nss_hash
get_current_dir_name
glob
strfromf32x
__libc_calloc
__cxa_at_quick_exit
fexecve
on_exit
renameat2
__iswlower_l
__stpcpy_small
__mempcpy
_nss_dns_gethostbyname_r
pthread_getattr_default_np
epoll_pwait2
posix_spawnattr_getschedpolicy
_IO_padn
lsetxattr
setitimer
xdr_keystatus
isdigit
_thread_db_sizeof_pthread_key_data
glob_pattern_p
__inet_pton_length
feof_unlocked
fstatfs64
_nss_dns_gethostbyname2_r
xdr_callhdr
__libc_sa_len
__libc_res_dnok
__libc_res_nameinquery
xdr_u_int
xdr_uint8_t
getnetent
__libc_pvalloc
xdr_rmtcallres
readlinkat
wcstold
xdr_int8_t
cfgetospeed
_IO_seekpos
clnt_sperrno
__nptl_version
__towupper_l
__sigpause
__timezone
__res_ownok
__nss_next
_IO_file_underflow
inet_makeaddr
__strcspn_c3
dl_iterate_phdr
_IO_putc
regfree
_IO_wdefault_uflow
pthread_attr_getstackaddr
pthread_condattr_getpshared
pthread_attr_destroy
_nss_files_getprotobynumber_r
xdr_key_netstres
catopen
timespec_get
pthread_mutexattr_getrobust
__strspn_c1
__rawmemchr
pthread_mutexattr_setprotocol
cfree
tcgetsid
__strtold_l
seed48
pthread_attr_getschedparam
__xpg_strerror_r
mkfifo
wordfree
inotify_add_watch
_IO_list_resetlock
__gconv_open
bindresvport
posix_spawn_file_actions_addtcsetpgrp_np
fseek
_IO_enable_locks
getrpcbyname
__res_get_nsaddr
getutmpx
__strtod_l
__sysctl
envz_strip
__res_context_search
posix_spawnattr_getsigdefault
ntp_gettimex
xdr_u_char
strncpy
__tfind
getifaddrs
sched_getaffinity
_setjmp
jrand48
pthread_attr_getsigmask_np
getutxid
srandom
__towctrans_l
__strcasecmp
shmctl
iswprint
__wmemset_chk
_IO_fflush
__res_nquerydomain
__res_query
getprotobynumber
_IO_init
__backtrace
posix_spawnattr_setschedpolicy
__nss_services_lookup2
__arch_prctl
inet_ntop
lchmod
regerror
ioctl
_nss_files_endaliasent
__copy_grp
getpmsg
closelog
getaddrinfo
__fdelt_chk
fchmod
syscall
__open64
makecontext
svc_getreq
_thread_db_link_map_l_tls_offset
_IO_puts
_IO_popen
capset
getresuid
_nss_dns_getcanonname_r
_IO_ferror
epoll_pwait
__ftello64
__wcstoull_internal
setreuid
__wmemmove_chk
fgetc_unlocked
gnu_dev_makedev
__sched_cpucount
isfdtype
inet6_opt_init
l64a
__res_context_send
_nss_files_setgrent
__fcntl
posix_spawn
_res
__gconv_create_spec
__strtod_nan
_pthread_cleanup_push
__wuflow
endfsent
_IO_2_1_stdout_
__dup2
_nss_files_getrpcbynumber_r
__islower_l
inet6_opt_set_val
gai_strerror
xdr_double
__wcsncat_chk
_IO_sprintf
__strncat_chk
getutline
recvfrom
__isblank_l
__tzname
ualarm
__libc_memalign
__resolv_context_put
__xstat
__strtof_l
fgetsgent
__setmntent
posix_openpt
_nss_files_endrpcent
_nss_dns_gethostbyaddr2_r
_IO_fgetpos
sigemptyset
pmap_set
posix_fadvise
__wctomb_chk
isalnum
wait4
putchar_unlocked
wcstof32x
dlsym
_IO_setb
process_vm_writev
canonicalize_file_name
xdr_int32_t
__strtok_r
xdrmem_create
__wcscat_chk
__iswctype
__munmap
getprotoent
semctl
getpwnam
_IO_str_overflow
copysignf
__isprint_l
__duplocale
re_set_syntax
__res_mkquery
__strtof128_nan
_IO_init_wmarker
__argz_next
pmap_getport
hdestroy
munlock
pthread_cancel
__libc_enable_secure
srandom_r
xdr_vector
reboot
_IO_file_seek
sigisemptyset
__towlower_l
memfrob
__lseek
argp_state_help
wcpcpy
xprt_register
inet_aton
_thread_db_pthread_nextevent
__send
__xpg_sigpause
__nss_group_lookup2
pthread_rwlockattr_destroy
sockatmark
__fgets_chk
pthread_attr_setschedpolicy
vfwprintf
__iswalpha_l
strtof
xdr_u_hyper
modff
__isdigit_l
getgroups
telldir
__strcspn_c1
__sched_getparam
xdr_wrapstring
_IO_file_close_it
scandir64
posix_fadvise64
fremovexattr
strtof32
pthread_attr_setdetachstate
setutxent
strtoul
_IO_link_in
_IO_vsprintf
_IO_setbuffer
_IO_sputbackc
iswspace
modfl
__finitef
register_printf_type
__ns_name_uncompress
__resolv_context_get_preinit
__isoc99_vfwscanf
_IO_seekwmark
pthread_spin_trylock
re_compile_fastmap
__cxa_atexit
_nss_files_getsgent_r
re_match_2
_IO_file_close
getpwuid
__snprintf
__nl_langinfo_l
_IO_file_write
wcswidth
posix_memalign
dirfd
_nss_files_parse_rpcent
_IO_fopen
authunix_create_default
__file_change_detection_for_path
__finitel
name_to_handle_at
rpmatch
__vfwprintf_chk
_nss_files_parse_netent
copysignl
__isspace_l
__ns_name_pton
ptsname_r
sysinfo
argp_usage
scandirat
utimensat
__syslog_chk
__wcstof_l
__ispunct_l
_rtld_global_ro
fseeko
remque
strtoimax
getpriority
_IO_marker_delta
klogctl
fts_close
getsgnam
sendfile
iswblank
globfree
getuid
_nss_files_endspent
malloc_trim
iconv
register_printf_specifier
_thread_db___nptl_rtld_global
posix_spawnattr_getflags
get_phys_pages
__res_randomid
argp_parse
bind
__connect
_IO_file_seekoff
unlockpt
xdr_cryptkeyarg
swab
strlen
process_vm_readv
wcsncasecmp
strtod
sigwait
__flbf
_thread_db_sizeof_pthread
setgid
__wmempcpy_chk
tdestroy
ffsll
qfcvt
__underflow
pthread_setcancelstate
openlog
getgrgid
error_one_per_line
ldexpl
strtol
nfsservctl
eventfd
__read_chk
xdecrypt
clnt_create
strchrnul
_nss_files_gethostton_r
insque
__dgettext
mbstowcs
__strsep_1c
cfsetospeed
__tls_get_addr
ether_ntoa_r
catgets
sigsetmask
_nss_files_getsgnam_r
strncat
posix_spawnattr_setpgroup
__getwd_chk
wcsncmp
ppoll
__finite
inet_nsap_addr
inet6_opt_get_val
_thread_db___nptl_nthreads
gethostname
pthread_condattr_init
svcerr_weakauth
__getmntent_r
_IO_sungetwc
parse_printf_format
readdir64
setrlimit64
re_set_registers
nice
svcudp_enablecache
mbsnrtowcs
pthread_join
putwchar
svcraw_create
getpublickey
getgrouplist
__bsd_getpgrp
_res_hconf
_thread_db_pthread_schedparam_sched_priority
__pthread_rwlock_tryrdlock
__pthread_mutex_unlock
clearerr_unlocked
__wcpncpy_chk
getutent
__strtold_nan
__getpgid
mbsinit
fts_read
in6addr_any
get_avphys_pages
fputs_unlocked
mkfifoat
__libc_pwrite
sigstack
_thread_db_dtv_slotinfo_list_slotinfo
rresvport
__twalk
_IO_wdo_write
_nss_files_parse_servent
qsort_r
__libc_malloc
pthread_attr_getschedpolicy
ntp_gettime
__file_change_detection_for_fp
clearerr
pthread_mutexattr_getkind_np
__libc_allocate_once_slow
fdopendir
__nss_lookup
execveat
rename
__nss_files_data_put
seekdir
ttyname
__dn_comp
rcmd_af
__res_nsend
__wcstol_l
__nss_files_data_open
shm_unlink
inet_pton
getutent_r
_nss_files_getetherent_r
_IO_wfile_seekoff
tcgetattr
mkstemps64
_IO_fread
__progname
_IO_wdefault_pbackfail
xdr_pointer
svcerr_noprog
xdr_int
_nss_files_gethostbyname_r
getsockopt
shmat
getrpcbynumber
pthread_getschedparam
tcflush
fts_children
localtime_r
fts64_open
memmem
sigvec
__wcstod_internal
h_errlist
drand48_r
posix_madvise
__tunable_get_val
eventfd_write
__isoc99_vswscanf
__wprintf_chk
__pthread_setspecific
ldexpf
iswgraph
ftello
hcreate
_nss_files_getrpcent_r
__vsscanf
__strtoll_internal
iruserok
fgetspent_r
getpeername
semget
_nss_files_parse_spent
_longjmp
__after_morecore_hook
__pthread_once
swapoff
pkey_alloc
__environ
recvmmsg
getutxent
putenv
argp_err_exit_status
fgetgrent
__twalk_r
_thread_db_sizeof_dtv_slotinfo
__internal_getnetgrent_r
__vdprintf_chk
wcsspn
svcerr_auth
__libc_alloc_buffer_allocate
pthread_mutexattr_getrobust_np
fgetsgent_r
__nss_lookup_function
__clone
_mcount
xdr_quad_t
__progname_full
__assert_fail
__strftime_l
_IO_wfile_underflow
putspent
argp_program_version_hook
inet6_option_next
_IO_seekmark
wcstof32
__errno_location
iswpunct
wcstof64x
__libc_dynarray_finalize
__longjmp_chk
_thread_db_dtv_t_pointer_val
getgid
__dcgettext
lutimes
strerrorname_np
_nss_files_setnetent
optarg
__lll_lock_wait_private
__profile_frequency
_IO_free_backup_area
pthread_attr_setstacksize
__vprintf_chk
__lll_lock_wake_private
_IO_fputs
getresgid
printf_size_info
setstate_r
__cyg_profile_func_exit
strcmp
qfcvt_r
mlock
posix_spawnattr_getsigmask
ulimit
__pthread_rwlock_rdlock
__ppoll_chk
hdestroy_r
_nss_dns_gethostbyaddr_r
wmemset
svcerr_systemerr
__strtoll_l
_libc_intl_domainname
_IO_default_doallocate
settimeofday
inotify_rm_watch
fchown
_thread_db_list_t_next
__ns_name_ntop
fchdir
open_wmemstream
fwrite_unlocked
envz_merge
pthread_attr_getdetachstate
__cxa_thread_atexit_impl
_IO_str_init_readonly
posix_fallocate
__libc_alloc_buffer_create_failure
readdir
ld-linux-x86-64.so.2
libc.so.6
GLIBC_2.2.5
GLIBC_2.2.6
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.3
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.5
GLIBC_2.6
GLIBC_2.7
GLIBC_2.8
GLIBC_2.9
GLIBC_2.10
GLIBC_2.11
GLIBC_2.12
GLIBC_2.13
GLIBC_2.14
GLIBC_2.15
GLIBC_2.16
GLIBC_2.17
GLIBC_2.18
GLIBC_2.22
GLIBC_2.23
GLIBC_2.24
GLIBC_2.25
GLIBC_2.26
GLIBC_2.27
GLIBC_2.28
GLIBC_2.29
GLIBC_2.30
GLIBC_2.31
GLIBC_2.32
GLIBC_2.33
GLIBC_2.34
GLIBC_2.35
GLIBC_PRIVATE
CAk[S
H P@
 Q8	 o
&,f%
H^M 
C( @
@C& 
g6+}SXp_
nXc#M:
}']6
N`-Y
y}\R
xDdf
3@A^
 9+L
Ze:!
:Ke<
>B`3
fW5r
]=_sy?
=+({Z
T|w\
l1$H
`Xp2
8MzY
~j%d
\9Kqf
6Y(O
dgGk
p1]i
9Sx:
	vDZ
@}U<r
QQ#q
INuO\?
JwOQ
"/q&
KcTNDB
)Lmo
\b+3
IS-Y
g3~),oOz
|qNH;
NDB>D
,sY~
ka}+6
ia9U
Kqa-!
Kqu<a
{s[f
f|'="O+
9SV^
uD\xY
86ZyX
|Qnr
ARId
i3M0
="O~
%:wV
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_LIB_VERSION
matherr
__signgam
__stack_chk_fail
feclearexcept
fegetexceptflag
feraiseexcept
fesetexceptflag
fetestexcept
fegetround
fesetround
fegetenv
feholdexcept
fesetenv
feupdateenv
fedisableexcept
feenableexcept
fegetexcept
fesetexcept
fetestexceptflag
fegetmode
fesetmode
errno
atan2f64x
atan2l
exp2f64x
exp2l
exp10f64x
exp10l
pow10l
fmodf64x
fmodl
hypotf64x
hypotl
j0f64x
y0f64x
j1f64x
y1f64x
jnf64x
ynf64x
log2f64x
log2l
dreml
remainderf64x
remainderl
scalbl
tgammaf64x
tgammal
lgammaf64x_r
lgammal_r
lgammaf64x
lgammal
atan2f32x
atan2f64
atan2
exp2
exp10f32x
exp10f64
exp10
pow10
fmodf32x
fmodf64
fmod
hypot
j0f32x
j0f64
y0f32x
y0f64
j1f32x
j1f64
y1f32x
y1f64
jnf32x
jnf64
ynf32x
ynf64
log2
drem
remainderf32x
remainderf64
remainder
scalb
f32xsqrtf64
tgammaf32x
tgammaf64
tgamma
lgammaf32x_r
lgammaf64_r
lgamma_r
lgammaf32x
lgammaf64
lgamma
stderr
fwrite
fputs
__assert_fail
atan2f32
atan2f
exp2f
exp10f
pow10f
fmodf32
fmodf
hypotf
j0f32
y0f32
j1f32
y1f32
jnf32
ynf32
log2f
dremf
remainderf32
remainderf
scalbf
tgammaf32
tgammaf
lgammaf32_r
lgammaf_r
lgammaf32
lgammaf
__acosl_finite
__acoshl_finite
__asinl_finite
__atan2l_finite
__atanhl_finite
__coshl_finite
__expl_finite
__fmodl_finite
__hypotl_finite
__j0l_finite
__y0l_finite
__j1l_finite
__y1l_finite
__jnl_finite
__ynl_finite
__lgammal_r_finite
__logl_finite
__log10l_finite
__powl_finite
__remainderl_finite
__sinhl_finite
__sqrtl_finite
__gammal_r_finite
cbrtf64x
cbrtl
ceill
ceilf64x
erff64x
erfl
erfcf64x
erfcl
expm1l
expm1f64x
fabsl
fabsf64x
floorl
floorf64x
nexttowardl
nextafterf64x
nextafterl
__fpclassifyl
truncl
truncf64x
remquof64x
remquol
__log2l_finite
nearbyintl
nearbyintf64x
sincosf64x
sincosl
llrintl
llrintf64x
llroundf64x
llroundl
__exp10l_finite
__issignalingl
__finitel
copysignl
copysignf64x
modff64x
modfl
frexpf64x
frexpl
__signbitl
scalbnf64x
scalbnl
ldexpf64x
ldexpl
qsort
nextupf64x
nextupl
totalorderl
totalorderf64x
totalordermagl
totalordermagf64x
getpayloadf64x
getpayloadl
setpayloadf64x
setpayloadl
setpayloadsigf64x
setpayloadsigl
roundevenf64x
roundevenl
ufromfpf64x
ufromfpl
ufromfpxf64x
ufromfpxl
cargf64x
cargl
conjf64x
conjl
cimagf64x
cimagl
crealf64x
creall
cabsf64x
cabsl
__scalbl_finite
cacosf64x
cacosl
cacoshf64x
cacoshl
ccosf64x
ccosl
ccoshf64x
ccoshl
casinf64x
casinl
csinf64x
csinl
casinhf64x
casinhl
csinhf64x
csinhl
catanhf64x
catanhl
catanf64x
catanl
ctanf64x
ctanl
ctanhf64x
ctanhl
cexpf64x
cexpl
clogf64x
clogl
cprojf64x
cprojl
csqrtf64x
csqrtl
cpowf64x
cpowl
__clog10l
clog10f64x
fdimf64x
fdiml
nextdownf64x
nextdownl
fmaxl
fmaxf64x
fminl
fminf64x
__strtold_nan
nanf64x
nanl
__iseqsigl
canonicalizef64x
canonicalizel
significandl
ilogbf64x
ilogbl
llogbf64x
llogbl
log1pf64x
log1pl
scalblnf64x
scalblnl
fmaxmagf64x
fmaxmagl
fminmagf64x
fminmagl
__exp2l_finite
fmaximumf64x
fmaximuml
fmaximum_magf64x
fmaximum_magl
fmaximum_numf64x
fmaximum_numl
fmaximum_mag_numf64x
fmaximum_mag_numl
fminimumf64x
fminimuml
fminimum_magf64x
fminimum_magl
fminimum_numf64x
fminimum_numl
fminimum_mag_numf64x
fminimum_mag_numl
__acosh_finite
_rtld_global_ro
__asin_finite
__acos_finite
__atan2_finite
__atanh_finite
__cosh_finite
__exp_finite
__fmod_finite
hypotf32x
hypotf64
__hypot_finite
__j0_finite
__y0_finite
__j1_finite
__y1_finite
__jn_finite
__yn_finite
__lgamma_r_finite
__log_finite
__log10_finite
__pow_finite
__remainder_finite
__sinh_finite
__sqrt_finite
__gamma_r_finite
cbrtf32x
cbrtf64
cbrt
ceilf32x
ceilf64
ceil
erff32x
erff64
erfcf32x
erfcf64
erfc
expm1f32x
expm1f64
expm1
fabsf32x
fabsf64
fabs
floorf32x
floorf64
floor
nextafterf32x
nextafterf64
nextafter
nexttoward
__fpclassify
truncf32x
truncf64
trunc
remquof32x
remquof64
remquo
log2f32x
log2f64
__log2_finite
nearbyintf32x
nearbyintf64
nearbyint
sincosf32x
sincosf64
sincos
f32xfmaf64
llrint
llrintf64
llrintf32x
llroundf32x
llroundf64
llround
__exp10_finite
__issignaling
__finite
copysign
copysignf64
copysignf32x
modff32x
modff64
frexpf32x
frexpf64
frexp
__signbit
scalbnf32x
scalbnf64
scalbn
ldexpf32x
ldexpf64
ldexp
nextupf32x
nextupf64
nextup
totalorder
totalorderf64
totalorderf32x
totalordermag
totalordermagf64
totalordermagf32x
getpayloadf32x
getpayloadf64
getpayload
setpayloadf32x
setpayloadf64
setpayload
setpayloadsigf32x
setpayloadsigf64
setpayloadsig
roundevenf32x
roundevenf64
roundeven
ufromfpf32x
ufromfpf64
ufromfp
ufromfpxf32x
ufromfpxf64
ufromfpx
cargf32x
cargf64
carg
conjf32x
conjf64
conj
cimagf32x
cimagf64
cimag
crealf32x
crealf64
creal
cabsf32x
cabsf64
cabs
__scalb_finite
cacosf32x
cacosf64
cacos
cacoshf32x
cacoshf64
cacosh
ccosf32x
ccosf64
ccos
ccoshf32x
ccoshf64
ccosh
casinf32x
casinf64
casin
csinf32x
csinf64
csin
casinhf32x
casinhf64
casinh
csinhf32x
csinhf64
csinh
catanhf32x
catanhf64
catanh
catanf32x
catanf64
catan
ctanf32x
ctanf64
ctan
ctanhf32x
ctanhf64
ctanh
cexpf32x
cexpf64
cexp
clogf32x
clogf64
clog
cprojf32x
cprojf64
cproj
csqrtf32x
csqrtf64
csqrt
cpowf32x
cpowf64
cpow
__clog10
clog10f32x
clog10f64
fdimf32x
fdimf64
fdim
nextdownf32x
nextdownf64
nextdown
fmax
fmaxf64
fmaxf32x
fmin
fminf64
fminf32x
__strtod_nan
nanf32x
nanf64
__iseqsig
canonicalizef32x
canonicalizef64
canonicalize
significand
ilogbf32x
ilogbf64
ilogb
llogbf32x
llogbf64
llogb
log1pf32x
log1pf64
log1p
scalblnf32x
scalblnf64
scalbln
fmaxmagf32x
fmaxmagf64
fmaxmag
fminmagf32x
fminmagf64
fminmag
exp2f32x
exp2f64
__exp2_finite
fmaximumf32x
fmaximumf64
fmaximum
fmaximum_magf32x
fmaximum_magf64
fmaximum_mag
fmaximum_numf32x
fmaximum_numf64
fmaximum_num
fmaximum_mag_numf32x
fmaximum_mag_numf64
fmaximum_mag_num
fminimumf32x
fminimumf64
fminimum
fminimum_magf32x
fminimum_magf64
fminimum_mag
fminimum_numf32x
fminimum_numf64
fminimum_num
fminimum_mag_numf32x
fminimum_mag_numf64
fminimum_mag_num
__acosf_finite
__acoshf_finite
__asinf_finite
__atan2f_finite
__atanhf_finite
__coshf_finite
__expf_finite
__fmodf_finite
hypotf32
__hypotf_finite
__j0f_finite
__y0f_finite
__j1f_finite
__y1f_finite
__jnf_finite
__ynf_finite
__lgammaf_r_finite
__logf_finite
__log10f_finite
__powf_finite
__remainderf_finite
__sinhf_finite
__sqrtf_finite
__gammaf_r_finite
cbrtf32
cbrtf
ceilf32
ceilf
erff32
erff
erfcf32
erfcf
expm1f32
expm1f
fabsf32
fabsf
floorf32
floorf
nextafterf32
nextafterf
nexttowardf
__fpclassifyf
truncf32
truncf
remquof32
remquof
log2f32
__log2f_finite
nearbyintf32
nearbyintf
sincosf32
sincosf
fmaf32
fmaf
llrintf
llrintf32
llroundf32
llroundf
exp10f32
__exp10f_finite
__issignalingf
__finitef
copysignf
copysignf32
modff32
modff
frexpf32
frexpf
__signbitf
scalbnf32
scalbnf
ldexpf32
ldexpf
nextupf32
nextupf
totalorderf
totalorderf32
totalordermagf
totalordermagf32
getpayloadf32
getpayloadf
setpayloadf32
setpayloadf
setpayloadsigf32
setpayloadsigf
roundevenf32
roundevenf
ufromfpf32
ufromfpf
ufromfpxf32
ufromfpxf
cargf32
cargf
conjf32
conjf
cimagf32
cimagf
crealf32
crealf
cabsf32
cabsf
__scalbf_finite
cacosf32
cacosf
cacoshf32
cacoshf
ccosf32
ccosf
ccoshf32
ccoshf
casinf32
casinf
csinf32
csinf
casinhf32
casinhf
csinhf32
csinhf
catanhf32
catanhf
catanf32
catanf
ctanf32
ctanf
ctanhf32
ctanhf
cexpf32
cexpf
clogf32
clogf
cprojf32
cprojf
csqrtf32
csqrtf
cpowf32
cpowf
__clog10f
clog10f32
fdimf32
fdimf
nextdownf32
nextdownf
fmaxf
fmaxf32
fminf
fminf32
__strtof_nan
nanf32
nanf
__iseqsigf
canonicalizef32
canonicalizef
significandf
ilogbf32
ilogbf
llogbf32
llogbf
log1pf32
log1pf
scalblnf32
scalblnf
fmaxmagf32
fmaxmagf
fminmagf32
fminmagf
exp2f32
__exp2f_finite
fmaximumf32
fmaximumf
fmaximum_magf32
fmaximum_magf
fmaximum_numf32
fmaximum_numf
fmaximum_mag_numf32
fmaximum_mag_numf
fminimumf32
fminimumf
fminimum_magf32
fminimum_magf
fminimum_numf32
fminimum_numf
fminimum_mag_numf32
fminimum_mag_numf
__acosf128_finite
__acoshf128_finite
__asinf128_finite
__atan2f128_finite
__atanhf128_finite
__coshf128_finite
__expf128_finite
__fmodf128_finite
__hypotf128_finite
__j0f128_finite
__y0f128_finite
__j1f128_finite
__y1f128_finite
__jnf128_finite
__ynf128_finite
__lgammaf128_r_finite
__logf128_finite
__log10f128_finite
__powf128_finite
__remainderf128_finite
__sinhf128_finite
__sqrtf128_finite
__gammaf128_r_finite
cbrtf128
ceilf128
erfcf128
erff128
expm1f128
fabsf128
floorf128
nextafterf128
__fpclassifyf128
truncf128
remquof128
__log2f128_finite
nearbyintf128
sincosf128
llrintf128
llroundf128
__exp10f128_finite
__issignalingf128
__isinff128
__finitef128
copysignf128
modff128
frexpf128
__signbitf128
scalbnf128
ldexpf128
nextupf128
totalorderf128
totalordermagf128
getpayloadf128
setpayloadf128
setpayloadsigf128
roundevenf128
ufromfpf128
ufromfpxf128
cargf128
conjf128
cimagf128
crealf128
cabsf128
cacosf128
cacoshf128
ccosf128
ccoshf128
casinf128
csinf128
casinhf128
csinhf128
catanhf128
catanf128
ctanf128
ctanhf128
cexpf128
clogf128
cprojf128
csqrtf128
cpowf128
clog10f128
fdimf128
nextdownf128
fmaxf128
fminf128
__strtof128_nan
nanf128
__iseqsigf128
canonicalizef128
ilogbf128
llogbf128
log1pf128
scalblnf128
fmaxmagf128
fminmagf128
atan2f128
exp10f128
exp2f128
fmodf128
hypotf128
j0f128
y0f128
j1f128
y1f128
jnf128
ynf128
log2f128
remainderf128
tgammaf128
lgammaf128
lgammaf128_r
__exp2f128_finite
fmaximumf128
fmaximum_magf128
fmaximum_numf128
fmaximum_mag_numf128
fminimumf128
fminimum_magf128
fminimum_numf128
fminimum_mag_numf128
__iscanonicall
f32addf32x
f32addf64
fadd
f32xaddf64
f32addf64x
faddl
f64addf64x
f32xaddf64x
daddl
f32addf128
f32xaddf128
f64addf128
f64xaddf128
f32divf32x
f32divf64
fdiv
f32xdivf64
f32divf64x
fdivl
f64divf64x
f32xdivf64x
ddivl
f32divf128
f32xdivf128
f64divf128
f64xdivf128
f32fmaf32x
f32fmaf64
ffma
f32fmaf64x
ffmal
f64fmaf64x
f32xfmaf64x
dfmal
f32fmaf128
f32xfmaf128
f64fmaf128
f64xfmaf128
f32mulf32x
f32mulf64
fmul
f32xmulf64
f32mulf64x
fmull
f64mulf64x
f32xmulf64x
dmull
f32mulf128
f32xmulf128
f64mulf128
f64xmulf128
f32sqrtf32x
f32sqrtf64
fsqrt
f32sqrtf64x
fsqrtl
f64sqrtf64x
f32xsqrtf64x
dsqrtl
f32sqrtf128
f32xsqrtf128
f64sqrtf128
f64xsqrtf128
f32subf32x
f32subf64
fsub
f32xsubf64
f32subf64x
fsubl
f64subf64x
f32xsubf64x
dsubl
f32subf128
f32xsubf128
f64subf128
f64xsubf128
libc.so.6
ld-linux-x86-64.so.2
libm.so.6
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.15
GLIBC_2.18
GLIBC_2.23
GLIBC_2.24
GLIBC_2.25
GLIBC_2.26
GLIBC_2.27
GLIBC_2.28
GLIBC_2.29
GLIBC_2.31
GLIBC_2.32
GLIBC_2.35
GLIBC_PRIVATE
21b268cc03662855d0cd983439.debug
.shstrtab
.note.gnu.property
.note.gnu.build-id
.note.ABI-tag
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_d
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.plt.sec
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
uzy%)
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
__libutil_version_placeholder
libc.so.6
libutil.so.1
GLIBC_2.2.5
:*3$"
8789f966c67ff2f816757a792529b1.debug
.shstrtab
.note.gnu.property
.note.gnu.build-id
.note.ABI-tag
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_d
.gnu.version_r
.rela.dyn
.init
.plt.got
.text
.fini
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
__libdl_version_placeholder
libc.so.6
libdl.so.2
GLIBC_2.2.5
GLIBC_2.3.3
GLIBC_2.3.4
:*3$"
3dc600b367d0f8a341669c80ad790e.debug
.shstrtab
.note.gnu.property
.note.gnu.build-id
.note.ABI-tag
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_d
.gnu.version_r
.rela.dyn
.init
.plt.got
.text
.fini
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
mU>/|
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
__libpthread_version_placeholder
libc.so.6
libpthread.so.0
GLIBC_2.2.5
GLIBC_2.2.6
GLIBC_2.3.2
GLIBC_2.3.3
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.11
GLIBC_2.12
GLIBC_2.18
GLIBC_2.28
GLIBC_2.30
GLIBC_2.31
:*3$"
untu 11.4.0-1ubuntu1~22.04) 11.4.0
LLu=/
../sysdeps/x86_64/crti.S
./csu
GNU AS 2.38
sockaddr_iso
sockaddr_inarp
__uint32_t
sin6_flowinfo
sockaddr_un
__uint16_t
short int
sockaddr_ipx
sin6_scope_id
sin_family
Elf64_Word
nhdr
sin6_port
__in6_u
float
RSEQ_CS_FLAG_NO_RESTART_ON_PREEMPT_BIT
sockaddr_ns
long long int
long long unsigned int
__u6_addr16
GNU C11 11.4.0 -mtune=generic -march=x86-64 -g -O2 -O3 -std=gnu11 -fgnu89-inline -fmerge-all-constants -frounding-math -fstack-protector-strong -fno-common -fmath-errno -fpie -fcf-protection=full -ftls-model=initial-exec -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection
__uint8_t
RSEQ_CS_FLAG_NO_RESTART_ON_SIGNAL_BIT
sin_addr
name
__int128
long double
sa_family_t
unsigned char
sin_zero
n_namesz
sockaddr_in6
n_descsz
s_addr
sin6_family
sin6_addr
sa_data
short unsigned int
sockaddr_dl
_Bool
in_addr_t
sockaddr_eon
n_type
RSEQ_CS_FLAG_NO_RESTART_ON_MIGRATE_BIT
sockaddr_x25
sin_port
__int32_t
in_port_t
sa_family
sockaddr_at
__u6_addr32
rseq_cs_flags_bit
__u6_addr8
__abi_tag
sockaddr_in
Elf64_Nhdr
sockaddr
sockaddr_ax25
desc
__libpthread_version_placeholder_1
GNU C11 11.4.0 -mtune=generic -march=x86-64 -g -O2 -O3 -std=gnu11 -fgnu89-inline -fmerge-all-constants -frounding-math -fstack-protector-strong -fno-common -fmath-errno -fPIC -fcf-protection=full -ftls-model=initial-exec -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection
../sysdeps/x86_64/crtn.S
../sysdeps/x86_64
crti.S
../sysdeps/x86/abi-note.c
../sysdeps/x86
../posix/bits
../bits
../elf
../sysdeps/unix/sysv/linux/bits
../inet/netinet
../csu
/usr/include/linux
types.h
stdint-intn.h
stdint-uintn.h
elf.h
sockaddr.h
$ORIGIN/../lib
/home/adnaan/miniconda3/envs/cysa/bin
/home/adnaan/miniconda3/envs/cysa/bin/../lib/
/home/adnaan/miniconda3/envs/cysa/bin/../lib/
/lib/x86_64-linux-gnu/libpthread.so.0
libpthread.so.0
/lib/x86_64-linux-gnu
libpthread.so.0
/lib/x86_64-linux-gnu/libdl.so.2
libdl.so.2
/lib/x86_64-linux-gnu
libdl.so.2
/lib/x86_64-linux-gnu/libutil.so.1
libutil.so.1
/lib/x86_64-linux-gnu
libutil.so.1
/lib/x86_64-linux-gnu/libm.so.6
libm.so.6
/lib/x86_64-linux-gnu
libm.so.6
/lib/x86_64-linux-gnu/libc.so.6
libc.so.6
/lib/x86_64-linux-gnu
libc.so.6
sBjC(
_rtld_global
_dl_audit_preinit
_dl_find_dso_for_object
_dl_exception_create
__libc_stack_end
_dl_catch_exception
_dl_fatal_printf
_dl_audit_symbind_alt
_dl_deallocate_tls
_dl_signal_exception
__tunable_get_val
__libc_enable_secure
__rseq_offset
__tls_get_addr
_dl_get_tls_static_info
_dl_exception_free
_dl_debug_state
_dl_argv
__rtld_version_placeholder
__nptl_change_stack_perm
_dl_allocate_tls_init
_rtld_global_ro
_dl_rtld_di_serinfo
_dl_x86_get_cpu_features
_dl_mcount
__rseq_flags
_dl_allocate_tls
__nptl_initial_report_events
_dl_signal_error
_dl_exception_create_format
__rseq_size
_r_debug
_dl_catch_error
ld-linux-x86-64.so.2
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.4
GLIBC_2.34
GLIBC_2.35
GLIBC_PRIVATE
glibc.rtld.nns
glibc.elision.skip_lock_after_retries
glibc.malloc.trim_threshold
MALLOC_TRIM_THRESHOLD_
glibc.malloc.perturb
MALLOC_PERTURB_
glibc.cpu.x86_shared_cache_size
glibc.pthread.rseq
glibc.mem.tagging
glibc.elision.tries
glibc.elision.enable
glibc.malloc.hugetlb
glibc.cpu.x86_rep_movsb_threshold
glibc.malloc.mxfast
glibc.rtld.dynamic_sort
glibc.elision.skip_lock_busy
glibc.malloc.top_pad
MALLOC_TOP_PAD_
glibc.cpu.x86_rep_stosb_threshold
glibc.cpu.x86_non_temporal_threshold
glibc.cpu.x86_shstk
glibc.pthread.stack_cache_size
glibc.cpu.hwcap_mask
LD_HWCAP_MASK
glibc.malloc.mmap_max
MALLOC_MMAP_MAX_
glibc.elision.skip_trylock_internal_abort
glibc.malloc.tcache_unsorted_limit
glibc.cpu.x86_ibt
glibc.cpu.hwcaps
glibc.elision.skip_lock_internal_abort
glibc.malloc.arena_max
MALLOC_ARENA_MAX
glibc.malloc.mmap_threshold
MALLOC_MMAP_THRESHOLD_
glibc.cpu.x86_data_cache_size
glibc.malloc.tcache_count
glibc.malloc.arena_test
MALLOC_ARENA_TEST
glibc.pthread.mutex_spin_count
glibc.rtld.optional_static_tls
glibc.malloc.tcache_max
glibc.malloc.check
MALLOC_CHECK_
sse2
x86_64
avx512_1
i586
i686
haswell
xeon_phi
glibc-hwcaps/x86-64-v3/glibc-hwcaps/x86-64-v2/tls/haswell/x86_64/tls/x86_64/
/home/adnaan/workspace/intro_to_cyber_safety/Memory_Dump/vulnerable.py
/home/adnaan/workspace/intro_to_cyber_safety/Memory_Dump/vulnerable.py
x86_64
python
Memory_Dump/vulnerable.py
SHELL=/bin/bash
COLORTERM=truecolor
VSCODE_DEBUGPY_ADAPTER_ENDPOINTS=/home/adnaan/.vscode-server/extensions/ms-python.debugpy-2025.4.1-linux-x64/.noConfigDebugAdapterEndpoints/endpoint-bb967eb7dffe2fd0.txt
WSL2_GUI_APPS_ENABLED=1
TERM_PROGRAM_VERSION=1.98.2
CONDA_EXE=/home/adnaan/miniconda3/bin/conda
WSL_DISTRO_NAME=Ubuntu
PYDEVD_DISABLE_FILE_VALIDATION=1
NAME=adnaanvictus
PWD=/home/adnaan/workspace/intro_to_cyber_safety
LOGNAME=adnaan
CONDA_ROOT=/home/adnaan/miniconda3
CONDA_PREFIX=/home/adnaan/miniconda3/envs/cysa
BUNDLED_DEBUGPY_PATH=/home/adnaan/.vscode-server/extensions/ms-python.debugpy-2025.4.1-linux-x64/bundled/libs/debugpy
VSCODE_GIT_ASKPASS_NODE=/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/node
HOME=/home/adnaan
LANG=C.UTF-8
WSL_INTEROP=/run/WSL/509101_interop
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
WAYLAND_DISPLAY=wayland-0
CONDA_PROMPT_MODIFIER=(cysa) 
GIT_ASKPASS=/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/extensions/git/dist/askpass.sh
VSCODE_GIT_ASKPASS_EXTRA_ARGS=
LESSCLOSE=/usr/bin/lesspipe %s %s
TERM=xterm-256color
LESSOPEN=| /usr/bin/lesspipe %s
USER=adnaan
VSCODE_GIT_IPC_HANDLE=/run/user/1000/vscode-git-2e15e62554.sock
CONDA_SHLVL=2
DISPLAY=:0
SHLVL=1
CONDA_PYTHON_EXE=/home/adnaan/miniconda3/bin/python
XDG_RUNTIME_DIR=/run/user/1000/
PS1=\[
]633;A
\](cysa) (base) \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ \[
]633;B
CONDA_DEFAULT_ENV=cysa
WSLENV=VSCODE_WSL_EXT_LOCATION/up
VSCODE_GIT_ASKPASS_MAIN=/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/extensions/git/dist/askpass-main.js
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
PATH=/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/remote-cli:/home/adnaan/miniconda3/envs/cysa/bin:/home/adnaan/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/libnvvp:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/System32/OpenSSH:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/Docker/host/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.2.0:/mnt/c/windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Program Files/HP/HP One Agent:/mnt/c/Program Files/dotnet:/mnt/c/Users/adnaa/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/adnaa/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/adnaa/AppData/Local/GitHubDesktop/bin:/mnt/c/Program Files/JetBrains/PyCharm Community Edition 2023.2.1/bin:/mnt/c/Users/adnaa/AppData/Local/Muse Hub/lib:/snap/bin:/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/remote-cli:/home/adnaan/miniconda3/bin:/home/adnaan/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/libnvvp:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/System32/OpenSSH:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/Docker/host/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.2.0:/mnt/c/windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Program Files/HP/HP One Agent:/mnt/c/Program Files/dotnet:/mnt/c/Users/adnaa/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/adnaa/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/adnaa/AppData/Local/GitHubDesktop/bin:/mnt/c/Program Files/JetBrains/PyCharm Community Edition 2023.2.1/bin:/mnt/c/Users/adnaa/AppData/Local/Muse Hub/lib:/snap/bin:/home/adnaan/.vscode-server/bin/ddc367ed5c8936efe395cffeec279b04ffd7db78/bin/remote-cli:/home/adnaan/miniconda3/bin:/home/adnaan/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/libnvvp:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/System32/OpenSSH:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/Docker/host/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.2.0:/mnt/c/windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Program Files/HP/HP One Agent:/mnt/c/Program Files/dotnet:/mnt/c/Users/adnaa/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/adnaa/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/adnaa/AppData/Local/GitHubDesktop/bin:/mnt/c/Program Files/JetBrains/PyCharm Community Edition 2023.2.1/bin:/mnt/c/Users/adnaa/AppData/Local/Muse Hub/lib:/snap/bin
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
HOSTTYPE=x86_64
CONDA_PREFIX_1=/home/adnaan/miniconda3
CONDA_PREFIX_2=/home/adnaan/miniconda3/envs/cysa
PULSE_SERVER=unix:/mnt/wslg/PulseServer
TERM_PROGRAM=vscode
VSCODE_IPC_HOOK_CLI=/run/user/1000/vscode-ipc-a2e93dae-175b-42ff-a3f4-e1be61f2f27a.sock
_=/home/adnaan/miniconda3/envs/cysa/bin/python
/home/adnaan/miniconda3/envs/cysa/bin/python
bemX
__vdso_gettimeofday
__vdso_time
__vdso_clock_gettime
__vdso_clock_getres
__vdso_getcpu
linux-vdso.so.1
LINUX_2.6
Linux
Linux
'j$H
ATSH
[A\]
AVAUATSH
[A\A]A^]
[A\A]A^]
`u@A
{ H=
GCC: (GNU) 11.2.0
.shstrtab
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_d
.dynamic
.note
.eh_frame_hdr
.eh_frame
.text
.altinstructions
.altinstr_replacement
.comment
CORE
python
python
CORE
CORE
getgrouplist
LINUX
getgrouplist
IGISCORE
CORE
ELIFCORE
/home/adnaan/miniconda3/envs/cysa/bin/python3.12
/home/adnaan/miniconda3/envs/cysa/bin/python3.12
/home/adnaan/miniconda3/envs/cysa/bin/python3.12
/home/adnaan/miniconda3/envs/cysa/bin/python3.12
/home/adnaan/miniconda3/envs/cysa/bin/python3.12
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
/home/adnaan/miniconda3/envs/cysa/lib/python3.12/lib-dynload/termios.cpython-312-x86_64-linux-gnu.so
/usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache
/usr/lib/locale/C.utf8/LC_CTYPE
/usr/lib/x86_64-linux-gnu/libc.so.6
/usr/lib/x86_64-linux-gnu/libc.so.6
/usr/lib/x86_64-linux-gnu/libc.so.6
/usr/lib/x86_64-linux-gnu/libc.so.6
/usr/lib/x86_64-linux-gnu/libc.so.6
/usr/lib/x86_64-linux-gnu/libc.so.6
/usr/lib/x86_64-linux-gnu/libm.so.6
/usr/lib/x86_64-linux-gnu/libm.so.6
/usr/lib/x86_64-linux-gnu/libm.so.6
/usr/lib/x86_64-linux-gnu/libm.so.6
/usr/lib/x86_64-linux-gnu/libm.so.6
/usr/lib/x86_64-linux-gnu/libutil.so.1
/usr/lib/x86_64-linux-gnu/libutil.so.1
/usr/lib/x86_64-linux-gnu/libutil.so.1
/usr/lib/x86_64-linux-gnu/libutil.so.1
/usr/lib/x86_64-linux-gnu/libutil.so.1
/usr/lib/x86_64-linux-gnu/libdl.so.2
/usr/lib/x86_64-linux-gnu/libdl.so.2
/usr/lib/x86_64-linux-gnu/libdl.so.2
/usr/lib/x86_64-linux-gnu/libdl.so.2
/usr/lib/x86_64-linux-gnu/libdl.so.2
/usr/lib/x86_64-linux-gnu/libpthread.so.0
/usr/lib/x86_64-linux-gnu/libpthread.so.0
/usr/lib/x86_64-linux-gnu/libpthread.so.0
/usr/lib/x86_64-linux-gnu/libpthread.so.0
/usr/lib/x86_64-linux-gnu/libpthread.so.0
/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
<?xml version="1.0"?>
<!DOCTYPE target SYSTEM "gdb-target.dtd">
<target>
  <architecture>i386:x86-64</architecture>
  <osabi>GNU/Linux</osabi>
  <feature name="org.gnu.gdb.i386.core">
    <flags id="i386_eflags" size="4">
      <field name="CF" start="0" end="0" type="bool"/>
      <field name="" start="1" end="1" type="bool"/>
      <field name="PF" start="2" end="2" type="bool"/>
      <field name="AF" start="4" end="4" type="bool"/>
      <field name="ZF" start="6" end="6" type="bool"/>
      <field name="SF" start="7" end="7" type="bool"/>
      <field name="TF" start="8" end="8" type="bool"/>
      <field name="IF" start="9" end="9" type="bool"/>
      <field name="DF" start="10" end="10" type="bool"/>
      <field name="OF" start="11" end="11" type="bool"/>
      <field name="NT" start="14" end="14" type="bool"/>
      <field name="RF" start="16" end="16" type="bool"/>
      <field name="VM" start="17" end="17" type="bool"/>
      <field name="AC" start="18" end="18" type="bool"/>
      <field name="VIF" start="19" end="19" type="bool"/>
      <field name="VIP" start="20" end="20" type="bool"/>
      <field name="ID" start="21" end="21" type="bool"/>
    </flags>
    <reg name="rax" bitsize="64" type="int64" regnum="0"/>
    <reg name="rbx" bitsize="64" type="int64" regnum="1"/>
    <reg name="rcx" bitsize="64" type="int64" regnum="2"/>
    <reg name="rdx" bitsize="64" type="int64" regnum="3"/>
    <reg name="rsi" bitsize="64" type="int64" regnum="4"/>
    <reg name="rdi" bitsize="64" type="int64" regnum="5"/>
    <reg name="rbp" bitsize="64" type="data_ptr" regnum="6"/>
    <reg name="rsp" bitsize="64" type="data_ptr" regnum="7"/>
    <reg name="r8" bitsize="64" type="int64" regnum="8"/>
    <reg name="r9" bitsize="64" type="int64" regnum="9"/>
    <reg name="r10" bitsize="64" type="int64" regnum="10"/>
    <reg name="r11" bitsize="64" type="int64" regnum="11"/>
    <reg name="r12" bitsize="64" type="int64" regnum="12"/>
    <reg name="r13" bitsize="64" type="int64" regnum="13"/>
    <reg name="r14" bitsize="64" type="int64" regnum="14"/>
    <reg name="r15" bitsize="64" type="int64" regnum="15"/>
    <reg name="rip" bitsize="64" type="code_ptr" regnum="16"/>
    <reg name="eflags" bitsize="32" type="i386_eflags" regnum="17"/>
    <reg name="cs" bitsize="32" type="int32" regnum="18"/>
    <reg name="ss" bitsize="32" type="int32" regnum="19"/>
    <reg name="ds" bitsize="32" type="int32" regnum="20"/>
    <reg name="es" bitsize="32" type="int32" regnum="21"/>
    <reg name="fs" bitsize="32" type="int32" regnum="22"/>
    <reg name="gs" bitsize="32" type="int32" regnum="23"/>
    <reg name="st0" bitsize="80" type="i387_ext" regnum="24"/>
    <reg name="st1" bitsize="80" type="i387_ext" regnum="25"/>
    <reg name="st2" bitsize="80" type="i387_ext" regnum="26"/>
    <reg name="st3" bitsize="80" type="i387_ext" regnum="27"/>
    <reg name="st4" bitsize="80" type="i387_ext" regnum="28"/>
    <reg name="st5" bitsize="80" type="i387_ext" regnum="29"/>
    <reg name="st6" bitsize="80" type="i387_ext" regnum="30"/>
    <reg name="st7" bitsize="80" type="i387_ext" regnum="31"/>
    <reg name="fctrl" bitsize="32" type="int" regnum="32" group="float"/>
    <reg name="fstat" bitsize="32" type="int" regnum="33" group="float"/>
    <reg name="ftag" bitsize="32" type="int" regnum="34" group="float"/>
    <reg name="fiseg" bitsize="32" type="int" regnum="35" group="float"/>
    <reg name="fioff" bitsize="32" type="int" regnum="36" group="float"/>
    <reg name="foseg" bitsize="32" type="int" regnum="37" group="float"/>
    <reg name="fooff" bitsize="32" type="int" regnum="38" group="float"/>
    <reg name="fop" bitsize="32" type="int" regnum="39" group="float"/>
  </feature>
  <feature name="org.gnu.gdb.i386.sse">
    <vector id="v8bf16" type="bfloat16" count="8"/>
    <vector id="v8h" type="ieee_half" count="8"/>
    <vector id="v4f" type="ieee_single" count="4"/>
    <vector id="v2d" type="ieee_double" count="2"/>
    <vector id="v16i8" type="int8" count="16"/>
    <vector id="v8i16" type="int16" count="8"/>
    <vector id="v4i32" type="int32" count="4"/>
    <vector id="v2i64" type="int64" count="2"/>
    <union id="vec128">
      <field name="v8_bfloat16" type="v8bf16"/>
      <field name="v8_half" type="v8h"/>
      <field name="v4_float" type="v4f"/>
      <field name="v2_double" type="v2d"/>
      <field name="v16_int8" type="v16i8"/>
      <field name="v8_int16" type="v8i16"/>
      <field name="v4_int32" type="v4i32"/>
      <field name="v2_int64" type="v2i64"/>
      <field name="uint128" type="uint128"/>
    </union>
    <flags id="i386_mxcsr" size="4">
      <field name="IE" start="0" end="0" type="bool"/>
      <field name="DE" start="1" end="1" type="bool"/>
      <field name="ZE" start="2" end="2" type="bool"/>
      <field name="OE" start="3" end="3" type="bool"/>
      <field name="UE" start="4" end="4" type="bool"/>
      <field name="PE" start="5" end="5" type="bool"/>
      <field name="DAZ" start="6" end="6" type="bool"/>
      <field name="IM" start="7" end="7" type="bool"/>
      <field name="DM" start="8" end="8" type="bool"/>
      <field name="ZM" start="9" end="9" type="bool"/>
      <field name="OM" start="10" end="10" type="bool"/>
      <field name="UM" start="11" end="11" type="bool"/>
      <field name="PM" start="12" end="12" type="bool"/>
      <field name="FZ" start="15" end="15" type="bool"/>
    </flags>
    <reg name="xmm0" bitsize="128" type="vec128" regnum="40"/>
    <reg name="xmm1" bitsize="128" type="vec128" regnum="41"/>
    <reg name="xmm2" bitsize="128" type="vec128" regnum="42"/>
    <reg name="xmm3" bitsize="128" type="vec128" regnum="43"/>
    <reg name="xmm4" bitsize="128" type="vec128" regnum="44"/>
    <reg name="xmm5" bitsize="128" type="vec128" regnum="45"/>
    <reg name="xmm6" bitsize="128" type="vec128" regnum="46"/>
    <reg name="xmm7" bitsize="128" type="vec128" regnum="47"/>
    <reg name="xmm8" bitsize="128" type="vec128" regnum="48"/>
    <reg name="xmm9" bitsize="128" type="vec128" regnum="49"/>
    <reg name="xmm10" bitsize="128" type="vec128" regnum="50"/>
    <reg name="xmm11" bitsize="128" type="vec128" regnum="51"/>
    <reg name="xmm12" bitsize="128" type="vec128" regnum="52"/>
    <reg name="xmm13" bitsize="128" type="vec128" regnum="53"/>
    <reg name="xmm14" bitsize="128" type="vec128" regnum="54"/>
    <reg name="xmm15" bitsize="128" type="vec128" regnum="55"/>
    <reg name="mxcsr" bitsize="32" type="i386_mxcsr" regnum="56" group="vector"/>
  </feature>
  <feature name="org.gnu.gdb.i386.linux">
    <reg name="orig_rax" bitsize="64" type="int" regnum="57"/>
  </feature>
  <feature name="org.gnu.gdb.i386.segments">
    <reg name="fs_base" bitsize="64" type="int" regnum="58"/>
    <reg name="gs_base" bitsize="64" type="int" regnum="59"/>
  </feature>
  <feature name="org.gnu.gdb.i386.avx">
    <reg name="ymm0h" bitsize="128" type="uint128" regnum="60"/>
    <reg name="ymm1h" bitsize="128" type="uint128" regnum="61"/>
    <reg name="ymm2h" bitsize="128" type="uint128" regnum="62"/>
    <reg name="ymm3h" bitsize="128" type="uint128" regnum="63"/>
    <reg name="ymm4h" bitsize="128" type="uint128" regnum="64"/>
    <reg name="ymm5h" bitsize="128" type="uint128" regnum="65"/>
    <reg name="ymm6h" bitsize="128" type="uint128" regnum="66"/>
    <reg name="ymm7h" bitsize="128" type="uint128" regnum="67"/>
    <reg name="ymm8h" bitsize="128" type="uint128" regnum="68"/>
    <reg name="ymm9h" bitsize="128" type="uint128" regnum="69"/>
    <reg name="ymm10h" bitsize="128" type="uint128" regnum="70"/>
    <reg name="ymm11h" bitsize="128" type="uint128" regnum="71"/>
    <reg name="ymm12h" bitsize="128" type="uint128" regnum="72"/>
    <reg name="ymm13h" bitsize="128" type="uint128" regnum="73"/>
    <reg name="ymm14h" bitsize="128" type="uint128" regnum="74"/>
    <reg name="ymm15h" bitsize="128" type="uint128" regnum="75"/>
  </feature>
</target>
.shstrtab
note0
load
